<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="m">BtcTesting</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="id">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="id">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="id">Security</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="id">Cryptography</span>

<span class="c">/// https://en.bitcoin.it/wiki/Base58Check_encoding</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="fn">base58encode</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="id">hash</span><span class="pn">:</span><span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="vt">byte</span><span class="pn">[</span><span class="pn">]</span><span class="pn">)</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="id">code_string</span> <span class="o">=</span> <span class="pn">[</span><span class="s">&#39;1&#39;</span><span class="o">..</span><span class="s">&#39;9&#39;</span><span class="pn">]</span><span class="o">@</span><span class="pn">[</span><span class="s">&#39;A&#39;</span><span class="o">..</span><span class="s">&#39;H&#39;</span><span class="pn">]</span><span class="o">@</span><span class="pn">[</span><span class="s">&#39;J&#39;</span><span class="o">..</span><span class="s">&#39;N&#39;</span><span class="pn">]</span><span class="o">@</span><span class="pn">[</span><span class="s">&#39;P&#39;</span><span class="o">..</span><span class="s">&#39;Z&#39;</span><span class="pn">]</span><span class="o">@</span><span class="pn">[</span><span class="s">&#39;a&#39;</span><span class="o">..</span><span class="s">&#39;k&#39;</span><span class="pn">]</span><span class="o">@</span><span class="pn">[</span><span class="s">&#39;m&#39;</span><span class="o">..</span><span class="s">&#39;z&#39;</span><span class="pn">]</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="m">List</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="id">toArray</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 12)" onmouseover="showTip(event, 'fs11', 12)" class="id">data</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 13)" onmouseover="showTip(event, 'fs6', 13)" class="id">hash</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="m">Array</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="id">toList</span>
    
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs14', 16)" onmouseover="showTip(event, 'fs14', 16)" class="fn">toBigInt</span> <span class="o">=</span> <span class="k">function</span>
        <span class="pn">|</span><span class="pn">[</span><span class="pn">]</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs15', 17)" onmouseover="showTip(event, 'fs15', 17)" class="id">acc</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs15', 18)" onmouseover="showTip(event, 'fs15', 18)" class="id">acc</span>
        <span class="pn">|</span><span onmouseout="hideTip(event, 'fs16', 19)" onmouseover="showTip(event, 'fs16', 19)" class="id">h</span><span class="uc">::</span><span onmouseout="hideTip(event, 'fs17', 20)" onmouseover="showTip(event, 'fs17', 20)" class="id">t</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="id">acc</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 22)" onmouseover="showTip(event, 'fs14', 22)" class="fn">toBigInt</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs17', 23)" onmouseover="showTip(event, 'fs17', 23)" class="id">t</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs15', 24)" onmouseover="showTip(event, 'fs15', 24)" class="id">acc</span><span class="o">*</span><span class="m">256I</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="vt">bigint</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 26)" onmouseover="showTip(event, 'fs19', 26)" class="fn">int</span> <span onmouseout="hideTip(event, 'fs16', 27)" onmouseover="showTip(event, 'fs16', 27)" class="id">h</span><span class="pn">)</span><span class="pn">)</span> 

    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs20', 28)" onmouseover="showTip(event, 'fs20', 28)" class="fn">base58encodeLeft</span> <span class="o">=</span> <span class="k">function</span>
        <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs21', 29)" onmouseover="showTip(event, 'fs21', 29)" class="id">i</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs22', 30)" onmouseover="showTip(event, 'fs22', 30)" class="id">acc</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs21', 31)" onmouseover="showTip(event, 'fs21', 31)" class="id">i</span><span class="o">&gt;</span><span class="m">0I</span> <span class="k">-&gt;</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 32)" onmouseover="showTip(event, 'fs23', 32)" class="mv">reminder</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 33)" onmouseover="showTip(event, 'fs24', 33)" class="fn">ref</span> <span class="m">0I</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs25', 34)" onmouseover="showTip(event, 'fs25', 34)" class="id">dividend</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 35)" onmouseover="showTip(event, 'fs18', 35)" class="vt">bigint</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs26', 36)" onmouseover="showTip(event, 'fs26', 36)" class="id">DivRem</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs21', 37)" onmouseover="showTip(event, 'fs21', 37)" class="id">i</span><span class="pn">,</span> <span class="m">58I</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs23', 38)" onmouseover="showTip(event, 'fs23', 38)" class="mv">reminder</span><span class="pn">)</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs27', 39)" onmouseover="showTip(event, 'fs27', 39)" class="id">char</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 40)" onmouseover="showTip(event, 'fs8', 40)" class="id">code_string</span><span class="m">.</span><span class="pn">[</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 41)" onmouseover="showTip(event, 'fs19', 41)" class="fn">int</span><span class="pn">)</span><span onmouseout="hideTip(event, 'fs23', 42)" onmouseover="showTip(event, 'fs23', 42)" class="mv">reminder</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs28', 43)" onmouseover="showTip(event, 'fs28', 43)" class="id">contents</span><span class="pn">]</span>
            <span onmouseout="hideTip(event, 'fs20', 44)" onmouseover="showTip(event, 'fs20', 44)" class="fn">base58encodeLeft</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs25', 45)" onmouseover="showTip(event, 'fs25', 45)" class="id">dividend</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs27', 46)" onmouseover="showTip(event, 'fs27', 46)" class="id">char</span><span class="uc">::</span><span onmouseout="hideTip(event, 'fs22', 47)" onmouseover="showTip(event, 'fs22', 47)" class="id">acc</span><span class="pn">)</span>
        <span class="pn">|</span> <span class="id">_</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs22', 48)" onmouseover="showTip(event, 'fs22', 48)" class="id">acc</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs22', 49)" onmouseover="showTip(event, 'fs22', 49)" class="id">acc</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs29', 50)" onmouseover="showTip(event, 'fs29', 50)" class="id">appendOnes</span> <span class="o">=</span> 
        <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs30', 51)" onmouseover="showTip(event, 'fs30', 51)" class="fn">insertOnes</span> <span class="o">=</span> <span class="k">function</span>
            <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs16', 52)" onmouseover="showTip(event, 'fs16', 52)" class="id">h</span><span class="uc">::</span><span onmouseout="hideTip(event, 'fs17', 53)" onmouseover="showTip(event, 'fs17', 53)" class="id">t</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs22', 54)" onmouseover="showTip(event, 'fs22', 54)" class="id">acc</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs16', 55)" onmouseover="showTip(event, 'fs16', 55)" class="id">h</span><span class="o">=</span><span class="n">0uy</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs30', 56)" onmouseover="showTip(event, 'fs30', 56)" class="fn">insertOnes</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs17', 57)" onmouseover="showTip(event, 'fs17', 57)" class="id">t</span><span class="pn">,</span> <span class="s">&#39;1&#39;</span><span class="uc">::</span><span onmouseout="hideTip(event, 'fs22', 58)" onmouseover="showTip(event, 'fs22', 58)" class="id">acc</span><span class="pn">)</span>
            <span class="pn">|</span> <span class="id">_</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs22', 59)" onmouseover="showTip(event, 'fs22', 59)" class="id">acc</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs22', 60)" onmouseover="showTip(event, 'fs22', 60)" class="id">acc</span>
        <span onmouseout="hideTip(event, 'fs30', 61)" onmouseover="showTip(event, 'fs30', 61)" class="fn">insertOnes</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs11', 62)" onmouseover="showTip(event, 'fs11', 62)" class="id">data</span><span class="pn">,</span> <span class="pn">[</span><span class="pn">]</span><span class="pn">)</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 63)" onmouseover="showTip(event, 'fs31', 63)" class="id">big</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs14', 64)" onmouseover="showTip(event, 'fs14', 64)" class="fn">toBigInt</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs11', 65)" onmouseover="showTip(event, 'fs11', 65)" class="id">data</span><span class="pn">,</span> <span class="m">0I</span><span class="pn">)</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 66)" onmouseover="showTip(event, 'fs32', 66)" class="id">encoded</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs29', 67)" onmouseover="showTip(event, 'fs29', 67)" class="id">appendOnes</span> <span class="o">@</span> <span onmouseout="hideTip(event, 'fs20', 68)" onmouseover="showTip(event, 'fs20', 68)" class="fn">base58encodeLeft</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs31', 69)" onmouseover="showTip(event, 'fs31', 69)" class="id">big</span><span class="pn">,</span> <span class="pn">[</span><span class="pn">]</span><span class="pn">)</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 70)" onmouseover="showTip(event, 'fs9', 70)" class="m">List</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs10', 71)" onmouseover="showTip(event, 'fs10', 71)" class="id">toArray</span>
    <span onmouseout="hideTip(event, 'fs33', 72)" onmouseover="showTip(event, 'fs33', 72)" class="rt">String</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs32', 73)" onmouseover="showTip(event, 'fs32', 73)" class="id">encoded</span><span class="pn">)</span>

<span class="c">/// String to byte-array. You could use Seq.pairwise, but this is taken from:</span>
<span class="c">/// http://www.fssnip.net/gf</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 74)" onmouseover="showTip(event, 'fs34', 74)" class="fn">fromHex</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs35', 75)" onmouseover="showTip(event, 'fs35', 75)" class="id">s</span><span class="pn">:</span><span onmouseout="hideTip(event, 'fs36', 76)" onmouseover="showTip(event, 'fs36', 76)" class="rt">string</span><span class="pn">)</span> <span class="o">=</span> 
  <span onmouseout="hideTip(event, 'fs35', 77)" onmouseover="showTip(event, 'fs35', 77)" class="id">s</span>
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs37', 78)" onmouseover="showTip(event, 'fs37', 78)" class="m">Seq</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs38', 79)" onmouseover="showTip(event, 'fs38', 79)" class="id">windowed</span> <span class="n">2</span>
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs37', 80)" onmouseover="showTip(event, 'fs37', 80)" class="m">Seq</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs39', 81)" onmouseover="showTip(event, 'fs39', 81)" class="id">mapi</span> <span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs40', 82)" onmouseover="showTip(event, 'fs40', 82)" class="id">i</span> <span onmouseout="hideTip(event, 'fs41', 83)" onmouseover="showTip(event, 'fs41', 83)" class="id">j</span> <span class="k">-&gt;</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs40', 84)" onmouseover="showTip(event, 'fs40', 84)" class="id">i</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs41', 85)" onmouseover="showTip(event, 'fs41', 85)" class="id">j</span><span class="pn">)</span><span class="pn">)</span>
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs37', 86)" onmouseover="showTip(event, 'fs37', 86)" class="m">Seq</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs42', 87)" onmouseover="showTip(event, 'fs42', 87)" class="id">filter</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs40', 88)" onmouseover="showTip(event, 'fs40', 88)" class="id">i</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs41', 89)" onmouseover="showTip(event, 'fs41', 89)" class="id">j</span><span class="pn">)</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs40', 90)" onmouseover="showTip(event, 'fs40', 90)" class="id">i</span> <span class="o">%</span> <span class="n">2</span><span class="o">=</span><span class="n">0</span><span class="pn">)</span>
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs37', 91)" onmouseover="showTip(event, 'fs37', 91)" class="m">Seq</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs43', 92)" onmouseover="showTip(event, 'fs43', 92)" class="id">map</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span class="id">_</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs41', 93)" onmouseover="showTip(event, 'fs41', 93)" class="id">j</span><span class="pn">)</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs44', 94)" onmouseover="showTip(event, 'fs44', 94)" class="vt">Byte</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs45', 95)" onmouseover="showTip(event, 'fs45', 95)" class="id">Parse</span><span class="pn">(</span><span class="k">new</span> <span onmouseout="hideTip(event, 'fs2', 96)" onmouseover="showTip(event, 'fs2', 96)" class="rt">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs33', 97)" onmouseover="showTip(event, 'fs33', 97)" class="id">String</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs41', 98)" onmouseover="showTip(event, 'fs41', 98)" class="id">j</span><span class="pn">)</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs2', 99)" onmouseover="showTip(event, 'fs2', 99)" class="id">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs46', 100)" onmouseover="showTip(event, 'fs46', 100)" class="id">Globalization</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs47', 101)" onmouseover="showTip(event, 'fs47', 101)" class="vt">NumberStyles</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs48', 102)" onmouseover="showTip(event, 'fs48', 102)" class="id">AllowHexSpecifier</span><span class="pn">)</span><span class="pn">)</span>
  <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs12', 103)" onmouseover="showTip(event, 'fs12', 103)" class="m">Array</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs49', 104)" onmouseover="showTip(event, 'fs49', 104)" class="id">ofSeq</span>
        
<span class="c">/// https://en.bitcoin.it/wiki/Wallet_import_format</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs50', 105)" onmouseover="showTip(event, 'fs50', 105)" class="fn">keyToWif</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs51', 106)" onmouseover="showTip(event, 'fs51', 106)" class="id">key</span><span class="pn">:</span><span onmouseout="hideTip(event, 'fs36', 107)" onmouseover="showTip(event, 'fs36', 107)" class="rt">string</span><span class="pn">)</span> <span class="o">=</span>
    <span class="k">use</span> <span onmouseout="hideTip(event, 'fs52', 108)" onmouseover="showTip(event, 'fs52', 108)" class="id">sha</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs53', 109)" onmouseover="showTip(event, 'fs53', 109)" class="d">SHA256Managed</span><span class="pn">(</span><span class="pn">)</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs54', 110)" onmouseover="showTip(event, 'fs54', 110)" class="id">extended</span> <span class="o">=</span> <span class="s">&quot;80&quot;</span><span class="o">+</span><span onmouseout="hideTip(event, 'fs51', 111)" onmouseover="showTip(event, 'fs51', 111)" class="id">key</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs34', 112)" onmouseover="showTip(event, 'fs34', 112)" class="fn">fromHex</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs55', 113)" onmouseover="showTip(event, 'fs55', 113)" class="id">hashCheck</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs54', 114)" onmouseover="showTip(event, 'fs54', 114)" class="id">extended</span>
                    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs52', 115)" onmouseover="showTip(event, 'fs52', 115)" class="fn">sha</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs28', 116)" onmouseover="showTip(event, 'fs28', 116)" class="id">ComputeHash</span>
                    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs52', 117)" onmouseover="showTip(event, 'fs52', 117)" class="fn">sha</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs28', 118)" onmouseover="showTip(event, 'fs28', 118)" class="id">ComputeHash</span>
    <span onmouseout="hideTip(event, 'fs12', 119)" onmouseover="showTip(event, 'fs12', 119)" class="m">Array</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs56', 120)" onmouseover="showTip(event, 'fs56', 120)" class="id">append</span> <span onmouseout="hideTip(event, 'fs54', 121)" onmouseover="showTip(event, 'fs54', 121)" class="id">extended</span> <span onmouseout="hideTip(event, 'fs55', 122)" onmouseover="showTip(event, 'fs55', 122)" class="id">hashCheck</span><span class="m">.</span><span class="pn">[</span><span class="n">0..</span><span class="n">3</span><span class="pn">]</span> 
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs12', 123)" onmouseover="showTip(event, 'fs12', 123)" class="m">Array</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs57', 124)" onmouseover="showTip(event, 'fs57', 124)" class="id">rev</span>
    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs5', 125)" onmouseover="showTip(event, 'fs5', 125)" class="fn">base58encode</span>

<span class="c">/// Generates random HEX-string</span>
<span class="c">// More random options are available in MathNet.Numerics.FSharp Nuget-package</span>
<span class="c">// namespace MathNet.Numerics.Random</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs58', 126)" onmouseover="showTip(event, 'fs58', 126)" class="fn">privateKey</span><span class="pn">(</span><span class="pn">)</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs59', 127)" onmouseover="showTip(event, 'fs59', 127)" class="id">chars</span> <span class="o">=</span> <span class="pn">[</span><span class="s">&#39;a&#39;</span><span class="o">..</span><span class="s">&#39;f&#39;</span><span class="pn">]</span><span class="o">@</span><span class="pn">[</span><span class="s">&#39;0&#39;</span><span class="o">..</span><span class="s">&#39;9&#39;</span><span class="pn">]</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs9', 128)" onmouseover="showTip(event, 'fs9', 128)" class="m">List</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs10', 129)" onmouseover="showTip(event, 'fs10', 129)" class="id">toArray</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs60', 130)" onmouseover="showTip(event, 'fs60', 130)" class="id">length</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs59', 131)" onmouseover="showTip(event, 'fs59', 131)" class="id">chars</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs28', 132)" onmouseover="showTip(event, 'fs28', 132)" class="id">Length</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs61', 133)" onmouseover="showTip(event, 'fs61', 133)" class="id">data</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs12', 134)" onmouseover="showTip(event, 'fs12', 134)" class="m">Array</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs62', 135)" onmouseover="showTip(event, 'fs62', 135)" class="id">zeroCreate</span> <span class="n">64</span>
    <span class="k">use</span> <span onmouseout="hideTip(event, 'fs63', 136)" onmouseover="showTip(event, 'fs63', 136)" class="id">provider</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs64', 137)" onmouseover="showTip(event, 'fs64', 137)" class="d">RNGCryptoServiceProvider</span><span class="pn">(</span><span class="pn">)</span>
    <span class="k">do</span> <span onmouseout="hideTip(event, 'fs63', 138)" onmouseover="showTip(event, 'fs63', 138)" class="fn">provider</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs28', 139)" onmouseover="showTip(event, 'fs28', 139)" class="id">GetNonZeroBytes</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs61', 140)" onmouseover="showTip(event, 'fs61', 140)" class="id">data</span><span class="pn">)</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs65', 141)" onmouseover="showTip(event, 'fs65', 141)" class="id">random</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs61', 142)" onmouseover="showTip(event, 'fs61', 142)" class="id">data</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs12', 143)" onmouseover="showTip(event, 'fs12', 143)" class="m">Array</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs66', 144)" onmouseover="showTip(event, 'fs66', 144)" class="id">map</span><span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs67', 145)" onmouseover="showTip(event, 'fs67', 145)" class="id">b</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs59', 146)" onmouseover="showTip(event, 'fs59', 146)" class="id">chars</span><span class="m">.</span><span class="pn">[</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 147)" onmouseover="showTip(event, 'fs19', 147)" class="fn">int</span><span class="pn">)</span><span onmouseout="hideTip(event, 'fs67', 148)" onmouseover="showTip(event, 'fs67', 148)" class="id">b</span> <span class="o">%</span> <span onmouseout="hideTip(event, 'fs60', 149)" onmouseover="showTip(event, 'fs60', 149)" class="id">length</span> <span class="pn">]</span><span class="pn">)</span>
    <span onmouseout="hideTip(event, 'fs2', 150)" onmouseover="showTip(event, 'fs2', 150)" class="rt">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs33', 151)" onmouseover="showTip(event, 'fs33', 151)" class="id">String</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs65', 152)" onmouseover="showTip(event, 'fs65', 152)" class="id">random</span><span class="pn">)</span>

<span class="c">// let pk = privateKey();;</span>
<span class="c">// pk |&gt; keyToWif;;</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">module BtcTesting</div>
<div class="tip" id="fs2">namespace System</div>
<div class="tip" id="fs3">namespace System.Security</div>
<div class="tip" id="fs4">namespace System.Security.Cryptography</div>
<div class="tip" id="fs5">val base58encode : hash:byte [] -&gt; String<br /><em><br /><br />&#160;https://en.bitcoin.it/wiki/Base58Check_encoding</em></div>
<div class="tip" id="fs6">val hash : byte []</div>
<div class="tip" id="fs7">Multiple items<br />val byte : value:&#39;T -&gt; byte (requires member op_Explicit)<br /><br />--------------------<br />type byte = Byte</div>
<div class="tip" id="fs8">val code_string : char []</div>
<div class="tip" id="fs9">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;&#160;&#160;interface IReadOnlyList&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;interface IReadOnlyCollection&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;interface IEnumerable<br />&#160;&#160;&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;member GetReverseIndex : rank:int * offset:int -&gt; int<br />&#160;&#160;&#160;&#160;member GetSlice : startIndex:int option * endIndex:int option -&gt; &#39;T list<br />&#160;&#160;&#160;&#160;member Head : &#39;T<br />&#160;&#160;&#160;&#160;member IsEmpty : bool<br />&#160;&#160;&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;&#160;&#160;member Length : int<br />&#160;&#160;&#160;&#160;...</div>
<div class="tip" id="fs10">val toArray : list:&#39;T list -&gt; &#39;T []</div>
<div class="tip" id="fs11">val data : byte list</div>
<div class="tip" id="fs12">type Array =<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CopyTo : array:Array * index:int -&gt; unit + 1 overload<br />&#160;&#160;member GetEnumerator : unit -&gt; IEnumerator<br />&#160;&#160;member GetLength : dimension:int -&gt; int<br />&#160;&#160;member GetLongLength : dimension:int -&gt; int64<br />&#160;&#160;member GetLowerBound : dimension:int -&gt; int<br />&#160;&#160;member GetUpperBound : dimension:int -&gt; int<br />&#160;&#160;member GetValue : [&lt;ParamArray&gt;] indices:int[] -&gt; obj + 7 overloads<br />&#160;&#160;member Initialize : unit -&gt; unit<br />&#160;&#160;member IsFixedSize : bool<br />&#160;&#160;...</div>
<div class="tip" id="fs13">val toList : array:&#39;T [] -&gt; &#39;T list</div>
<div class="tip" id="fs14">val toBigInt : (byte list * Numerics.BigInteger -&gt; Numerics.BigInteger)</div>
<div class="tip" id="fs15">val acc : Numerics.BigInteger</div>
<div class="tip" id="fs16">val h : byte</div>
<div class="tip" id="fs17">val t : byte list</div>
<div class="tip" id="fs18">type bigint = Numerics.BigInteger</div>
<div class="tip" id="fs19">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />--------------------<br />type int = int32<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int</div>
<div class="tip" id="fs20">val base58encodeLeft : (Numerics.BigInteger * char list -&gt; char list)</div>
<div class="tip" id="fs21">val i : Numerics.BigInteger</div>
<div class="tip" id="fs22">val acc : char list</div>
<div class="tip" id="fs23">val reminder : Numerics.BigInteger ref</div>
<div class="tip" id="fs24">Multiple items<br />val ref : value:&#39;T -&gt; &#39;T ref<br /><br />--------------------<br />type &#39;T ref = Ref&lt;&#39;T&gt;</div>
<div class="tip" id="fs25">val dividend : Numerics.BigInteger</div>
<div class="tip" id="fs26">Numerics.BigInteger.DivRem(dividend: Numerics.BigInteger, divisor: Numerics.BigInteger, remainder: byref&lt;Numerics.BigInteger&gt;) : Numerics.BigInteger</div>
<div class="tip" id="fs27">Multiple items<br />val char : char<br /><br />--------------------<br />type char = Char</div>
<div class="tip" id="fs28"></div>
<div class="tip" id="fs29">val appendOnes : char list</div>
<div class="tip" id="fs30">val insertOnes : (byte list * char list -&gt; char list)</div>
<div class="tip" id="fs31">val big : Numerics.BigInteger</div>
<div class="tip" id="fs32">val encoded : char []</div>
<div class="tip" id="fs33">Multiple items<br />type String =<br />&#160;&#160;new : value:char[] -&gt; string + 8 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool + 3 overloads<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 3 overloads<br />&#160;&#160;member EnumerateRunes : unit -&gt; StringRuneEnumerator<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;...<br /><br />--------------------<br />String(value: char []) : String<br />String(value: nativeptr&lt;char&gt;) : String<br />String(value: nativeptr&lt;sbyte&gt;) : String<br />String(value: ReadOnlySpan&lt;char&gt;) : String<br />String(c: char, count: int) : String<br />String(value: char [], startIndex: int, length: int) : String<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : String<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : String<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Text.Encoding) : String</div>
<div class="tip" id="fs34">val fromHex : s:string -&gt; byte []<br /><em><br /><br />&#160;String to byte-array. You could use Seq.pairwise, but this is taken from:<br />&#160;http://www.fssnip.net/gf</em></div>
<div class="tip" id="fs35">val s : string</div>
<div class="tip" id="fs36">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />--------------------<br />type string = String</div>
<div class="tip" id="fs37">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs38">val windowed : windowSize:int -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T []&gt;</div>
<div class="tip" id="fs39">val mapi : mapping:(int -&gt; &#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;</div>
<div class="tip" id="fs40">val i : int</div>
<div class="tip" id="fs41">val j : char []</div>
<div class="tip" id="fs42">val filter : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;</div>
<div class="tip" id="fs43">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;</div>
<div class="tip" id="fs44">type Byte =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member GetTypeCode : unit -&gt; TypeCode<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string + 3 overloads<br />&#160;&#160;&#160;&#160;member TryFormat : destination:Span&lt;char&gt; * charsWritten:int * ?format:ReadOnlySpan&lt;char&gt; * ?provider:IFormatProvider -&gt; bool<br />&#160;&#160;&#160;&#160;static val MaxValue : byte<br />&#160;&#160;&#160;&#160;static val MinValue : byte<br />&#160;&#160;&#160;&#160;static member Parse : s:string -&gt; byte + 4 overloads<br />&#160;&#160;&#160;&#160;static member TryParse : s:string * result:byte -&gt; bool + 3 overloads<br />&#160;&#160;end</div>
<div class="tip" id="fs45">Byte.Parse(s: string) : byte<br />Byte.Parse(s: string, provider: IFormatProvider) : byte<br />Byte.Parse(s: string, style: Globalization.NumberStyles) : byte<br />Byte.Parse(s: ReadOnlySpan&lt;char&gt;,?style: Globalization.NumberStyles,?provider: IFormatProvider) : byte<br />Byte.Parse(s: string, style: Globalization.NumberStyles, provider: IFormatProvider) : byte</div>
<div class="tip" id="fs46">namespace System.Globalization</div>
<div class="tip" id="fs47">type NumberStyles =<br />&#160;&#160;| None = 0<br />&#160;&#160;| AllowLeadingWhite = 1<br />&#160;&#160;| AllowTrailingWhite = 2<br />&#160;&#160;| AllowLeadingSign = 4<br />&#160;&#160;| AllowTrailingSign = 8<br />&#160;&#160;| AllowParentheses = 16<br />&#160;&#160;| AllowDecimalPoint = 32<br />&#160;&#160;| AllowThousands = 64<br />&#160;&#160;| AllowExponent = 128<br />&#160;&#160;| AllowCurrencySymbol = 256<br />&#160;&#160;...</div>
<div class="tip" id="fs48">field Globalization.NumberStyles.AllowHexSpecifier: Globalization.NumberStyles = 512</div>
<div class="tip" id="fs49">val ofSeq : source:seq&lt;&#39;T&gt; -&gt; &#39;T []</div>
<div class="tip" id="fs50">val keyToWif : key:string -&gt; String<br /><em><br /><br />&#160;https://en.bitcoin.it/wiki/Wallet_import_format</em></div>
<div class="tip" id="fs51">val key : string</div>
<div class="tip" id="fs52">val sha : SHA256Managed</div>
<div class="tip" id="fs53">Multiple items<br />type SHA256Managed =<br />&#160;&#160;inherit SHA256<br />&#160;&#160;new : unit -&gt; SHA256Managed<br />&#160;&#160;member Initialize : unit -&gt; unit<br /><br />--------------------<br />SHA256Managed() : SHA256Managed</div>
<div class="tip" id="fs54">val extended : byte []</div>
<div class="tip" id="fs55">val hashCheck : byte []</div>
<div class="tip" id="fs56">val append : array1:&#39;T [] -&gt; array2:&#39;T [] -&gt; &#39;T []</div>
<div class="tip" id="fs57">val rev : array:&#39;T [] -&gt; &#39;T []</div>
<div class="tip" id="fs58">val privateKey : unit -&gt; String<br /><em><br /><br />&#160;Generates random HEX-string</em></div>
<div class="tip" id="fs59">val chars : char []</div>
<div class="tip" id="fs60">val length : int</div>
<div class="tip" id="fs61">val data : byte []</div>
<div class="tip" id="fs62">val zeroCreate : count:int -&gt; &#39;T []</div>
<div class="tip" id="fs63">val provider : RNGCryptoServiceProvider</div>
<div class="tip" id="fs64">Multiple items<br />type RNGCryptoServiceProvider =<br />&#160;&#160;inherit RandomNumberGenerator<br />&#160;&#160;new : unit -&gt; RNGCryptoServiceProvider + 3 overloads<br />&#160;&#160;member GetBytes : data:byte[] -&gt; unit + 2 overloads<br />&#160;&#160;member GetNonZeroBytes : data:byte[] -&gt; unit + 1 overload<br /><br />--------------------<br />RNGCryptoServiceProvider() : RNGCryptoServiceProvider<br />RNGCryptoServiceProvider(str: string) : RNGCryptoServiceProvider<br />RNGCryptoServiceProvider(rgb: byte []) : RNGCryptoServiceProvider<br />RNGCryptoServiceProvider(cspParams: CspParameters) : RNGCryptoServiceProvider</div>
<div class="tip" id="fs65">val random : char []</div>
<div class="tip" id="fs66">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; array:&#39;T [] -&gt; &#39;U []</div>
<div class="tip" id="fs67">val b : byte</div>

