<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="id">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="id">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="id">Threading</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="id">Tasks</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="id">Microsoft</span><span class="pn">.</span><span class="id">Extensions</span><span class="pn">.</span><span class="id">DependencyInjection</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="id">Microsoft</span><span class="pn">.</span><span class="id">Extensions</span><span class="pn">.</span><span class="id">Hosting</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="id">Microsoft</span><span class="pn">.</span><span class="id">Extensions</span><span class="pn">.</span><span class="id">Logging</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="rt">Worker</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="id">logger</span> <span class="pn">:</span> <span class="id">ILogger</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs5', 10)" onmouseover="showTip(event, 'fs5', 10)" class="id">Worker</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span>
    <span class="k">inherit</span> <span class="id">BackgroundService</span><span class="pn">(</span><span class="pn">)</span>
    <span class="k">let</span> <span class="id">_logger</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 11)" onmouseover="showTip(event, 'fs6', 11)" class="id">logger</span>
    <span class="k">override</span> <span class="id">bs</span><span class="pn">.</span><span class="fn">ExecuteAsync</span> <span class="id">stoppingToken</span> <span class="o">=</span>
        <span class="k">let</span> <span class="id">f</span> <span class="pn">:</span> <span onmouseout="hideTip(event, 'fs7', 12)" onmouseover="showTip(event, 'fs7', 12)" class="id">Async</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs8', 13)" onmouseover="showTip(event, 'fs8', 13)" class="id">unit</span><span class="pn">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 14)" onmouseover="showTip(event, 'fs9', 14)" class="id">async</span> <span class="pn">{</span>
            <span class="k">while</span> <span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="id">not</span> <span class="id">stoppingToken</span><span class="pn">.</span><span class="id">IsCancellationRequested</span> <span class="k">do</span>
                <span class="id">_logger</span><span class="pn">.</span><span class="id">LogInformation</span><span class="pn">(</span><span class="s">&quot;Worker running at: {time}&quot;</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="id">DateTimeOffset</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs12', 17)" onmouseover="showTip(event, 'fs12', 17)" class="id">Now</span><span class="pn">)</span>
                <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs7', 18)" onmouseover="showTip(event, 'fs7', 18)" class="id">Async</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="id">Sleep</span><span class="pn">(</span><span class="n">1000</span><span class="pn">)</span>
        <span class="pn">}</span>
        <span class="c">// ExecuteAsync needs to return a task, hence up-cast from Task&lt;unit&gt; to plain Task.</span>
        <span class="c">// pass stoppingToken into async launch so that it&#39;s passed down automatically to other async CE&#39;s</span>
        <span class="c">//     per https://medium.com/@eulerfx/f-async-guide-eb3c8a2d180a</span>
        <span onmouseout="hideTip(event, 'fs7', 20)" onmouseover="showTip(event, 'fs7', 20)" class="id">Async</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs14', 21)" onmouseover="showTip(event, 'fs14', 21)" class="id">StartAsTask</span> <span class="pn">(</span><span class="id">computation</span> <span class="o">=</span> <span class="id">f</span><span class="pn">,</span> <span class="id">cancellationToken</span> <span class="o">=</span> <span class="id">stoppingToken</span><span class="pn">)</span> <span class="o">:&gt;</span> <span onmouseout="hideTip(event, 'fs15', 22)" onmouseover="showTip(event, 'fs15', 22)" class="id">Task</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs16', 23)" onmouseover="showTip(event, 'fs16', 23)" class="fn">CreateHostBuilder</span> <span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="id">argv</span> <span class="pn">:</span> <span class="id">IHostBuilder</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="id">builder</span> <span class="o">=</span> <span class="id">Host</span><span class="pn">.</span><span class="id">CreateDefaultBuilder</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs17', 26)" onmouseover="showTip(event, 'fs17', 26)" class="id">argv</span><span class="pn">)</span>
    <span onmouseout="hideTip(event, 'fs18', 27)" onmouseover="showTip(event, 'fs18', 27)" class="id">builder</span>
        <span class="pn">.</span><span class="id">UseWindowsService</span><span class="pn">(</span><span class="pn">)</span>
        <span class="pn">.</span><span class="id">ConfigureServices</span><span class="pn">(</span><span class="k">fun</span> <span class="id">hostContext</span> <span class="id">services</span> <span class="k">-&gt;</span> <span class="id">services</span><span class="pn">.</span><span class="id">AddHostedService</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs5', 28)" onmouseover="showTip(event, 'fs5', 28)" class="id">Worker</span><span class="pn">&gt;</span><span class="pn">(</span><span class="pn">)</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs19', 29)" onmouseover="showTip(event, 'fs19', 29)" class="id">ignore</span><span class="pn">&lt;</span><span class="id">IServiceCollection</span><span class="pn">&gt;</span><span class="pn">)</span>

<span class="pn">[&lt;</span><span onmouseout="hideTip(event, 'fs20', 30)" onmouseover="showTip(event, 'fs20', 30)" class="rt">EntryPoint</span><span class="pn">&gt;]</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 31)" onmouseover="showTip(event, 'fs21', 31)" class="fn">main</span> <span onmouseout="hideTip(event, 'fs22', 32)" onmouseover="showTip(event, 'fs22', 32)" class="id">argv</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 33)" onmouseover="showTip(event, 'fs23', 33)" class="id">hostBuilder</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 34)" onmouseover="showTip(event, 'fs16', 34)" class="fn">CreateHostBuilder</span> <span onmouseout="hideTip(event, 'fs22', 35)" onmouseover="showTip(event, 'fs22', 35)" class="id">argv</span>
    <span onmouseout="hideTip(event, 'fs23', 36)" onmouseover="showTip(event, 'fs23', 36)" class="id">hostBuilder</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs24', 37)" onmouseover="showTip(event, 'fs24', 37)" class="id">Build</span><span class="pn">(</span><span class="pn">)</span><span class="pn">.</span><span class="id">Run</span><span class="pn">(</span><span class="pn">)</span>
    <span class="n">0</span> <span class="c">// return an integer exit code</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Threading</div>
<div class="tip" id="fs3">namespace System.Threading.Tasks</div>
<div class="tip" id="fs4">namespace Microsoft</div>
<div class="tip" id="fs5">Multiple items<br />type Worker =<br />&#160;&#160;inherit obj<br />&#160;&#160;new : logger:&#39;a -&gt; Worker<br />&#160;&#160;override ExecuteAsync : stoppingToken:&#39;a -&gt; &#39;b<br /><br />--------------------<br />new : logger:&#39;a -&gt; Worker</div>
<div class="tip" id="fs6">val logger : &#39;a</div>
<div class="tip" id="fs7">Multiple items<br />type Async =<br />&#160;&#160;static member AsBeginEnd : computation:(&#39;Arg -&gt; Async&lt;&#39;T&gt;) -&gt; (&#39;Arg * AsyncCallback * obj -&gt; IAsyncResult) * (IAsyncResult -&gt; &#39;T) * (IAsyncResult -&gt; unit)<br />&#160;&#160;static member AwaitEvent : event:IEvent&lt;&#39;Del,&#39;T&gt; * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt; (requires delegate and &#39;Del :&gt; Delegate)<br />&#160;&#160;static member AwaitIAsyncResult : iar:IAsyncResult * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />&#160;&#160;static member AwaitTask : task:Task -&gt; Async&lt;unit&gt;<br />&#160;&#160;static member AwaitTask : task:Task&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;<br />&#160;&#160;static member AwaitWaitHandle : waitHandle:WaitHandle * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />&#160;&#160;static member CancelDefaultToken : unit -&gt; unit<br />&#160;&#160;static member Catch : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;Choice&lt;&#39;T,exn&gt;&gt;<br />&#160;&#160;static member Choice : computations:seq&lt;Async&lt;&#39;T option&gt;&gt; -&gt; Async&lt;&#39;T option&gt;<br />&#160;&#160;static member FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />&#160;&#160;...<br /><br />--------------------<br />type Async&lt;&#39;T&gt; =</div>
<div class="tip" id="fs8">type unit = Unit</div>
<div class="tip" id="fs9">val async : AsyncBuilder</div>
<div class="tip" id="fs10">val not : value:bool -&gt; bool</div>
<div class="tip" id="fs11">Multiple items<br />type DateTimeOffset =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : dateTime:DateTime -&gt; DateTimeOffset + 5 overloads<br />&#160;&#160;&#160;&#160;member Add : timeSpan:TimeSpan -&gt; DateTimeOffset<br />&#160;&#160;&#160;&#160;member AddDays : days:float -&gt; DateTimeOffset<br />&#160;&#160;&#160;&#160;member AddHours : hours:float -&gt; DateTimeOffset<br />&#160;&#160;&#160;&#160;member AddMilliseconds : milliseconds:float -&gt; DateTimeOffset<br />&#160;&#160;&#160;&#160;member AddMinutes : minutes:float -&gt; DateTimeOffset<br />&#160;&#160;&#160;&#160;member AddMonths : months:int -&gt; DateTimeOffset<br />&#160;&#160;&#160;&#160;member AddSeconds : seconds:float -&gt; DateTimeOffset<br />&#160;&#160;&#160;&#160;member AddTicks : ticks:int64 -&gt; DateTimeOffset<br />&#160;&#160;&#160;&#160;member AddYears : years:int -&gt; DateTimeOffset<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />--------------------<br />DateTimeOffset ()<br />DateTimeOffset(dateTime: DateTime) : DateTimeOffset<br />DateTimeOffset(ticks: int64, offset: TimeSpan) : DateTimeOffset<br />DateTimeOffset(dateTime: DateTime, offset: TimeSpan) : DateTimeOffset<br />DateTimeOffset(year: int, month: int, day: int, hour: int, minute: int, second: int, offset: TimeSpan) : DateTimeOffset<br />DateTimeOffset(year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int, offset: TimeSpan) : DateTimeOffset<br />DateTimeOffset(year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int, calendar: Globalization.Calendar, offset: TimeSpan) : DateTimeOffset</div>
<div class="tip" id="fs12">property DateTimeOffset.Now: DateTimeOffset with get</div>
<div class="tip" id="fs13">static member Async.Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;</div>
<div class="tip" id="fs14">static member Async.StartAsTask : computation:Async&lt;&#39;T&gt; * ?taskCreationOptions:TaskCreationOptions * ?cancellationToken:Threading.CancellationToken -&gt; Task&lt;&#39;T&gt;</div>
<div class="tip" id="fs15">Multiple items<br />type Task =<br />&#160;&#160;new : action:Action -&gt; Task + 7 overloads<br />&#160;&#160;member AsyncState : obj<br />&#160;&#160;member ConfigureAwait : continueOnCapturedContext:bool -&gt; ConfiguredTaskAwaitable<br />&#160;&#160;member ContinueWith : continuationAction:Action&lt;Task&gt; -&gt; Task + 19 overloads<br />&#160;&#160;member CreationOptions : TaskCreationOptions<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member Exception : AggregateException<br />&#160;&#160;member GetAwaiter : unit -&gt; TaskAwaiter<br />&#160;&#160;member Id : int<br />&#160;&#160;member IsCanceled : bool<br />&#160;&#160;...<br /><br />--------------------<br />type Task&lt;&#39;TResult&gt; =<br />&#160;&#160;inherit Task<br />&#160;&#160;new : function:Func&lt;&#39;TResult&gt; -&gt; Task&lt;&#39;TResult&gt; + 7 overloads<br />&#160;&#160;member ConfigureAwait : continueOnCapturedContext:bool -&gt; ConfiguredTaskAwaitable&lt;&#39;TResult&gt;<br />&#160;&#160;member ContinueWith : continuationAction:Action&lt;Task&lt;&#39;TResult&gt;&gt; -&gt; Task + 19 overloads<br />&#160;&#160;member GetAwaiter : unit -&gt; TaskAwaiter&lt;&#39;TResult&gt;<br />&#160;&#160;member Result : &#39;TResult<br />&#160;&#160;static member Factory : TaskFactory&lt;&#39;TResult&gt;<br /><br />--------------------<br />Task(action: Action) : Task<br />Task(action: Action, cancellationToken: Threading.CancellationToken) : Task<br />Task(action: Action, creationOptions: TaskCreationOptions) : Task<br />Task(action: Action&lt;obj&gt;, state: obj) : Task<br />Task(action: Action, cancellationToken: Threading.CancellationToken, creationOptions: TaskCreationOptions) : Task<br />Task(action: Action&lt;obj&gt;, state: obj, cancellationToken: Threading.CancellationToken) : Task<br />Task(action: Action&lt;obj&gt;, state: obj, creationOptions: TaskCreationOptions) : Task<br />Task(action: Action&lt;obj&gt;, state: obj, cancellationToken: Threading.CancellationToken, creationOptions: TaskCreationOptions) : Task<br /><br />--------------------<br />Task(function: Func&lt;&#39;TResult&gt;) : Task&lt;&#39;TResult&gt;<br />Task(function: Func&lt;&#39;TResult&gt;, cancellationToken: Threading.CancellationToken) : Task&lt;&#39;TResult&gt;<br />Task(function: Func&lt;&#39;TResult&gt;, creationOptions: TaskCreationOptions) : Task&lt;&#39;TResult&gt;<br />Task(function: Func&lt;obj,&#39;TResult&gt;, state: obj) : Task&lt;&#39;TResult&gt;<br />Task(function: Func&lt;&#39;TResult&gt;, cancellationToken: Threading.CancellationToken, creationOptions: TaskCreationOptions) : Task&lt;&#39;TResult&gt;<br />Task(function: Func&lt;obj,&#39;TResult&gt;, state: obj, cancellationToken: Threading.CancellationToken) : Task&lt;&#39;TResult&gt;<br />Task(function: Func&lt;obj,&#39;TResult&gt;, state: obj, creationOptions: TaskCreationOptions) : Task&lt;&#39;TResult&gt;<br />Task(function: Func&lt;obj,&#39;TResult&gt;, state: obj, cancellationToken: Threading.CancellationToken, creationOptions: TaskCreationOptions) : Task&lt;&#39;TResult&gt;</div>
<div class="tip" id="fs16">val CreateHostBuilder : argv:&#39;a -&gt; &#39;b</div>
<div class="tip" id="fs17">val argv : &#39;a</div>
<div class="tip" id="fs18">val builder : obj</div>
<div class="tip" id="fs19">val ignore : value:&#39;T -&gt; unit</div>
<div class="tip" id="fs20">Multiple items<br />type EntryPointAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; EntryPointAttribute<br /><br />--------------------<br />new : unit -&gt; EntryPointAttribute</div>
<div class="tip" id="fs21">val main : argv:string [] -&gt; int</div>
<div class="tip" id="fs22">val argv : string []</div>
<div class="tip" id="fs23">val hostBuilder : obj</div>
<div class="tip" id="fs24"></div>

