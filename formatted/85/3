<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="id">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="id">IO</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="id">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="id">Security</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="id">Cryptography</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 6)" onmouseover="showTip(event, 'fs1', 6)" class="id">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="id">Text</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 8)" onmouseover="showTip(event, 'fs1', 8)" class="id">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="id">Diagnostics</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs7', 10)" onmouseover="showTip(event, 'fs7', 10)" class="id">Contracts</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="fn">DeCryptStringWith</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs9', 12)" onmouseover="showTip(event, 'fs9', 12)" class="id">crypted</span><span class="pn">:</span><span onmouseout="hideTip(event, 'fs10', 13)" onmouseover="showTip(event, 'fs10', 13)" class="rt">string</span><span class="pn">)</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs11', 14)" onmouseover="showTip(event, 'fs11', 14)" class="id">key</span><span class="pn">:</span><span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="rt">string</span><span class="pn">)</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs12', 16)" onmouseover="showTip(event, 'fs12', 16)" class="id">iv</span><span class="pn">:</span><span onmouseout="hideTip(event, 'fs10', 17)" onmouseover="showTip(event, 'fs10', 17)" class="rt">string</span><span class="pn">)</span> <span class="o">=</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 18)" onmouseover="showTip(event, 'fs13', 18)" class="id">enc</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs14', 19)" onmouseover="showTip(event, 'fs14', 19)" class="rt">ASCIIEncoding</span><span class="pn">(</span><span class="pn">)</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 20)" onmouseover="showTip(event, 'fs15', 20)" class="id">algo</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 21)" onmouseover="showTip(event, 'fs16', 21)" class="d">Rijndael</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="id">Create</span><span class="pn">(</span><span class="pn">)</span>
    <span class="k">if</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs9', 23)" onmouseover="showTip(event, 'fs9', 23)" class="id">crypted</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 24)" onmouseover="showTip(event, 'fs18', 24)" class="id">Length</span> <span class="o">&lt;</span> <span class="n">5</span><span class="pn">)</span> <span class="k">then</span> 
        <span onmouseout="hideTip(event, 'fs19', 25)" onmouseover="showTip(event, 'fs19', 25)" class="fn">failwith</span> <span class="s">&quot;Crypted string length has to be over 5 chars.&quot;</span>
    <span class="k">use</span> <span onmouseout="hideTip(event, 'fs20', 26)" onmouseover="showTip(event, 'fs20', 26)" class="id">decrypted</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs21', 27)" onmouseover="showTip(event, 'fs21', 27)" class="d">MemoryStream</span><span class="pn">(</span><span class="pn">)</span>
    <span class="k">use</span> <span onmouseout="hideTip(event, 'fs22', 28)" onmouseover="showTip(event, 'fs22', 28)" class="id">decode</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs23', 29)" onmouseover="showTip(event, 'fs23', 29)" class="d">FromBase64Transform</span><span class="pn">(</span><span class="pn">)</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 30)" onmouseover="showTip(event, 'fs24', 30)" class="id">errdesc</span> <span class="o">=</span> <span class="s">&quot;Failure when decrypting the string &quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs9', 31)" onmouseover="showTip(event, 'fs9', 31)" class="id">crypted</span><span class="m">.</span><span class="pn">[</span><span class="n">0..</span><span class="n">3</span><span class="pn">]</span> <span class="o">+</span> <span class="s">&quot;...\r\n&quot;</span>
    <span class="k">try</span>
        <span class="k">use</span> <span onmouseout="hideTip(event, 'fs25', 32)" onmouseover="showTip(event, 'fs25', 32)" class="id">decryptor</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 33)" onmouseover="showTip(event, 'fs15', 33)" class="fn">algo</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 34)" onmouseover="showTip(event, 'fs18', 34)" class="id">CreateDecryptor</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs13', 35)" onmouseover="showTip(event, 'fs13', 35)" class="fn">enc</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 36)" onmouseover="showTip(event, 'fs18', 36)" class="id">GetBytes</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs11', 37)" onmouseover="showTip(event, 'fs11', 37)" class="id">key</span><span class="pn">)</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs13', 38)" onmouseover="showTip(event, 'fs13', 38)" class="fn">enc</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 39)" onmouseover="showTip(event, 'fs18', 39)" class="id">GetBytes</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs12', 40)" onmouseover="showTip(event, 'fs12', 40)" class="id">iv</span><span class="pn">)</span><span class="pn">)</span>
        <span class="k">use</span> <span onmouseout="hideTip(event, 'fs26', 41)" onmouseover="showTip(event, 'fs26', 41)" class="id">tmpcrypt</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs27', 42)" onmouseover="showTip(event, 'fs27', 42)" class="d">CryptoStream</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs20', 43)" onmouseover="showTip(event, 'fs20', 43)" class="id">decrypted</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs25', 44)" onmouseover="showTip(event, 'fs25', 44)" class="id">decryptor</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs28', 45)" onmouseover="showTip(event, 'fs28', 45)" class="vt">CryptoStreamMode</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs29', 46)" onmouseover="showTip(event, 'fs29', 46)" class="id">Write</span><span class="pn">)</span>
        <span class="k">use</span> <span onmouseout="hideTip(event, 'fs30', 47)" onmouseover="showTip(event, 'fs30', 47)" class="id">decodestream</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs27', 48)" onmouseover="showTip(event, 'fs27', 48)" class="d">CryptoStream</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs26', 49)" onmouseover="showTip(event, 'fs26', 49)" class="id">tmpcrypt</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs22', 50)" onmouseover="showTip(event, 'fs22', 50)" class="id">decode</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs28', 51)" onmouseover="showTip(event, 'fs28', 51)" class="vt">CryptoStreamMode</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs29', 52)" onmouseover="showTip(event, 'fs29', 52)" class="id">Write</span><span class="pn">)</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 53)" onmouseover="showTip(event, 'fs31', 53)" class="id">cryptedbytes</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 54)" onmouseover="showTip(event, 'fs13', 54)" class="fn">enc</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 55)" onmouseover="showTip(event, 'fs18', 55)" class="id">GetBytes</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs9', 56)" onmouseover="showTip(event, 'fs9', 56)" class="id">crypted</span><span class="pn">)</span><span class="pn">;</span>
        <span onmouseout="hideTip(event, 'fs30', 57)" onmouseover="showTip(event, 'fs30', 57)" class="fn">decodestream</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 58)" onmouseover="showTip(event, 'fs18', 58)" class="id">Write</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs31', 59)" onmouseover="showTip(event, 'fs31', 59)" class="id">cryptedbytes</span><span class="pn">,</span> <span class="n">0</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs31', 60)" onmouseover="showTip(event, 'fs31', 60)" class="id">cryptedbytes</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 61)" onmouseover="showTip(event, 'fs18', 61)" class="id">Length</span><span class="pn">)</span><span class="pn">;</span>
        <span onmouseout="hideTip(event, 'fs30', 62)" onmouseover="showTip(event, 'fs30', 62)" class="fn">decodestream</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 63)" onmouseover="showTip(event, 'fs18', 63)" class="id">Close</span><span class="pn">(</span><span class="pn">)</span> <span class="c">// lazy, has to close explicitly before use. using is not enough.</span>
    <span class="k">with</span>
        <span class="pn">|</span> <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs32', 64)" onmouseover="showTip(event, 'fs32', 64)" class="rt">CryptographicException</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs33', 65)" onmouseover="showTip(event, 'fs33', 65)" class="id">ex</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs19', 66)" onmouseover="showTip(event, 'fs19', 66)" class="fn">failwith</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs24', 67)" onmouseover="showTip(event, 'fs24', 67)" class="id">errdesc</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs33', 68)" onmouseover="showTip(event, 'fs33', 68)" class="fn">ex</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 69)" onmouseover="showTip(event, 'fs18', 69)" class="id">ToString</span><span class="pn">(</span><span class="pn">)</span><span class="pn">)</span>
        <span class="pn">|</span> <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs1', 70)" onmouseover="showTip(event, 'fs1', 70)" class="rt">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs34', 71)" onmouseover="showTip(event, 'fs34', 71)" class="id">FormatException</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs35', 72)" onmouseover="showTip(event, 'fs35', 72)" class="id">ex</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs19', 73)" onmouseover="showTip(event, 'fs19', 73)" class="fn">failwith</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs24', 74)" onmouseover="showTip(event, 'fs24', 74)" class="id">errdesc</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs35', 75)" onmouseover="showTip(event, 'fs35', 75)" class="fn">ex</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 76)" onmouseover="showTip(event, 'fs18', 76)" class="id">ToString</span><span class="pn">(</span><span class="pn">)</span><span class="pn">)</span>
    <span onmouseout="hideTip(event, 'fs13', 77)" onmouseover="showTip(event, 'fs13', 77)" class="fn">enc</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 78)" onmouseover="showTip(event, 'fs18', 78)" class="id">GetString</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs20', 79)" onmouseover="showTip(event, 'fs20', 79)" class="fn">decrypted</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 80)" onmouseover="showTip(event, 'fs18', 80)" class="id">ToArray</span><span class="pn">(</span><span class="pn">)</span><span class="pn">)</span>

<span id="fst36" onmouseout="hideTip(event, 'fs36', 81)" onmouseover="showTip(event, 'fs36', 81, document.getElementById('fst36'))" class="omitted">(Function to read registry keys omitted)</span>

<span class="c">// I recommend to get key and iv from registry </span>
<span class="c">// and then make one more method like:</span>
<span class="k">let</span> <span class="k">internal</span> <span onmouseout="hideTip(event, 'fs37', 82)" onmouseover="showTip(event, 'fs37', 82)" class="fn">DeCryptString</span> <span onmouseout="hideTip(event, 'fs9', 83)" onmouseover="showTip(event, 'fs9', 83)" class="id">crypted</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 84)" onmouseover="showTip(event, 'fs11', 84)" class="id">key</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs38', 85)" onmouseover="showTip(event, 'fs38', 85)" class="fn">GetRegistryValue</span><span class="pn">(</span><span class="s">&quot;rgbKey&quot;</span><span class="pn">)</span><span class="pn">.</span><span class="id">ToString</span><span class="pn">(</span><span class="pn">)</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 86)" onmouseover="showTip(event, 'fs12', 86)" class="id">iv</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs38', 87)" onmouseover="showTip(event, 'fs38', 87)" class="fn">GetRegistryValue</span><span class="pn">(</span><span class="s">&quot;rgbIV&quot;</span><span class="pn">)</span><span class="pn">.</span><span class="id">ToString</span><span class="pn">(</span><span class="pn">)</span>
    <span onmouseout="hideTip(event, 'fs8', 88)" onmouseover="showTip(event, 'fs8', 88)" class="fn">DeCryptStringWith</span> <span onmouseout="hideTip(event, 'fs9', 89)" onmouseover="showTip(event, 'fs9', 89)" class="id">crypted</span> <span onmouseout="hideTip(event, 'fs11', 90)" onmouseover="showTip(event, 'fs11', 90)" class="id">key</span> <span onmouseout="hideTip(event, 'fs12', 91)" onmouseover="showTip(event, 'fs12', 91)" class="id">iv</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.IO</div>
<div class="tip" id="fs3">namespace System.Security</div>
<div class="tip" id="fs4">namespace System.Security.Cryptography</div>
<div class="tip" id="fs5">namespace System.Text</div>
<div class="tip" id="fs6">namespace System.Diagnostics</div>
<div class="tip" id="fs7">namespace System.Diagnostics.Contracts</div>
<div class="tip" id="fs8">val DeCryptStringWith : crypted:string -&gt; key:string -&gt; iv:string -&gt; string</div>
<div class="tip" id="fs9">val crypted : string</div>
<div class="tip" id="fs10">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />--------------------<br />type string = System.String</div>
<div class="tip" id="fs11">val key : string</div>
<div class="tip" id="fs12">val iv : string</div>
<div class="tip" id="fs13">val enc : ASCIIEncoding</div>
<div class="tip" id="fs14">Multiple items<br />type ASCIIEncoding =<br />&#160;&#160;inherit Encoding<br />&#160;&#160;new : unit -&gt; ASCIIEncoding<br />&#160;&#160;member GetByteCount : chars:string -&gt; int + 3 overloads<br />&#160;&#160;member GetBytes : chars:ReadOnlySpan&lt;char&gt; * bytes:Span&lt;byte&gt; -&gt; int + 3 overloads<br />&#160;&#160;member GetCharCount : bytes:ReadOnlySpan&lt;byte&gt; -&gt; int + 2 overloads<br />&#160;&#160;member GetChars : bytes:ReadOnlySpan&lt;byte&gt; * chars:Span&lt;char&gt; -&gt; int + 2 overloads<br />&#160;&#160;member GetDecoder : unit -&gt; Decoder<br />&#160;&#160;member GetEncoder : unit -&gt; Encoder<br />&#160;&#160;member GetMaxByteCount : charCount:int -&gt; int<br />&#160;&#160;member GetMaxCharCount : byteCount:int -&gt; int<br />&#160;&#160;member GetString : bytes:byte[] * byteIndex:int * byteCount:int -&gt; string<br />&#160;&#160;...<br /><br />--------------------<br />ASCIIEncoding() : ASCIIEncoding</div>
<div class="tip" id="fs15">val algo : Rijndael</div>
<div class="tip" id="fs16">type Rijndael =<br />&#160;&#160;inherit SymmetricAlgorithm<br />&#160;&#160;static member Create : unit -&gt; Rijndael + 1 overload</div>
<div class="tip" id="fs17">Rijndael.Create() : Rijndael<br />Rijndael.Create(algName: string) : Rijndael</div>
<div class="tip" id="fs18"></div>
<div class="tip" id="fs19">val failwith : message:string -&gt; &#39;T</div>
<div class="tip" id="fs20">val decrypted : MemoryStream</div>
<div class="tip" id="fs21">Multiple items<br />type MemoryStream =<br />&#160;&#160;inherit Stream<br />&#160;&#160;new : unit -&gt; MemoryStream + 6 overloads<br />&#160;&#160;member CanRead : bool<br />&#160;&#160;member CanSeek : bool<br />&#160;&#160;member CanWrite : bool<br />&#160;&#160;member Capacity : int with get, set<br />&#160;&#160;member CopyTo : destination:Stream * bufferSize:int -&gt; unit<br />&#160;&#160;member CopyToAsync : destination:Stream * bufferSize:int * cancellationToken:CancellationToken -&gt; Task<br />&#160;&#160;member Flush : unit -&gt; unit<br />&#160;&#160;member FlushAsync : cancellationToken:CancellationToken -&gt; Task<br />&#160;&#160;member GetBuffer : unit -&gt; byte[]<br />&#160;&#160;...<br /><br />--------------------<br />MemoryStream() : MemoryStream<br />MemoryStream(capacity: int) : MemoryStream<br />MemoryStream(buffer: byte []) : MemoryStream<br />MemoryStream(buffer: byte [], writable: bool) : MemoryStream<br />MemoryStream(buffer: byte [], index: int, count: int) : MemoryStream<br />MemoryStream(buffer: byte [], index: int, count: int, writable: bool) : MemoryStream<br />MemoryStream(buffer: byte [], index: int, count: int, writable: bool, publiclyVisible: bool) : MemoryStream</div>
<div class="tip" id="fs22">val decode : FromBase64Transform</div>
<div class="tip" id="fs23">Multiple items<br />type FromBase64Transform =<br />&#160;&#160;new : unit -&gt; FromBase64Transform + 1 overload<br />&#160;&#160;member CanReuseTransform : bool<br />&#160;&#160;member CanTransformMultipleBlocks : bool<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member InputBlockSize : int<br />&#160;&#160;member OutputBlockSize : int<br />&#160;&#160;member TransformBlock : inputBuffer:byte[] * inputOffset:int * inputCount:int * outputBuffer:byte[] * outputOffset:int -&gt; int<br />&#160;&#160;member TransformFinalBlock : inputBuffer:byte[] * inputOffset:int * inputCount:int -&gt; byte[]<br /><br />--------------------<br />FromBase64Transform() : FromBase64Transform<br />FromBase64Transform(whitespaces: FromBase64TransformMode) : FromBase64Transform</div>
<div class="tip" id="fs24">val errdesc : string</div>
<div class="tip" id="fs25">val decryptor : ICryptoTransform</div>
<div class="tip" id="fs26">val tmpcrypt : CryptoStream</div>
<div class="tip" id="fs27">Multiple items<br />type CryptoStream =<br />&#160;&#160;inherit Stream<br />&#160;&#160;new : stream:Stream * transform:ICryptoTransform * mode:CryptoStreamMode -&gt; CryptoStream + 1 overload<br />&#160;&#160;member BeginRead : buffer:byte[] * offset:int * count:int * callback:AsyncCallback * state:obj -&gt; IAsyncResult<br />&#160;&#160;member BeginWrite : buffer:byte[] * offset:int * count:int * callback:AsyncCallback * state:obj -&gt; IAsyncResult<br />&#160;&#160;member CanRead : bool<br />&#160;&#160;member CanSeek : bool<br />&#160;&#160;member CanWrite : bool<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member DisposeAsync : unit -&gt; ValueTask<br />&#160;&#160;member EndRead : asyncResult:IAsyncResult -&gt; int<br />&#160;&#160;member EndWrite : asyncResult:IAsyncResult -&gt; unit<br />&#160;&#160;...<br /><br />--------------------<br />CryptoStream(stream: Stream, transform: ICryptoTransform, mode: CryptoStreamMode) : CryptoStream<br />CryptoStream(stream: Stream, transform: ICryptoTransform, mode: CryptoStreamMode, leaveOpen: bool) : CryptoStream</div>
<div class="tip" id="fs28">type CryptoStreamMode =<br />&#160;&#160;| Read = 0<br />&#160;&#160;| Write = 1</div>
<div class="tip" id="fs29">field CryptoStreamMode.Write: CryptoStreamMode = 1</div>
<div class="tip" id="fs30">val decodestream : CryptoStream</div>
<div class="tip" id="fs31">val cryptedbytes : byte []</div>
<div class="tip" id="fs32">Multiple items<br />type CryptographicException =<br />&#160;&#160;inherit SystemException<br />&#160;&#160;new : unit -&gt; CryptographicException + 4 overloads<br /><br />--------------------<br />CryptographicException() : CryptographicException<br />CryptographicException(hr: int) : CryptographicException<br />CryptographicException(message: string) : CryptographicException<br />CryptographicException(message: string, inner: exn) : CryptographicException<br />CryptographicException(format: string, insert: string) : CryptographicException</div>
<div class="tip" id="fs33">val ex : CryptographicException</div>
<div class="tip" id="fs34">Multiple items<br />type FormatException =<br />&#160;&#160;inherit SystemException<br />&#160;&#160;new : unit -&gt; FormatException + 2 overloads<br /><br />--------------------<br />System.FormatException() : System.FormatException<br />System.FormatException(message: string) : System.FormatException<br />System.FormatException(message: string, innerException: exn) : System.FormatException</div>
<div class="tip" id="fs35">val ex : System.FormatException</div>
<div class="tip" id="fs36">let REGISTRYSOFTWARE = &quot;Software&quot;;<br />let REGISTRYMYPATH = &quot;MySoftware&quot;;<br /><br />let GetRegistryValue key =<br />&#160;&#160;&#160;&#160;use path1 = Microsoft.Win32.Registry.LocalMachine.OpenSubKey(REGISTRYSOFTWARE)<br />&#160;&#160;&#160;&#160;match path1 with<br />&#160;&#160;&#160;&#160;| null -&gt; failwith(&quot;Access failed to registry: hklm\\&quot;+REGISTRYSOFTWARE)<br />&#160;&#160;&#160;&#160;| keyhklmsw -&gt; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;use path2 = keyhklmsw.OpenSubKey(REGISTRYMYPATH)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;match path2 with<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| null -&gt; failwith(&quot;Access failed to registry: &quot; + REGISTRYMYPATH)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| keyhklmswmypath -&gt; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;match keyhklmswmypath.GetValue(key, null) with<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| null -&gt; failwith(&quot;Path not found: &quot; + key)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;| gotkey -&gt; gotkey</div>
<div class="tip" id="fs37">val internal DeCryptString : crypted:string -&gt; string</div>
<div class="tip" id="fs38">val GetRegistryValue : key:string -&gt; obj</div>

