<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">type</span> <span class="rt">Assignments</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="rt">Map</span><span class="pn">&lt;</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="vt">int</span><span class="pn">*</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="vt">int</span><span class="pn">)</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs2', 4)" onmouseover="showTip(event, 'fs2', 4)" class="vt">int</span><span class="pn">&gt;</span> <span class="c">// (r,c), d</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="rt">Available</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 6)" onmouseover="showTip(event, 'fs1', 6)" class="rt">Map</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs2', 7)" onmouseover="showTip(event, 'fs2', 7)" class="vt">int</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs4', 8)" onmouseover="showTip(event, 'fs4', 8)" class="rt">Set</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs2', 9)" onmouseover="showTip(event, 'fs2', 9)" class="vt">int</span><span class="pn">&gt;</span><span class="pn">&gt;</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs5', 10)" onmouseover="showTip(event, 'fs5', 10)" class="rt">Board</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 11)" onmouseover="showTip(event, 'fs6', 11)" class="rt">Assignments</span> <span class="pn">*</span> <span onmouseout="hideTip(event, 'fs3', 12)" onmouseover="showTip(event, 'fs3', 12)" class="rt">Available</span> <span class="c">(*row*)</span> <span class="pn">*</span> <span onmouseout="hideTip(event, 'fs3', 13)" onmouseover="showTip(event, 'fs3', 13)" class="rt">Available</span> <span class="c">(*col*)</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs7', 14)" onmouseover="showTip(event, 'fs7', 14)" class="rt">AssignmentResult</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 15)" onmouseover="showTip(event, 'fs8', 15)" class="uc">Done</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs5', 16)" onmouseover="showTip(event, 'fs5', 16)" class="rt">Board</span> <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs9', 17)" onmouseover="showTip(event, 'fs9', 17)" class="uc">Infeasible</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 18)" onmouseover="showTip(event, 'fs10', 18)" class="id">blockSet</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 19)" onmouseover="showTip(event, 'fs11', 19)" class="fn">set</span> <span class="pn">[</span><span class="n">1..</span><span class="n">9</span><span class="pn">]</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 20)" onmouseover="showTip(event, 'fs12', 20)" class="fn">blockCheck</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs13', 21)" onmouseover="showTip(event, 'fs13', 21)" class="id">board</span><span class="pn">:</span><span onmouseout="hideTip(event, 'fs5', 22)" onmouseover="showTip(event, 'fs5', 22)" class="rt">Board</span><span class="pn">)</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="id">asgns</span><span class="pn">,</span><span class="id">_</span><span class="pn">,</span><span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 24)" onmouseover="showTip(event, 'fs13', 24)" class="id">board</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 25)" onmouseover="showTip(event, 'fs15', 25)" class="id">completedBlockSumOk</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs14', 26)" onmouseover="showTip(event, 'fs14', 26)" class="id">asgns</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 27)" onmouseover="showTip(event, 'fs1', 27)" class="m">Map</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 28)" onmouseover="showTip(event, 'fs16', 28)" class="id">toSeq</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs17', 29)" onmouseover="showTip(event, 'fs17', 29)" class="m">Seq</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 30)" onmouseover="showTip(event, 'fs18', 30)" class="id">map</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 31)" onmouseover="showTip(event, 'fs19', 31)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 32)" onmouseover="showTip(event, 'fs20', 32)" class="id">c</span><span class="pn">)</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs21', 33)" onmouseover="showTip(event, 'fs21', 33)" class="id">d</span><span class="pn">)</span> <span class="k">-&gt;</span> <span class="pn">(</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 34)" onmouseover="showTip(event, 'fs19', 34)" class="id">r</span><span class="o">-</span><span class="n">1</span><span class="pn">)</span><span class="o">/</span><span class="n">3</span><span class="pn">,</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs20', 35)" onmouseover="showTip(event, 'fs20', 35)" class="id">c</span><span class="o">-</span><span class="n">1</span><span class="pn">)</span><span class="o">/</span><span class="n">3</span><span class="pn">)</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs21', 36)" onmouseover="showTip(event, 'fs21', 36)" class="id">d</span><span class="pn">)</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs17', 37)" onmouseover="showTip(event, 'fs17', 37)" class="m">Seq</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs22', 38)" onmouseover="showTip(event, 'fs22', 38)" class="id">groupBy</span> <span onmouseout="hideTip(event, 'fs23', 39)" onmouseover="showTip(event, 'fs23', 39)" class="fn">fst</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs17', 40)" onmouseover="showTip(event, 'fs17', 40)" class="m">Seq</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs24', 41)" onmouseover="showTip(event, 'fs24', 41)" class="id">filter</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs25', 42)" onmouseover="showTip(event, 'fs25', 42)" class="id">block</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs26', 43)" onmouseover="showTip(event, 'fs26', 43)" class="id">cells</span><span class="pn">)</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs17', 44)" onmouseover="showTip(event, 'fs17', 44)" class="m">Seq</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs27', 45)" onmouseover="showTip(event, 'fs27', 45)" class="id">length</span> <span onmouseout="hideTip(event, 'fs26', 46)" onmouseover="showTip(event, 'fs26', 46)" class="id">cells</span> <span class="o">=</span> <span class="n">9</span><span class="pn">)</span>
        <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs17', 47)" onmouseover="showTip(event, 'fs17', 47)" class="m">Seq</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs28', 48)" onmouseover="showTip(event, 'fs28', 48)" class="id">forall</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs25', 49)" onmouseover="showTip(event, 'fs25', 49)" class="id">block</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs29', 50)" onmouseover="showTip(event, 'fs29', 50)" class="id">xs</span><span class="pn">)</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs29', 51)" onmouseover="showTip(event, 'fs29', 51)" class="id">xs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs17', 52)" onmouseover="showTip(event, 'fs17', 52)" class="m">Seq</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 53)" onmouseover="showTip(event, 'fs18', 53)" class="id">map</span> <span onmouseout="hideTip(event, 'fs30', 54)" onmouseover="showTip(event, 'fs30', 54)" class="fn">snd</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs11', 55)" onmouseover="showTip(event, 'fs11', 55)" class="fn">set</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs10', 56)" onmouseover="showTip(event, 'fs10', 56)" class="id">blockSet</span><span class="pn">)</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs15', 57)" onmouseover="showTip(event, 'fs15', 57)" class="id">completedBlockSumOk</span> <span class="k">then</span>
        <span onmouseout="hideTip(event, 'fs8', 58)" onmouseover="showTip(event, 'fs8', 58)" class="uc">Done</span> <span onmouseout="hideTip(event, 'fs13', 59)" onmouseover="showTip(event, 'fs13', 59)" class="id">board</span>
    <span class="k">else</span>
        <span onmouseout="hideTip(event, 'fs9', 60)" onmouseover="showTip(event, 'fs9', 60)" class="uc">Infeasible</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 61)" onmouseover="showTip(event, 'fs31', 61)" class="fn">available</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs13', 62)" onmouseover="showTip(event, 'fs13', 62)" class="id">board</span><span class="pn">:</span><span onmouseout="hideTip(event, 'fs5', 63)" onmouseover="showTip(event, 'fs5', 63)" class="rt">Board</span><span class="pn">)</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 64)" onmouseover="showTip(event, 'fs19', 64)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 65)" onmouseover="showTip(event, 'fs20', 65)" class="id">c</span><span class="pn">)</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 66)" onmouseover="showTip(event, 'fs14', 66)" class="id">asgns</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs32', 67)" onmouseover="showTip(event, 'fs32', 67)" class="id">ravl</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs33', 68)" onmouseover="showTip(event, 'fs33', 68)" class="id">cavl</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 69)" onmouseover="showTip(event, 'fs13', 69)" class="id">board</span>
    <span onmouseout="hideTip(event, 'fs4', 70)" onmouseover="showTip(event, 'fs4', 70)" class="m">Set</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs34', 71)" onmouseover="showTip(event, 'fs34', 71)" class="id">intersect</span> <span onmouseout="hideTip(event, 'fs32', 72)" onmouseover="showTip(event, 'fs32', 72)" class="id">ravl</span><span class="pn">.</span><span class="pn">[</span><span onmouseout="hideTip(event, 'fs19', 73)" onmouseover="showTip(event, 'fs19', 73)" class="id">r</span><span class="pn">]</span> <span onmouseout="hideTip(event, 'fs33', 74)" onmouseover="showTip(event, 'fs33', 74)" class="id">cavl</span><span class="pn">.</span><span class="pn">[</span><span onmouseout="hideTip(event, 'fs20', 75)" onmouseover="showTip(event, 'fs20', 75)" class="id">c</span><span class="pn">]</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs35', 76)" onmouseover="showTip(event, 'fs35', 76)" class="fn">assign</span> <span class="pn">(</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 77)" onmouseover="showTip(event, 'fs19', 77)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 78)" onmouseover="showTip(event, 'fs20', 78)" class="id">c</span><span class="pn">)</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs21', 79)" onmouseover="showTip(event, 'fs21', 79)" class="id">d</span><span class="pn">)</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs13', 80)" onmouseover="showTip(event, 'fs13', 80)" class="id">board</span><span class="pn">:</span><span onmouseout="hideTip(event, 'fs5', 81)" onmouseover="showTip(event, 'fs5', 81)" class="rt">Board</span><span class="pn">)</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 82)" onmouseover="showTip(event, 'fs36', 82)" class="id">asgn</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs32', 83)" onmouseover="showTip(event, 'fs32', 83)" class="id">ravl</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs33', 84)" onmouseover="showTip(event, 'fs33', 84)" class="id">cavl</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 85)" onmouseover="showTip(event, 'fs13', 85)" class="id">board</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs37', 86)" onmouseover="showTip(event, 'fs37', 86)" class="id">asgn&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs36', 87)" onmouseover="showTip(event, 'fs36', 87)" class="id">asgn</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 88)" onmouseover="showTip(event, 'fs1', 88)" class="m">Map</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs38', 89)" onmouseover="showTip(event, 'fs38', 89)" class="id">add</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 90)" onmouseover="showTip(event, 'fs19', 90)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 91)" onmouseover="showTip(event, 'fs20', 91)" class="id">c</span><span class="pn">)</span> <span onmouseout="hideTip(event, 'fs21', 92)" onmouseover="showTip(event, 'fs21', 92)" class="id">d</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 93)" onmouseover="showTip(event, 'fs39', 93)" class="id">rSet</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 94)" onmouseover="showTip(event, 'fs32', 94)" class="id">ravl</span><span class="pn">.</span><span class="pn">[</span><span onmouseout="hideTip(event, 'fs19', 95)" onmouseover="showTip(event, 'fs19', 95)" class="id">r</span><span class="pn">]</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs4', 96)" onmouseover="showTip(event, 'fs4', 96)" class="m">Set</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs40', 97)" onmouseover="showTip(event, 'fs40', 97)" class="id">remove</span> <span onmouseout="hideTip(event, 'fs21', 98)" onmouseover="showTip(event, 'fs21', 98)" class="id">d</span> 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 99)" onmouseover="showTip(event, 'fs41', 99)" class="id">cSet</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs33', 100)" onmouseover="showTip(event, 'fs33', 100)" class="id">cavl</span><span class="pn">.</span><span class="pn">[</span><span onmouseout="hideTip(event, 'fs20', 101)" onmouseover="showTip(event, 'fs20', 101)" class="id">c</span><span class="pn">]</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs4', 102)" onmouseover="showTip(event, 'fs4', 102)" class="m">Set</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs40', 103)" onmouseover="showTip(event, 'fs40', 103)" class="id">remove</span> <span onmouseout="hideTip(event, 'fs21', 104)" onmouseover="showTip(event, 'fs21', 104)" class="id">d</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 105)" onmouseover="showTip(event, 'fs42', 105)" class="id">ravl&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs32', 106)" onmouseover="showTip(event, 'fs32', 106)" class="id">ravl</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 107)" onmouseover="showTip(event, 'fs1', 107)" class="m">Map</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs38', 108)" onmouseover="showTip(event, 'fs38', 108)" class="id">add</span> <span onmouseout="hideTip(event, 'fs19', 109)" onmouseover="showTip(event, 'fs19', 109)" class="id">r</span> <span onmouseout="hideTip(event, 'fs39', 110)" onmouseover="showTip(event, 'fs39', 110)" class="id">rSet</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs43', 111)" onmouseover="showTip(event, 'fs43', 111)" class="id">cavl&#39;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs33', 112)" onmouseover="showTip(event, 'fs33', 112)" class="id">cavl</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 113)" onmouseover="showTip(event, 'fs1', 113)" class="m">Map</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs38', 114)" onmouseover="showTip(event, 'fs38', 114)" class="id">add</span> <span onmouseout="hideTip(event, 'fs20', 115)" onmouseover="showTip(event, 'fs20', 115)" class="id">c</span> <span onmouseout="hideTip(event, 'fs41', 116)" onmouseover="showTip(event, 'fs41', 116)" class="id">cSet</span>            
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs44', 117)" onmouseover="showTip(event, 'fs44', 117)" class="id">board&#39;</span> <span class="o">=</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs37', 118)" onmouseover="showTip(event, 'fs37', 118)" class="id">asgn&#39;</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs42', 119)" onmouseover="showTip(event, 'fs42', 119)" class="id">ravl&#39;</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs43', 120)" onmouseover="showTip(event, 'fs43', 120)" class="id">cavl&#39;</span><span class="pn">)</span>   
    <span onmouseout="hideTip(event, 'fs12', 121)" onmouseover="showTip(event, 'fs12', 121)" class="fn">blockCheck</span> <span onmouseout="hideTip(event, 'fs44', 122)" onmouseover="showTip(event, 'fs44', 122)" class="id">board&#39;</span>
        
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs45', 123)" onmouseover="showTip(event, 'fs45', 123)" class="fn">assignChecked</span> <span class="pn">(</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 124)" onmouseover="showTip(event, 'fs19', 124)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 125)" onmouseover="showTip(event, 'fs20', 125)" class="id">c</span><span class="pn">)</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs21', 126)" onmouseover="showTip(event, 'fs21', 126)" class="id">d</span><span class="pn">)</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs13', 127)" onmouseover="showTip(event, 'fs13', 127)" class="id">board</span><span class="pn">:</span><span onmouseout="hideTip(event, 'fs5', 128)" onmouseover="showTip(event, 'fs5', 128)" class="rt">Board</span><span class="pn">)</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 129)" onmouseover="showTip(event, 'fs36', 129)" class="id">asgn</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs32', 130)" onmouseover="showTip(event, 'fs32', 130)" class="id">ravl</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs33', 131)" onmouseover="showTip(event, 'fs33', 131)" class="id">cavl</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 132)" onmouseover="showTip(event, 'fs13', 132)" class="id">board</span>
    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs36', 133)" onmouseover="showTip(event, 'fs36', 133)" class="id">asgn</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 134)" onmouseover="showTip(event, 'fs1', 134)" class="m">Map</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs46', 135)" onmouseover="showTip(event, 'fs46', 135)" class="id">containsKey</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 136)" onmouseover="showTip(event, 'fs19', 136)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 137)" onmouseover="showTip(event, 'fs20', 137)" class="id">c</span><span class="pn">)</span> <span class="k">then</span>
        <span onmouseout="hideTip(event, 'fs9', 138)" onmouseover="showTip(event, 'fs9', 138)" class="uc">Infeasible</span>
    <span class="k">else</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs31', 139)" onmouseover="showTip(event, 'fs31', 139)" class="fn">available</span> <span onmouseout="hideTip(event, 'fs13', 140)" onmouseover="showTip(event, 'fs13', 140)" class="id">board</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 141)" onmouseover="showTip(event, 'fs19', 141)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 142)" onmouseover="showTip(event, 'fs20', 142)" class="id">c</span><span class="pn">)</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs4', 143)" onmouseover="showTip(event, 'fs4', 143)" class="m">Set</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs47', 144)" onmouseover="showTip(event, 'fs47', 144)" class="id">contains</span> <span onmouseout="hideTip(event, 'fs21', 145)" onmouseover="showTip(event, 'fs21', 145)" class="id">d</span> <span class="k">then</span> 
            <span onmouseout="hideTip(event, 'fs35', 146)" onmouseover="showTip(event, 'fs35', 146)" class="fn">assign</span> <span class="pn">(</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 147)" onmouseover="showTip(event, 'fs19', 147)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 148)" onmouseover="showTip(event, 'fs20', 148)" class="id">c</span><span class="pn">)</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs21', 149)" onmouseover="showTip(event, 'fs21', 149)" class="id">d</span><span class="pn">)</span> <span onmouseout="hideTip(event, 'fs13', 150)" onmouseover="showTip(event, 'fs13', 150)" class="id">board</span>
        <span class="k">else</span>
            <span onmouseout="hideTip(event, 'fs9', 151)" onmouseover="showTip(event, 'fs9', 151)" class="uc">Infeasible</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs48', 152)" onmouseover="showTip(event, 'fs48', 152)" class="fn">newBoard</span><span class="pn">(</span><span class="pn">)</span> <span class="pn">:</span> <span onmouseout="hideTip(event, 'fs5', 153)" onmouseover="showTip(event, 'fs5', 153)" class="rt">Board</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs1', 154)" onmouseover="showTip(event, 'fs1', 154)" class="m">Map</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs49', 155)" onmouseover="showTip(event, 'fs49', 155)" class="id">empty</span><span class="pn">,</span>
    <span class="pn">[</span><span class="k">for</span> <span onmouseout="hideTip(event, 'fs19', 156)" onmouseover="showTip(event, 'fs19', 156)" class="id">r</span> <span class="k">in</span> <span class="n">1</span> <span class="o">..</span> <span class="n">9</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs19', 157)" onmouseover="showTip(event, 'fs19', 157)" class="id">r</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs11', 158)" onmouseover="showTip(event, 'fs11', 158)" class="fn">set</span> <span class="pn">[</span><span class="n">1</span> <span class="o">..</span> <span class="n">9</span><span class="pn">]</span><span class="pn">]</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 159)" onmouseover="showTip(event, 'fs1', 159)" class="m">Map</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs50', 160)" onmouseover="showTip(event, 'fs50', 160)" class="id">ofList</span><span class="pn">,</span>
    <span class="pn">[</span><span class="k">for</span> <span onmouseout="hideTip(event, 'fs20', 161)" onmouseover="showTip(event, 'fs20', 161)" class="id">c</span> <span class="k">in</span> <span class="n">1</span> <span class="o">..</span> <span class="n">9</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs20', 162)" onmouseover="showTip(event, 'fs20', 162)" class="id">c</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs11', 163)" onmouseover="showTip(event, 'fs11', 163)" class="fn">set</span> <span class="pn">[</span><span class="n">1</span> <span class="o">..</span> <span class="n">9</span><span class="pn">]</span><span class="pn">]</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 164)" onmouseover="showTip(event, 'fs1', 164)" class="m">Map</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs50', 165)" onmouseover="showTip(event, 'fs50', 165)" class="id">ofList</span>
            
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs51', 166)" onmouseover="showTip(event, 'fs51', 166)" class="fn">initBoard</span> <span onmouseout="hideTip(event, 'fs52', 167)" onmouseover="showTip(event, 'fs52', 167)" class="id">assignments</span> <span class="o">=</span> 
    <span class="pn">(</span><span onmouseout="hideTip(event, 'fs48', 168)" onmouseover="showTip(event, 'fs48', 168)" class="fn">newBoard</span><span class="pn">(</span><span class="pn">)</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs52', 169)" onmouseover="showTip(event, 'fs52', 169)" class="id">assignments</span><span class="pn">)</span> 
    <span class="o">||&gt;</span> <span onmouseout="hideTip(event, 'fs17', 170)" onmouseover="showTip(event, 'fs17', 170)" class="m">Seq</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs53', 171)" onmouseover="showTip(event, 'fs53', 171)" class="id">fold</span> <span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs13', 172)" onmouseover="showTip(event, 'fs13', 172)" class="id">board</span> <span class="pn">(</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 173)" onmouseover="showTip(event, 'fs19', 173)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 174)" onmouseover="showTip(event, 'fs20', 174)" class="id">c</span><span class="pn">)</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs21', 175)" onmouseover="showTip(event, 'fs21', 175)" class="id">d</span><span class="pn">)</span> <span class="k">-&gt;</span> 
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs45', 176)" onmouseover="showTip(event, 'fs45', 176)" class="fn">assignChecked</span> <span class="pn">(</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 177)" onmouseover="showTip(event, 'fs19', 177)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 178)" onmouseover="showTip(event, 'fs20', 178)" class="id">c</span><span class="pn">)</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs21', 179)" onmouseover="showTip(event, 'fs21', 179)" class="id">d</span><span class="pn">)</span> <span onmouseout="hideTip(event, 'fs13', 180)" onmouseover="showTip(event, 'fs13', 180)" class="id">board</span> <span class="k">with</span>
        <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs8', 181)" onmouseover="showTip(event, 'fs8', 181)" class="uc">Done</span> <span onmouseout="hideTip(event, 'fs13', 182)" onmouseover="showTip(event, 'fs13', 182)" class="id">board</span>   <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs13', 183)" onmouseover="showTip(event, 'fs13', 183)" class="id">board</span>
        <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs9', 184)" onmouseover="showTip(event, 'fs9', 184)" class="uc">Infeasible</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs54', 185)" onmouseover="showTip(event, 'fs54', 185)" class="fn">failwith</span> <span class="s">&quot;invalid assignments&quot;</span>
        <span class="pn">)</span>
        
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs55', 186)" onmouseover="showTip(event, 'fs55', 186)" class="fn">unassignedCells</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs13', 187)" onmouseover="showTip(event, 'fs13', 187)" class="id">board</span><span class="pn">:</span><span onmouseout="hideTip(event, 'fs5', 188)" onmouseover="showTip(event, 'fs5', 188)" class="rt">Board</span><span class="pn">)</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 189)" onmouseover="showTip(event, 'fs36', 189)" class="id">asgn</span><span class="pn">,</span><span class="id">_</span><span class="pn">,</span><span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 190)" onmouseover="showTip(event, 'fs13', 190)" class="id">board</span>
    <span class="pn">[</span><span class="k">for</span> <span onmouseout="hideTip(event, 'fs19', 191)" onmouseover="showTip(event, 'fs19', 191)" class="id">r</span> <span class="k">in</span> <span class="n">1</span> <span class="o">..</span> <span class="n">9</span> <span class="k">do</span>
        <span class="k">for</span> <span onmouseout="hideTip(event, 'fs20', 192)" onmouseover="showTip(event, 'fs20', 192)" class="id">c</span> <span class="k">in</span> <span class="n">1</span> <span class="o">..</span> <span class="n">9</span> <span class="k">do</span> 
            <span class="k">if</span> <span onmouseout="hideTip(event, 'fs36', 193)" onmouseover="showTip(event, 'fs36', 193)" class="id">asgn</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs1', 194)" onmouseover="showTip(event, 'fs1', 194)" class="m">Map</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs46', 195)" onmouseover="showTip(event, 'fs46', 195)" class="id">containsKey</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 196)" onmouseover="showTip(event, 'fs19', 196)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 197)" onmouseover="showTip(event, 'fs20', 197)" class="id">c</span><span class="pn">)</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs56', 198)" onmouseover="showTip(event, 'fs56', 198)" class="fn">not</span> <span class="k">then</span>
                <span class="k">yield</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 199)" onmouseover="showTip(event, 'fs19', 199)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 200)" onmouseover="showTip(event, 'fs20', 200)" class="id">c</span><span class="pn">)</span><span class="pn">]</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs57', 201)" onmouseover="showTip(event, 'fs57', 201)" class="fn">solve</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs13', 202)" onmouseover="showTip(event, 'fs13', 202)" class="id">board</span><span class="pn">:</span><span onmouseout="hideTip(event, 'fs5', 203)" onmouseover="showTip(event, 'fs5', 203)" class="rt">Board</span><span class="pn">)</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs58', 204)" onmouseover="showTip(event, 'fs58', 204)" class="id">cells</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs55', 205)" onmouseover="showTip(event, 'fs55', 205)" class="fn">unassignedCells</span> <span onmouseout="hideTip(event, 'fs13', 206)" onmouseover="showTip(event, 'fs13', 206)" class="id">board</span> <span class="c">//cells to fill</span>

    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs59', 207)" onmouseover="showTip(event, 'fs59', 207)" class="fn">backtrack</span> <span onmouseout="hideTip(event, 'fs60', 208)" onmouseover="showTip(event, 'fs60', 208)" class="id">asgns</span> <span onmouseout="hideTip(event, 'fs61', 209)" onmouseover="showTip(event, 'fs61', 209)" class="id">rem</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs60', 210)" onmouseover="showTip(event, 'fs60', 210)" class="id">asgns</span> <span class="k">with</span>
        <span class="pn">|</span> <span class="pn">[</span><span class="pn">]</span>                        <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs54', 211)" onmouseover="showTip(event, 'fs54', 211)" class="fn">failwith</span> <span class="s">&quot;no solution&quot;</span>
        <span class="pn">|</span> <span class="pn">(</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 212)" onmouseover="showTip(event, 'fs19', 212)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 213)" onmouseover="showTip(event, 'fs20', 213)" class="id">c</span><span class="pn">)</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs62', 214)" onmouseover="showTip(event, 'fs62', 214)" class="id">ds</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs13', 215)" onmouseover="showTip(event, 'fs13', 215)" class="id">board</span><span class="pn">)</span><span class="uc">::</span><span onmouseout="hideTip(event, 'fs63', 216)" onmouseover="showTip(event, 'fs63', 216)" class="id">rest</span>    <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs64', 217)" onmouseover="showTip(event, 'fs64', 217)" class="fn">tryAssign</span> <span onmouseout="hideTip(event, 'fs13', 218)" onmouseover="showTip(event, 'fs13', 218)" class="id">board</span> <span onmouseout="hideTip(event, 'fs63', 219)" onmouseover="showTip(event, 'fs63', 219)" class="id">rest</span> <span onmouseout="hideTip(event, 'fs61', 220)" onmouseover="showTip(event, 'fs61', 220)" class="id">rem</span> <span class="pn">(</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 221)" onmouseover="showTip(event, 'fs19', 221)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 222)" onmouseover="showTip(event, 'fs20', 222)" class="id">c</span><span class="pn">)</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs62', 223)" onmouseover="showTip(event, 'fs62', 223)" class="id">ds</span><span class="pn">)</span>  <span class="c">//backtrack to prev assignment - try next available digit for the cell</span>

    <span class="k">and</span> <span onmouseout="hideTip(event, 'fs64', 224)" onmouseover="showTip(event, 'fs64', 224)" class="fn">tryAssign</span> <span onmouseout="hideTip(event, 'fs13', 225)" onmouseover="showTip(event, 'fs13', 225)" class="id">board</span> <span onmouseout="hideTip(event, 'fs60', 226)" onmouseover="showTip(event, 'fs60', 226)" class="id">asgns</span> <span onmouseout="hideTip(event, 'fs61', 227)" onmouseover="showTip(event, 'fs61', 227)" class="id">rem</span> <span onmouseout="hideTip(event, 'fs65', 228)" onmouseover="showTip(event, 'fs65', 228)" class="id">curChoices</span> <span class="o">=</span>
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs65', 229)" onmouseover="showTip(event, 'fs65', 229)" class="id">curChoices</span> <span class="k">with</span>
        <span class="pn">|</span> <span class="pn">(</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 230)" onmouseover="showTip(event, 'fs19', 230)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 231)" onmouseover="showTip(event, 'fs20', 231)" class="id">c</span><span class="pn">)</span><span class="pn">,</span><span class="pn">[</span><span class="pn">]</span><span class="pn">)</span>          <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs59', 232)" onmouseover="showTip(event, 'fs59', 232)" class="fn">backtrack</span> <span onmouseout="hideTip(event, 'fs60', 233)" onmouseover="showTip(event, 'fs60', 233)" class="id">asgns</span> <span class="pn">(</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 234)" onmouseover="showTip(event, 'fs19', 234)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 235)" onmouseover="showTip(event, 'fs20', 235)" class="id">c</span><span class="pn">)</span><span class="uc">::</span><span onmouseout="hideTip(event, 'fs61', 236)" onmouseover="showTip(event, 'fs61', 236)" class="id">rem</span><span class="pn">)</span>
        <span class="pn">|</span> <span class="pn">(</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 237)" onmouseover="showTip(event, 'fs19', 237)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 238)" onmouseover="showTip(event, 'fs20', 238)" class="id">c</span><span class="pn">)</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs21', 239)" onmouseover="showTip(event, 'fs21', 239)" class="id">d</span><span class="uc">::</span><span onmouseout="hideTip(event, 'fs66', 240)" onmouseover="showTip(event, 'fs66', 240)" class="id">rest</span><span class="pn">)</span> <span class="k">-&gt;</span> 
            <span class="k">match</span> <span onmouseout="hideTip(event, 'fs35', 241)" onmouseover="showTip(event, 'fs35', 241)" class="fn">assign</span> <span class="pn">(</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 242)" onmouseover="showTip(event, 'fs19', 242)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 243)" onmouseover="showTip(event, 'fs20', 243)" class="id">c</span><span class="pn">)</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs21', 244)" onmouseover="showTip(event, 'fs21', 244)" class="id">d</span><span class="pn">)</span> <span onmouseout="hideTip(event, 'fs13', 245)" onmouseover="showTip(event, 'fs13', 245)" class="id">board</span> <span class="k">with</span>
            <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs8', 246)" onmouseover="showTip(event, 'fs8', 246)" class="uc">Done</span> <span onmouseout="hideTip(event, 'fs67', 247)" onmouseover="showTip(event, 'fs67', 247)" class="id">board2</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs68', 248)" onmouseover="showTip(event, 'fs68', 248)" class="fn">loop</span> <span onmouseout="hideTip(event, 'fs67', 249)" onmouseover="showTip(event, 'fs67', 249)" class="id">board2</span> <span class="pn">(</span><span class="pn">(</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 250)" onmouseover="showTip(event, 'fs19', 250)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 251)" onmouseover="showTip(event, 'fs20', 251)" class="id">c</span><span class="pn">)</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs66', 252)" onmouseover="showTip(event, 'fs66', 252)" class="id">rest</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs13', 253)" onmouseover="showTip(event, 'fs13', 253)" class="id">board</span><span class="pn">)</span><span class="uc">::</span><span onmouseout="hideTip(event, 'fs60', 254)" onmouseover="showTip(event, 'fs60', 254)" class="id">asgns</span><span class="pn">)</span> <span onmouseout="hideTip(event, 'fs61', 255)" onmouseover="showTip(event, 'fs61', 255)" class="id">rem</span>
            <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs9', 256)" onmouseover="showTip(event, 'fs9', 256)" class="uc">Infeasible</span>  <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs64', 257)" onmouseover="showTip(event, 'fs64', 257)" class="fn">tryAssign</span> <span onmouseout="hideTip(event, 'fs13', 258)" onmouseover="showTip(event, 'fs13', 258)" class="id">board</span> <span onmouseout="hideTip(event, 'fs60', 259)" onmouseover="showTip(event, 'fs60', 259)" class="id">asgns</span> <span onmouseout="hideTip(event, 'fs61', 260)" onmouseover="showTip(event, 'fs61', 260)" class="id">rem</span> <span class="pn">(</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 261)" onmouseover="showTip(event, 'fs19', 261)" class="id">r</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs20', 262)" onmouseover="showTip(event, 'fs20', 262)" class="id">c</span><span class="pn">)</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs66', 263)" onmouseover="showTip(event, 'fs66', 263)" class="id">rest</span><span class="pn">)</span>

    <span class="k">and</span> <span onmouseout="hideTip(event, 'fs68', 264)" onmouseover="showTip(event, 'fs68', 264)" class="fn">loop</span> <span onmouseout="hideTip(event, 'fs13', 265)" onmouseover="showTip(event, 'fs13', 265)" class="id">board</span> <span onmouseout="hideTip(event, 'fs60', 266)" onmouseover="showTip(event, 'fs60', 266)" class="id">asgns</span> <span onmouseout="hideTip(event, 'fs61', 267)" onmouseover="showTip(event, 'fs61', 267)" class="id">rem</span> <span class="o">=</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs69', 268)" onmouseover="showTip(event, 'fs69', 268)" class="m">List</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs70', 269)" onmouseover="showTip(event, 'fs70', 269)" class="id">length</span> <span onmouseout="hideTip(event, 'fs60', 270)" onmouseover="showTip(event, 'fs60', 270)" class="id">asgns</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs69', 271)" onmouseover="showTip(event, 'fs69', 271)" class="m">List</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs70', 272)" onmouseover="showTip(event, 'fs70', 272)" class="id">length</span> <span onmouseout="hideTip(event, 'fs61', 273)" onmouseover="showTip(event, 'fs61', 273)" class="id">rem</span> <span class="o">&lt;&gt;</span> <span onmouseout="hideTip(event, 'fs69', 274)" onmouseover="showTip(event, 'fs69', 274)" class="m">List</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs70', 275)" onmouseover="showTip(event, 'fs70', 275)" class="id">length</span> <span onmouseout="hideTip(event, 'fs58', 276)" onmouseover="showTip(event, 'fs58', 276)" class="id">cells</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs54', 277)" onmouseover="showTip(event, 'fs54', 277)" class="fn">failwith</span> $&quot;<span class="pn">{</span><span class="id">asgns</span><span class="pn">.</span><span class="id">Length</span><span class="pn">}</span> <span class="o">+</span> <span class="pn">{</span><span class="id">rem</span><span class="pn">.</span><span class="id">Length</span><span class="pn">}</span> <span class="o">&lt;&gt;</span> <span class="pn">{</span><span onmouseout="hideTip(event, 'fs58', 278)" onmouseover="showTip(event, 'fs58', 278)" class="id">cells</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs71', 279)" onmouseover="showTip(event, 'fs71', 279)" class="id">Length</span><span class="pn">}</span><span class="s">&quot;</span>
<span class="s">        match rem with</span>
<span class="s">        | []             -&gt; board //solution; all empty cells assigned successfully</span>
<span class="s">        | (r,c)::restRem -&gt; </span>
<span class="s">            let avail = available board (r,c) |&gt; Set.toList</span>
<span class="s">            tryAssign board asgns restRem ((r,c),avail)</span>

<span class="s">    loop board [] cells</span>

<span class="s">(*************</span>
<span class="s">Test solver</span>
<span class="s">*************)</span>
<span class="s">open System</span>
<span class="s">let cells (ls:string list list) =</span>
<span class="s">    ls |&gt; List.mapi (fun r cols -&gt;</span>
<span class="s">        cols |&gt; List.mapi (fun c strd -&gt; </span>
<span class="s">            match Int32.TryParse strd with</span>
<span class="s">            | true,d -&gt; Some((r+1,c+1),d)</span>
<span class="s">            | _      -&gt; None))</span>
<span class="s">    |&gt; List.collect (List.choose (fun x-&gt;x))</span>
<span class="s">                </span>
<span class="s">let boardData1 =</span>
<span class="s">    [</span>
<span class="s">        [&quot;</span><span class="n">5</span><span class="s">&quot;;&quot;</span><span class="n">3</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="n">7</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;];</span>
<span class="s">        [&quot;</span><span class="n">6</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="n">1</span><span class="s">&quot;;&quot;</span><span class="n">9</span><span class="s">&quot;;&quot;</span><span class="n">5</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;];</span>
<span class="s">        [&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="n">9</span><span class="s">&quot;;&quot;</span><span class="n">8</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="n">6</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;];</span>
<span class="s">        [&quot;</span><span class="n">8</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="n">6</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="n">3</span><span class="s">&quot;];</span>
<span class="s">        [&quot;</span><span class="n">4</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="n">8</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="n">3</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="n">1</span><span class="s">&quot;];</span>
<span class="s">        [&quot;</span><span class="n">7</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="n">2</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="n">6</span><span class="s">&quot;];</span>
<span class="s">        [&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="n">6</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="n">2</span><span class="s">&quot;;&quot;</span><span class="n">8</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;];</span>
<span class="s">        [&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="n">4</span><span class="s">&quot;;&quot;</span><span class="n">1</span><span class="s">&quot;;&quot;</span><span class="n">9</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="n">5</span><span class="s">&quot;];</span>
<span class="s">        [&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="n">8</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="pn">.</span><span class="s">&quot;;&quot;</span><span class="n">7</span><span class="s">&quot;;&quot;</span><span class="n">9</span><span class="s">&quot;]</span>
<span class="s">    ]</span>

<span class="s">let board1 = initBoard (cells boardData1)</span>

<span class="s">let board1S = solve board1</span>

<span class="s">let board1SolutionData = //there is only 1 solution</span>
<span class="s"> [</span>
<span class="s">    [&quot;</span><span class="n">5</span><span class="s">&quot;;&quot;</span><span class="n">3</span><span class="s">&quot;;&quot;</span><span class="n">4</span><span class="s">&quot;;&quot;</span><span class="n">6</span><span class="s">&quot;;&quot;</span><span class="n">7</span><span class="s">&quot;;&quot;</span><span class="n">8</span><span class="s">&quot;;&quot;</span><span class="n">9</span><span class="s">&quot;;&quot;</span><span class="n">1</span><span class="s">&quot;;&quot;</span><span class="n">2</span><span class="s">&quot;];</span>
<span class="s">    [&quot;</span><span class="n">6</span><span class="s">&quot;;&quot;</span><span class="n">7</span><span class="s">&quot;;&quot;</span><span class="n">2</span><span class="s">&quot;;&quot;</span><span class="n">1</span><span class="s">&quot;;&quot;</span><span class="n">9</span><span class="s">&quot;;&quot;</span><span class="n">5</span><span class="s">&quot;;&quot;</span><span class="n">3</span><span class="s">&quot;;&quot;</span><span class="n">4</span><span class="s">&quot;;&quot;</span><span class="n">8</span><span class="s">&quot;];</span>
<span class="s">    [&quot;</span><span class="n">1</span><span class="s">&quot;;&quot;</span><span class="n">9</span><span class="s">&quot;;&quot;</span><span class="n">8</span><span class="s">&quot;;&quot;</span><span class="n">3</span><span class="s">&quot;;&quot;</span><span class="n">4</span><span class="s">&quot;;&quot;</span><span class="n">2</span><span class="s">&quot;;&quot;</span><span class="n">5</span><span class="s">&quot;;&quot;</span><span class="n">6</span><span class="s">&quot;;&quot;</span><span class="n">7</span><span class="s">&quot;];</span>
<span class="s">    [&quot;</span><span class="n">8</span><span class="s">&quot;;&quot;</span><span class="n">5</span><span class="s">&quot;;&quot;</span><span class="n">9</span><span class="s">&quot;;&quot;</span><span class="n">7</span><span class="s">&quot;;&quot;</span><span class="n">6</span><span class="s">&quot;;&quot;</span><span class="n">1</span><span class="s">&quot;;&quot;</span><span class="n">4</span><span class="s">&quot;;&quot;</span><span class="n">2</span><span class="s">&quot;;&quot;</span><span class="n">3</span><span class="s">&quot;];</span>
<span class="s">    [&quot;</span><span class="n">4</span><span class="s">&quot;;&quot;</span><span class="n">2</span><span class="s">&quot;;&quot;</span><span class="n">6</span><span class="s">&quot;;&quot;</span><span class="n">8</span><span class="s">&quot;;&quot;</span><span class="n">5</span><span class="s">&quot;;&quot;</span><span class="n">3</span><span class="s">&quot;;&quot;</span><span class="n">7</span><span class="s">&quot;;&quot;</span><span class="n">9</span><span class="s">&quot;;&quot;</span><span class="n">1</span><span class="s">&quot;];</span>
<span class="s">    [&quot;</span><span class="n">7</span><span class="s">&quot;;&quot;</span><span class="n">1</span><span class="s">&quot;;&quot;</span><span class="n">3</span><span class="s">&quot;;&quot;</span><span class="n">9</span><span class="s">&quot;;&quot;</span><span class="n">2</span><span class="s">&quot;;&quot;</span><span class="n">4</span><span class="s">&quot;;&quot;</span><span class="n">8</span><span class="s">&quot;;&quot;</span><span class="n">5</span><span class="s">&quot;;&quot;</span><span class="n">6</span><span class="s">&quot;];</span>
<span class="s">    [&quot;</span><span class="n">9</span><span class="s">&quot;;&quot;</span><span class="n">6</span><span class="s">&quot;;&quot;</span><span class="n">1</span><span class="s">&quot;;&quot;</span><span class="n">5</span><span class="s">&quot;;&quot;</span><span class="n">3</span><span class="s">&quot;;&quot;</span><span class="n">7</span><span class="s">&quot;;&quot;</span><span class="n">2</span><span class="s">&quot;;&quot;</span><span class="n">8</span><span class="s">&quot;;&quot;</span><span class="n">4</span><span class="s">&quot;];</span>
<span class="s">    [&quot;</span><span class="n">2</span><span class="s">&quot;;&quot;</span><span class="n">8</span><span class="s">&quot;;&quot;</span><span class="n">7</span><span class="s">&quot;;&quot;</span><span class="n">4</span><span class="s">&quot;;&quot;</span><span class="n">1</span><span class="s">&quot;;&quot;</span><span class="n">9</span><span class="s">&quot;;&quot;</span><span class="n">6</span><span class="s">&quot;;&quot;</span><span class="n">3</span><span class="s">&quot;;&quot;</span><span class="n">5</span><span class="s">&quot;];</span>
<span class="s">    [&quot;</span><span class="n">3</span><span class="s">&quot;;&quot;</span><span class="n">4</span><span class="s">&quot;;&quot;</span><span class="n">5</span><span class="s">&quot;;&quot;</span><span class="n">2</span><span class="s">&quot;;&quot;</span><span class="n">8</span><span class="s">&quot;;&quot;</span><span class="n">6</span><span class="s">&quot;;&quot;</span><span class="n">1</span><span class="s">&quot;;&quot;</span><span class="n">7</span><span class="s">&quot;;&quot;</span><span class="n">9</span><span class="s">&quot;]</span>
<span class="s">]</span>

<span class="s">let board1Solution = initBoard (cells board1SolutionData)</span>

<span class="s">board1S = board1Solution //check solution</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />module Map<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Map&lt;&#39;Key,&#39;Value (requires comparison)&gt; =<br />&#160;&#160;interface IReadOnlyDictionary&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;interface IReadOnlyCollection&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface ICollection&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface IDictionary&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member Add : key:&#39;Key * value:&#39;Value -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member ContainsKey : key:&#39;Key -&gt; bool<br />&#160;&#160;...<br /><br />--------------------<br />new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;</div>
<div class="tip" id="fs2">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />--------------------<br />type int = int32<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int</div>
<div class="tip" id="fs3">type Available = Map&lt;int,Set&lt;int&gt;&gt;</div>
<div class="tip" id="fs4">Multiple items<br />module Set<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Set&lt;&#39;T (requires comparison)&gt; =<br />&#160;&#160;interface IReadOnlyCollection&lt;&#39;T&gt;<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;interface ICollection&lt;&#39;T&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt;<br />&#160;&#160;member Add : value:&#39;T -&gt; Set&lt;&#39;T&gt;<br />&#160;&#160;member Contains : value:&#39;T -&gt; bool<br />&#160;&#160;override Equals : obj -&gt; bool<br />&#160;&#160;member IsProperSubsetOf : otherSet:Set&lt;&#39;T&gt; -&gt; bool<br />&#160;&#160;...<br /><br />--------------------<br />new : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt;</div>
<div class="tip" id="fs5">type Board = Assignments * Available * Available</div>
<div class="tip" id="fs6">type Assignments = Map&lt;(int * int),int&gt;</div>
<div class="tip" id="fs7">type AssignmentResult =<br />&#160;&#160;| Done of Board<br />&#160;&#160;| Infeasible</div>
<div class="tip" id="fs8">union case AssignmentResult.Done: Board -&gt; AssignmentResult</div>
<div class="tip" id="fs9">union case AssignmentResult.Infeasible: AssignmentResult</div>
<div class="tip" id="fs10">val blockSet : Set&lt;int&gt;</div>
<div class="tip" id="fs11">val set : elements:seq&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt; (requires comparison)</div>
<div class="tip" id="fs12">val blockCheck : Assignments * Available * Available -&gt; AssignmentResult</div>
<div class="tip" id="fs13">val board : Board</div>
<div class="tip" id="fs14">val asgns : Assignments</div>
<div class="tip" id="fs15">val completedBlockSumOk : bool</div>
<div class="tip" id="fs16">val toSeq : table:Map&lt;&#39;Key,&#39;T&gt; -&gt; seq&lt;&#39;Key * &#39;T&gt; (requires comparison)</div>
<div class="tip" id="fs17">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs18">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;U&gt;</div>
<div class="tip" id="fs19">val r : int</div>
<div class="tip" id="fs20">val c : int</div>
<div class="tip" id="fs21">val d : int</div>
<div class="tip" id="fs22">val groupBy : projection:(&#39;T -&gt; &#39;Key) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;Key * seq&lt;&#39;T&gt;&gt; (requires equality)</div>
<div class="tip" id="fs23">val fst : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T1</div>
<div class="tip" id="fs24">val filter : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;</div>
<div class="tip" id="fs25">val block : int * int</div>
<div class="tip" id="fs26">val cells : seq&lt;(int * int) * int&gt;</div>
<div class="tip" id="fs27">val length : source:seq&lt;&#39;T&gt; -&gt; int</div>
<div class="tip" id="fs28">val forall : predicate:(&#39;T -&gt; bool) -&gt; source:seq&lt;&#39;T&gt; -&gt; bool</div>
<div class="tip" id="fs29">val xs : seq&lt;(int * int) * int&gt;</div>
<div class="tip" id="fs30">val snd : tuple:(&#39;T1 * &#39;T2) -&gt; &#39;T2</div>
<div class="tip" id="fs31">val available : Assignments * Available * Available -&gt; r:int * c:int -&gt; Set&lt;int&gt;</div>
<div class="tip" id="fs32">val ravl : Available</div>
<div class="tip" id="fs33">val cavl : Available</div>
<div class="tip" id="fs34">val intersect : set1:Set&lt;&#39;T&gt; -&gt; set2:Set&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt; (requires comparison)</div>
<div class="tip" id="fs35">val assign : (int * int) * d:int -&gt; Assignments * Available * Available -&gt; AssignmentResult</div>
<div class="tip" id="fs36">val asgn : Assignments</div>
<div class="tip" id="fs37">val asgn&#39; : Map&lt;(int * int),int&gt;</div>
<div class="tip" id="fs38">val add : key:&#39;Key -&gt; value:&#39;T -&gt; table:Map&lt;&#39;Key,&#39;T&gt; -&gt; Map&lt;&#39;Key,&#39;T&gt; (requires comparison)</div>
<div class="tip" id="fs39">val rSet : Set&lt;int&gt;</div>
<div class="tip" id="fs40">val remove : value:&#39;T -&gt; set:Set&lt;&#39;T&gt; -&gt; Set&lt;&#39;T&gt; (requires comparison)</div>
<div class="tip" id="fs41">val cSet : Set&lt;int&gt;</div>
<div class="tip" id="fs42">val ravl&#39; : Map&lt;int,Set&lt;int&gt;&gt;</div>
<div class="tip" id="fs43">val cavl&#39; : Map&lt;int,Set&lt;int&gt;&gt;</div>
<div class="tip" id="fs44">val board&#39; : Map&lt;(int * int),int&gt; * Map&lt;int,Set&lt;int&gt;&gt; * Map&lt;int,Set&lt;int&gt;&gt;</div>
<div class="tip" id="fs45">val assignChecked : (int * int) * d:int -&gt; Assignments * Available * Available -&gt; AssignmentResult</div>
<div class="tip" id="fs46">val containsKey : key:&#39;Key -&gt; table:Map&lt;&#39;Key,&#39;T&gt; -&gt; bool (requires comparison)</div>
<div class="tip" id="fs47">val contains : element:&#39;T -&gt; set:Set&lt;&#39;T&gt; -&gt; bool (requires comparison)</div>
<div class="tip" id="fs48">val newBoard : unit -&gt; Board</div>
<div class="tip" id="fs49">val empty&lt;&#39;Key,&#39;T (requires comparison)&gt; : Map&lt;&#39;Key,&#39;T&gt; (requires comparison)</div>
<div class="tip" id="fs50">val ofList : elements:(&#39;Key * &#39;T) list -&gt; Map&lt;&#39;Key,&#39;T&gt; (requires comparison)</div>
<div class="tip" id="fs51">val initBoard : assignments:seq&lt;(int * int) * int&gt; -&gt; Board</div>
<div class="tip" id="fs52">val assignments : seq&lt;(int * int) * int&gt;</div>
<div class="tip" id="fs53">val fold : folder:(&#39;State -&gt; &#39;T -&gt; &#39;State) -&gt; state:&#39;State -&gt; source:seq&lt;&#39;T&gt; -&gt; &#39;State</div>
<div class="tip" id="fs54">val failwith : message:string -&gt; &#39;T</div>
<div class="tip" id="fs55">val unassignedCells : Assignments * Available * Available -&gt; (int * int) list</div>
<div class="tip" id="fs56">val not : value:bool -&gt; bool</div>
<div class="tip" id="fs57">val solve : (Board -&gt; &#39;a)</div>
<div class="tip" id="fs58">val cells : (int * int) list</div>
<div class="tip" id="fs59">val backtrack : (((int * int) * int list * Board) list -&gt; (int * int) list -&gt; unit)</div>
<div class="tip" id="fs60">val asgns : ((int * int) * int list * Board) list</div>
<div class="tip" id="fs61">val rem : (int * int) list</div>
<div class="tip" id="fs62">val ds : int list</div>
<div class="tip" id="fs63">val rest : ((int * int) * int list * Board) list</div>
<div class="tip" id="fs64">val tryAssign : (Board -&gt; ((int * int) * int list * Board) list -&gt; (int * int) list -&gt; (int * int) * int list -&gt; unit)</div>
<div class="tip" id="fs65">val curChoices : (int * int) * int list</div>
<div class="tip" id="fs66">val rest : int list</div>
<div class="tip" id="fs67">val board2 : Board</div>
<div class="tip" id="fs68">val loop : (Board -&gt; ((int * int) * int list * Board) list -&gt; (int * int) list -&gt; unit)</div>
<div class="tip" id="fs69">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;&#160;&#160;interface IReadOnlyList&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;interface IReadOnlyCollection&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;interface IEnumerable<br />&#160;&#160;&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;member GetReverseIndex : rank:int * offset:int -&gt; int<br />&#160;&#160;&#160;&#160;member GetSlice : startIndex:int option * endIndex:int option -&gt; &#39;T list<br />&#160;&#160;&#160;&#160;member Head : &#39;T<br />&#160;&#160;&#160;&#160;member IsEmpty : bool<br />&#160;&#160;&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;&#160;&#160;member Length : int<br />&#160;&#160;&#160;&#160;...</div>
<div class="tip" id="fs70">val length : list:&#39;T list -&gt; int</div>
<div class="tip" id="fs71">property List.Length: int with get</div>

