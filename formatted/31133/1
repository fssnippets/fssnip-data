<h2><a name="Intro" class="anchor" href="#Intro">Intro</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">1: </span>
<span class="l">2: </span>
<span class="l">3: </span>
<span class="l">4: </span>
<span class="l">5: </span>
<span class="l">6: </span>
<span class="l">7: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="id">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="id">Threading</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="id">Tasks</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="id">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="id">Collections</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="id">Generic</span>

<span class="c">// This is a simple implementation, with brievity in mind.</span>
<span class="c">// No consideration has been given about disposability, cancellation and performance.</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="if">IAsyncEnumerable</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span>
</code></pre></td>
</tr>
</table>
<h2><a name="First-an-IAsyncEnumerator-implementation-and-a-few-primitive-functions" class="anchor" href="#First-an-IAsyncEnumerator-implementation-and-a-few-primitive-functions">First, an `IAsyncEnumerator' implementation and a few primitive functions</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span class="m">AsyncEnumerator</span> <span class="o">=</span>
    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="rt">AsyncEnumerator</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="fn">moveNextAsync</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="rt">unit</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs11', 12)" onmouseover="showTip(event, 'fs11', 12)" class="d">Task</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs12', 13)" onmouseover="showTip(event, 'fs12', 13)" class="vt">bool</span><span class="pn">&gt;</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs13', 14)" onmouseover="showTip(event, 'fs13', 14)" class="fn">getCurrent</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="rt">unit</span> <span class="k">-&gt;</span> <span class="ta">&#39;</span><span class="id">a</span><span class="pn">)</span> <span class="o">=</span>
        <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs14', 16)" onmouseover="showTip(event, 'fs14', 16)" class="if">IAsyncEnumerator</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span> <span class="k">with</span>
            <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">MoveNextAsync</span> <span class="pn">(</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 17)" onmouseover="showTip(event, 'fs9', 17)" class="fn">moveNextAsync</span> <span class="pn">(</span><span class="pn">)</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 18)" onmouseover="showTip(event, 'fs15', 18)" class="vt">ValueTask</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs12', 19)" onmouseover="showTip(event, 'fs12', 19)" class="vt">bool</span><span class="pn">&gt;</span>
            <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="prop">Current</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 20)" onmouseover="showTip(event, 'fs13', 20)" class="fn">getCurrent</span> <span class="pn">(</span><span class="pn">)</span>
        <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs1', 21)" onmouseover="showTip(event, 'fs1', 21)" class="if">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 22)" onmouseover="showTip(event, 'fs16', 22)" class="id">IAsyncDisposable</span> <span class="k">with</span>
            <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">DisposeAsync</span> <span class="pn">(</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 23)" onmouseover="showTip(event, 'fs15', 23)" class="id">ValueTask</span><span class="pn">.</span><span class="id">CompletedTask</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="id">empty</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span> <span class="o">=</span>
        <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs18', 25)" onmouseover="showTip(event, 'fs18', 25)" class="mv">started</span> <span class="o">=</span> <span class="k">false</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 26)" onmouseover="showTip(event, 'fs19', 26)" class="fn">moveNext</span> <span class="pn">(</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 27)" onmouseover="showTip(event, 'fs18', 27)" class="mv">started</span> <span class="k">&lt;-</span> <span class="k">true</span> <span class="pn">;</span> <span onmouseout="hideTip(event, 'fs11', 28)" onmouseover="showTip(event, 'fs11', 28)" class="d">Task</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs20', 29)" onmouseover="showTip(event, 'fs20', 29)" class="id">FromResult</span> <span class="k">false</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 30)" onmouseover="showTip(event, 'fs21', 30)" class="fn">current</span> <span class="pn">(</span><span class="pn">)</span> <span class="pn">:</span> <span class="ta">&#39;</span><span class="id">a</span> <span class="o">=</span> <span class="pn">(</span><span class="k">if</span> <span onmouseout="hideTip(event, 'fs22', 31)" onmouseover="showTip(event, 'fs22', 31)" class="fn">not</span> <span onmouseout="hideTip(event, 'fs18', 32)" onmouseover="showTip(event, 'fs18', 32)" class="mv">started</span> <span class="k">then</span> <span class="s">&quot;Sequence not started&quot;</span> <span class="k">else</span> <span class="s">&quot;Sequence exhausted&quot;</span><span class="pn">)</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs23', 33)" onmouseover="showTip(event, 'fs23', 33)" class="fn">invalidOp</span>
        <span onmouseout="hideTip(event, 'fs8', 34)" onmouseover="showTip(event, 'fs8', 34)" class="rt">AsyncEnumerator</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 35)" onmouseover="showTip(event, 'fs19', 35)" class="fn">moveNext</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs21', 36)" onmouseover="showTip(event, 'fs21', 36)" class="fn">current</span><span class="pn">)</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs24', 37)" onmouseover="showTip(event, 'fs24', 37)" class="fn">singleton</span> <span onmouseout="hideTip(event, 'fs25', 38)" onmouseover="showTip(event, 'fs25', 38)" class="id">x</span> <span class="o">=</span>
        <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs18', 39)" onmouseover="showTip(event, 'fs18', 39)" class="mv">started</span> <span class="o">=</span> <span class="k">false</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 40)" onmouseover="showTip(event, 'fs19', 40)" class="fn">moveNext</span> <span class="pn">(</span><span class="pn">)</span> <span class="o">=</span> <span class="k">try</span> <span onmouseout="hideTip(event, 'fs11', 41)" onmouseover="showTip(event, 'fs11', 41)" class="d">Task</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs20', 42)" onmouseover="showTip(event, 'fs20', 42)" class="id">FromResult</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs22', 43)" onmouseover="showTip(event, 'fs22', 43)" class="fn">not</span> <span onmouseout="hideTip(event, 'fs18', 44)" onmouseover="showTip(event, 'fs18', 44)" class="mv">started</span><span class="pn">)</span> <span class="k">finally</span> <span onmouseout="hideTip(event, 'fs18', 45)" onmouseover="showTip(event, 'fs18', 45)" class="mv">started</span> <span class="k">&lt;-</span> <span class="k">true</span>
        <span onmouseout="hideTip(event, 'fs8', 46)" onmouseover="showTip(event, 'fs8', 46)" class="rt">AsyncEnumerator</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 47)" onmouseover="showTip(event, 'fs19', 47)" class="fn">moveNext</span><span class="pn">,</span> <span class="k">fun</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs25', 48)" onmouseover="showTip(event, 'fs25', 48)" class="id">x</span><span class="pn">)</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 49)" onmouseover="showTip(event, 'fs26', 49)" class="fn">append</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs27', 50)" onmouseover="showTip(event, 'fs27', 50)" class="id">itor1</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs14', 51)" onmouseover="showTip(event, 'fs14', 51)" class="if">IAsyncEnumerator</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs28', 52)" onmouseover="showTip(event, 'fs28', 52)" class="id">itor2</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs14', 53)" onmouseover="showTip(event, 'fs14', 53)" class="if">IAsyncEnumerator</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="pn">:</span> <span onmouseout="hideTip(event, 'fs14', 54)" onmouseover="showTip(event, 'fs14', 54)" class="if">IAsyncEnumerator</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span> <span class="o">=</span>
        <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs29', 55)" onmouseover="showTip(event, 'fs29', 55)" class="mv">itering1</span> <span class="o">=</span> <span class="k">true</span>
        <span onmouseout="hideTip(event, 'fs8', 56)" onmouseover="showTip(event, 'fs8', 56)" class="rt">AsyncEnumerator</span> <span class="pn">(</span>
            <span class="id">moveNextAsync</span> <span class="o">=</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">-&gt;</span> 
                <span class="id">task</span> <span class="pn">{</span>  
                    <span class="k">let!</span> <span class="id">next</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 57)" onmouseover="showTip(event, 'fs27', 57)" class="id">itor1</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs30', 58)" onmouseover="showTip(event, 'fs30', 58)" class="id">MoveNextAsync</span> <span class="pn">(</span><span class="pn">)</span>
                    <span class="k">if</span> <span class="id">next</span> <span class="k">then</span> <span class="k">return</span> <span class="k">true</span> 
                    <span class="k">else</span> <span onmouseout="hideTip(event, 'fs29', 59)" onmouseover="showTip(event, 'fs29', 59)" class="id">itering1</span> <span class="k">&lt;-</span> <span class="k">false</span> <span class="pn">;</span> <span class="k">return!</span> <span onmouseout="hideTip(event, 'fs28', 60)" onmouseover="showTip(event, 'fs28', 60)" class="id">itor2</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs30', 61)" onmouseover="showTip(event, 'fs30', 61)" class="id">MoveNextAsync</span> <span class="pn">(</span><span class="pn">)</span>
                <span class="pn">}</span>
            <span class="pn">)</span><span class="pn">,</span> 
            <span class="id">getCurrent</span> <span class="o">=</span> <span class="k">fun</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">-&gt;</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs29', 62)" onmouseover="showTip(event, 'fs29', 62)" class="mv">itering1</span> <span class="k">then</span> <span onmouseout="hideTip(event, 'fs27', 63)" onmouseover="showTip(event, 'fs27', 63)" class="id">itor1</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs31', 64)" onmouseover="showTip(event, 'fs31', 64)" class="id">Current</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs28', 65)" onmouseover="showTip(event, 'fs28', 65)" class="id">itor2</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs31', 66)" onmouseover="showTip(event, 'fs31', 66)" class="id">Current</span>
        <span class="pn">)</span>

    <span class="c">/// Bind a `Task` to an `IAsyncEnumerator`. The task is started and awaited only once, at first enumeration.</span>
    <span class="c">/// Its result is applied by the `getEnumerator`argument.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs32', 67)" onmouseover="showTip(event, 'fs32', 67)" class="fn">bind</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs33', 68)" onmouseover="showTip(event, 'fs33', 68)" class="fn">getDelay</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs10', 69)" onmouseover="showTip(event, 'fs10', 69)" class="rt">unit</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs11', 70)" onmouseover="showTip(event, 'fs11', 70)" class="d">Task</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs34', 71)" onmouseover="showTip(event, 'fs34', 71)" class="fn">getEnumerator</span><span class="pn">:</span>  <span class="ta">&#39;</span><span class="id">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 72)" onmouseover="showTip(event, 'fs14', 72)" class="if">IAsyncEnumerator</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">b</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span>
        <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs35', 73)" onmouseover="showTip(event, 'fs35', 73)" class="mv">itor</span> <span class="o">=</span> <span class="k">null</span>
        <span onmouseout="hideTip(event, 'fs8', 74)" onmouseover="showTip(event, 'fs8', 74)" class="rt">AsyncEnumerator</span> <span class="pn">(</span>
            <span class="id">moveNextAsync</span> <span class="o">=</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">-&gt;</span> 
                <span class="id">task</span> <span class="pn">{</span>  
                    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs35', 75)" onmouseover="showTip(event, 'fs35', 75)" class="id">itor</span> <span class="o">=</span> <span class="k">null</span> <span class="k">then</span> <span class="k">let!</span> <span class="id">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs33', 76)" onmouseover="showTip(event, 'fs33', 76)" class="id">getDelay</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs35', 77)" onmouseover="showTip(event, 'fs35', 77)" class="id">itor</span> <span class="k">&lt;-</span> <span onmouseout="hideTip(event, 'fs34', 78)" onmouseover="showTip(event, 'fs34', 78)" class="id">getEnumerator</span> <span class="id">x</span>
                    <span class="k">return!</span> <span onmouseout="hideTip(event, 'fs35', 79)" onmouseover="showTip(event, 'fs35', 79)" class="id">itor</span><span class="pn">.</span><span class="id">MoveNextAsync</span> <span class="pn">(</span><span class="pn">)</span>
                <span class="pn">}</span>
            <span class="pn">)</span><span class="pn">,</span> 
            <span class="id">getCurrent</span> <span class="o">=</span> <span class="k">fun</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs35', 80)" onmouseover="showTip(event, 'fs35', 80)" class="mv">itor</span><span class="pn">.</span><span class="id">Current</span>
        <span class="pn">)</span>
</code></pre></td>
</tr>
</table>
<h2><a name="Definition-of-the-computation-expression" class="anchor" href="#Definition-of-the-computation-expression">Definition of the computation expression</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">module</span> <span onmouseout="hideTip(event, 'fs6', 81)" onmouseover="showTip(event, 'fs6', 81)" class="m">SeqAsync</span> <span class="o">=</span>
    <span class="c">/// Build an `SeqAsync` from a fuction returning an `IAsyncEnumerator`.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs36', 82)" onmouseover="showTip(event, 'fs36', 82)" class="fn">ofEnumerator</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs37', 83)" onmouseover="showTip(event, 'fs37', 83)" class="fn">getAsyncEnumerator</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs10', 84)" onmouseover="showTip(event, 'fs10', 84)" class="rt">unit</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 85)" onmouseover="showTip(event, 'fs14', 85)" class="if">IAsyncEnumerator</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="pn">:</span> <span onmouseout="hideTip(event, 'fs6', 86)" onmouseover="showTip(event, 'fs6', 86)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span> <span class="o">=</span>
        <span class="pn">{</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs7', 87)" onmouseover="showTip(event, 'fs7', 87)" class="if">IAsyncEnumerable</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span> <span class="k">with</span> <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">GetAsyncEnumerator</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs37', 88)" onmouseover="showTip(event, 'fs37', 88)" class="fn">getAsyncEnumerator</span> <span class="pn">(</span><span class="pn">)</span> <span class="pn">}</span>

    <span class="c">// The rest is usual boiler plate.</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs38', 89)" onmouseover="showTip(event, 'fs38', 89)" class="fn">bind</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs39', 90)" onmouseover="showTip(event, 'fs39', 90)" class="fn">expr</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs10', 91)" onmouseover="showTip(event, 'fs10', 91)" class="rt">unit</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs11', 92)" onmouseover="showTip(event, 'fs11', 92)" class="d">Task</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs40', 93)" onmouseover="showTip(event, 'fs40', 93)" class="fn">func</span><span class="pn">:</span>  <span class="ta">&#39;</span><span class="id">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 94)" onmouseover="showTip(event, 'fs6', 94)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">b</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="pn">:</span> <span onmouseout="hideTip(event, 'fs6', 95)" onmouseover="showTip(event, 'fs6', 95)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">b</span><span class="pn">&gt;</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs36', 96)" onmouseover="showTip(event, 'fs36', 96)" class="fn">ofEnumerator</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs41', 97)" onmouseover="showTip(event, 'fs41', 97)" class="m">AsyncEnumerator</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs42', 98)" onmouseover="showTip(event, 'fs42', 98)" class="id">bind</span> <span onmouseout="hideTip(event, 'fs39', 99)" onmouseover="showTip(event, 'fs39', 99)" class="fn">expr</span> <span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs25', 100)" onmouseover="showTip(event, 'fs25', 100)" class="id">x</span> <span class="k">-&gt;</span> <span class="fn">(</span><span onmouseout="hideTip(event, 'fs40', 101)" onmouseover="showTip(event, 'fs40', 101)" class="fn">func</span> <span onmouseout="hideTip(event, 'fs25', 102)" onmouseover="showTip(event, 'fs25', 102)" class="id">x</span><span class="pn">)</span><span class="pn">.</span><span class="id">GetAsyncEnumerator</span> <span class="pn">(</span><span class="pn">)</span><span class="pn">)</span><span class="pn">)</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs43', 103)" onmouseover="showTip(event, 'fs43', 103)" class="fn">delay</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs44', 104)" onmouseover="showTip(event, 'fs44', 104)" class="fn">delayed</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs10', 105)" onmouseover="showTip(event, 'fs10', 105)" class="rt">unit</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 106)" onmouseover="showTip(event, 'fs6', 106)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs38', 107)" onmouseover="showTip(event, 'fs38', 107)" class="fn">bind</span> <span onmouseout="hideTip(event, 'fs11', 108)" onmouseover="showTip(event, 'fs11', 108)" class="d">Task</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs20', 109)" onmouseover="showTip(event, 'fs20', 109)" class="id">FromResult</span> <span onmouseout="hideTip(event, 'fs44', 110)" onmouseover="showTip(event, 'fs44', 110)" class="fn">delayed</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs45', 111)" onmouseover="showTip(event, 'fs45', 111)" class="id">empty</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs36', 112)" onmouseover="showTip(event, 'fs36', 112)" class="fn">ofEnumerator</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs41', 113)" onmouseover="showTip(event, 'fs41', 113)" class="m">AsyncEnumerator</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs46', 114)" onmouseover="showTip(event, 'fs46', 114)" class="id">empty</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">)</span> 
 
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs47', 115)" onmouseover="showTip(event, 'fs47', 115)" class="fn">singleton</span> <span onmouseout="hideTip(event, 'fs25', 116)" onmouseover="showTip(event, 'fs25', 116)" class="id">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs36', 117)" onmouseover="showTip(event, 'fs36', 117)" class="fn">ofEnumerator</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs41', 118)" onmouseover="showTip(event, 'fs41', 118)" class="m">AsyncEnumerator</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs48', 119)" onmouseover="showTip(event, 'fs48', 119)" class="id">singleton</span> <span onmouseout="hideTip(event, 'fs25', 120)" onmouseover="showTip(event, 'fs25', 120)" class="id">x</span><span class="pn">)</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs49', 121)" onmouseover="showTip(event, 'fs49', 121)" class="fn">append</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs50', 122)" onmouseover="showTip(event, 'fs50', 122)" class="id">source1</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs6', 123)" onmouseover="showTip(event, 'fs6', 123)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs51', 124)" onmouseover="showTip(event, 'fs51', 124)" class="id">source2</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs6', 125)" onmouseover="showTip(event, 'fs6', 125)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs36', 126)" onmouseover="showTip(event, 'fs36', 126)" class="fn">ofEnumerator</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs41', 127)" onmouseover="showTip(event, 'fs41', 127)" class="m">AsyncEnumerator</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs26', 128)" onmouseover="showTip(event, 'fs26', 128)" class="id">append</span> <span class="o">&lt;||</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs50', 129)" onmouseover="showTip(event, 'fs50', 129)" class="fn">source1</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs52', 130)" onmouseover="showTip(event, 'fs52', 130)" class="id">GetAsyncEnumerator</span> <span class="pn">(</span><span class="pn">)</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs51', 131)" onmouseover="showTip(event, 'fs51', 131)" class="fn">source2</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs52', 132)" onmouseover="showTip(event, 'fs52', 132)" class="id">GetAsyncEnumerator</span> <span class="pn">(</span><span class="pn">)</span><span class="pn">)</span><span class="pn">)</span>

    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs53', 133)" onmouseover="showTip(event, 'fs53', 133)" class="fn">whileLoop</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs54', 134)" onmouseover="showTip(event, 'fs54', 134)" class="fn">condition</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs10', 135)" onmouseover="showTip(event, 'fs10', 135)" class="rt">unit</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs12', 136)" onmouseover="showTip(event, 'fs12', 136)" class="vt">bool</span><span class="pn">)</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs55', 137)" onmouseover="showTip(event, 'fs55', 137)" class="id">body</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs6', 138)" onmouseover="showTip(event, 'fs6', 138)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs54', 139)" onmouseover="showTip(event, 'fs54', 139)" class="fn">condition</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">then</span> 
            <span onmouseout="hideTip(event, 'fs49', 140)" onmouseover="showTip(event, 'fs49', 140)" class="fn">append</span> <span onmouseout="hideTip(event, 'fs55', 141)" onmouseover="showTip(event, 'fs55', 141)" class="id">body</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs43', 142)" onmouseover="showTip(event, 'fs43', 142)" class="fn">delay</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs53', 143)" onmouseover="showTip(event, 'fs53', 143)" class="fn">whileLoop</span> <span onmouseout="hideTip(event, 'fs54', 144)" onmouseover="showTip(event, 'fs54', 144)" class="fn">condition</span> <span onmouseout="hideTip(event, 'fs55', 145)" onmouseover="showTip(event, 'fs55', 145)" class="id">body</span><span class="pn">)</span><span class="pn">)</span>
        <span class="k">else</span> <span onmouseout="hideTip(event, 'fs45', 146)" onmouseover="showTip(event, 'fs45', 146)" class="id">empty</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs56', 147)" onmouseover="showTip(event, 'fs56', 147)" class="fn">forLoop</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs57', 148)" onmouseover="showTip(event, 'fs57', 148)" class="id">sequence</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs58', 149)" onmouseover="showTip(event, 'fs58', 149)" class="if">seq</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs59', 150)" onmouseover="showTip(event, 'fs59', 150)" class="fn">body</span><span class="pn">:</span> <span class="ta">&#39;</span><span class="id">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 151)" onmouseover="showTip(event, 'fs6', 151)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">b</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span>
        <span class="k">use</span> <span onmouseout="hideTip(event, 'fs60', 152)" onmouseover="showTip(event, 'fs60', 152)" class="id">itor</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs57', 153)" onmouseover="showTip(event, 'fs57', 153)" class="fn">sequence</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs61', 154)" onmouseover="showTip(event, 'fs61', 154)" class="id">GetEnumerator</span><span class="pn">(</span><span class="pn">)</span>
        <span onmouseout="hideTip(event, 'fs53', 155)" onmouseover="showTip(event, 'fs53', 155)" class="fn">whileLoop</span> <span onmouseout="hideTip(event, 'fs60', 156)" onmouseover="showTip(event, 'fs60', 156)" class="fn">itor</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs62', 157)" onmouseover="showTip(event, 'fs62', 157)" class="id">MoveNext</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs43', 158)" onmouseover="showTip(event, 'fs43', 158)" class="fn">delay</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs59', 159)" onmouseover="showTip(event, 'fs59', 159)" class="fn">body</span> <span onmouseout="hideTip(event, 'fs60', 160)" onmouseover="showTip(event, 'fs60', 160)" class="id">itor</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs63', 161)" onmouseover="showTip(event, 'fs63', 161)" class="id">Current</span><span class="pn">)</span><span class="pn">)</span>

    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs64', 162)" onmouseover="showTip(event, 'fs64', 162)" class="rt">SeqAsyncBuilder</span> <span class="pn">(</span><span class="pn">)</span> <span class="o">=</span>
        <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">Delay</span> <span onmouseout="hideTip(event, 'fs65', 163)" onmouseover="showTip(event, 'fs65', 163)" class="fn">tail</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs43', 164)" onmouseover="showTip(event, 'fs43', 164)" class="fn">delay</span> <span onmouseout="hideTip(event, 'fs65', 165)" onmouseover="showTip(event, 'fs65', 165)" class="fn">tail</span>
        <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">Yield</span> <span onmouseout="hideTip(event, 'fs66', 166)" onmouseover="showTip(event, 'fs66', 166)" class="id">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs47', 167)" onmouseover="showTip(event, 'fs47', 167)" class="fn">singleton</span> <span onmouseout="hideTip(event, 'fs66', 168)" onmouseover="showTip(event, 'fs66', 168)" class="id">x</span>
        <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">Combine</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs67', 169)" onmouseover="showTip(event, 'fs67', 169)" class="id">xs</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs68', 170)" onmouseover="showTip(event, 'fs68', 170)" class="id">ys</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 171)" onmouseover="showTip(event, 'fs49', 171)" class="fn">append</span> <span onmouseout="hideTip(event, 'fs67', 172)" onmouseover="showTip(event, 'fs67', 172)" class="id">xs</span> <span onmouseout="hideTip(event, 'fs68', 173)" onmouseover="showTip(event, 'fs68', 173)" class="id">ys</span>
        <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">YieldFrom</span> <span onmouseout="hideTip(event, 'fs69', 174)" onmouseover="showTip(event, 'fs69', 174)" class="id">xs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs69', 175)" onmouseover="showTip(event, 'fs69', 175)" class="id">xs</span>
        <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">Bind</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs70', 176)" onmouseover="showTip(event, 'fs70', 176)" class="id">expr</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs11', 177)" onmouseover="showTip(event, 'fs11', 177)" class="d">Task</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs71', 178)" onmouseover="showTip(event, 'fs71', 178)" class="fn">body</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs71', 179)" onmouseover="showTip(event, 'fs71', 179)" class="fn">body</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs38', 180)" onmouseover="showTip(event, 'fs38', 180)" class="fn">bind</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs70', 181)" onmouseover="showTip(event, 'fs70', 181)" class="id">expr</span><span class="pn">)</span>
        <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">Bind</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs72', 182)" onmouseover="showTip(event, 'fs72', 182)" class="id">expr</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs11', 183)" onmouseover="showTip(event, 'fs11', 183)" class="d">Task</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs73', 184)" onmouseover="showTip(event, 'fs73', 184)" class="fn">body</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs73', 185)" onmouseover="showTip(event, 'fs73', 185)" class="fn">body</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs38', 186)" onmouseover="showTip(event, 'fs38', 186)" class="fn">bind</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">-&gt;</span> <span class="id">task</span> <span class="pn">{</span> <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs72', 187)" onmouseover="showTip(event, 'fs72', 187)" class="id">expr</span> <span class="pn">}</span><span class="pn">)</span>
        <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">Zero</span> <span class="pn">(</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs45', 188)" onmouseover="showTip(event, 'fs45', 188)" class="id">empty</span>
        <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">While</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs54', 189)" onmouseover="showTip(event, 'fs54', 189)" class="fn">condition</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs55', 190)" onmouseover="showTip(event, 'fs55', 190)" class="id">body</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 191)" onmouseover="showTip(event, 'fs53', 191)" class="fn">whileLoop</span> <span onmouseout="hideTip(event, 'fs54', 192)" onmouseover="showTip(event, 'fs54', 192)" class="fn">condition</span> <span onmouseout="hideTip(event, 'fs55', 193)" onmouseover="showTip(event, 'fs55', 193)" class="id">body</span>
        <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">For</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs57', 194)" onmouseover="showTip(event, 'fs57', 194)" class="id">sequence</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs58', 195)" onmouseover="showTip(event, 'fs58', 195)" class="if">seq</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs59', 196)" onmouseover="showTip(event, 'fs59', 196)" class="fn">body</span><span class="pn">)</span> <span class="pn">:</span> <span onmouseout="hideTip(event, 'fs6', 197)" onmouseover="showTip(event, 'fs6', 197)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">b</span><span class="pn">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs56', 198)" onmouseover="showTip(event, 'fs56', 198)" class="fn">forLoop</span> <span onmouseout="hideTip(event, 'fs57', 199)" onmouseover="showTip(event, 'fs57', 199)" class="id">sequence</span> <span onmouseout="hideTip(event, 'fs59', 200)" onmouseover="showTip(event, 'fs59', 200)" class="fn">body</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs74', 201)" onmouseover="showTip(event, 'fs74', 201)" class="id">seqAsync</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs64', 202)" onmouseover="showTip(event, 'fs64', 202)" class="rt">SeqAsyncBuilder</span> <span class="pn">(</span><span class="pn">)</span>
</code></pre></td>
</tr>
</table>
<h2><a name="Some-utilities" class="anchor" href="#Some-utilities">Some utilities</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp">    <span class="c">/// Returns a `Task` retreiving the head and tail (as an `option`) from the source</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs75', 203)" onmouseover="showTip(event, 'fs75', 203)" class="fn">tryUnconsAsync</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs76', 204)" onmouseover="showTip(event, 'fs76', 204)" class="id">source</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs6', 205)" onmouseover="showTip(event, 'fs6', 205)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="pn">:</span> <span onmouseout="hideTip(event, 'fs11', 206)" onmouseover="showTip(event, 'fs11', 206)" class="d">Task</span><span class="pn">&lt;</span><span class="pn">(</span><span class="ta">&#39;</span><span class="id">a</span> <span class="pn">*</span> <span onmouseout="hideTip(event, 'fs6', 207)" onmouseover="showTip(event, 'fs6', 207)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">)</span> <span onmouseout="hideTip(event, 'fs77', 208)" onmouseover="showTip(event, 'fs77', 208)" class="rt">option</span><span class="pn">&gt;</span> <span class="o">=</span>
        <span class="id">task</span> <span class="pn">{</span>
            <span class="k">let</span> <span class="id">itor</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs76', 209)" onmouseover="showTip(event, 'fs76', 209)" class="id">source</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs52', 210)" onmouseover="showTip(event, 'fs52', 210)" class="id">GetAsyncEnumerator</span> <span class="pn">(</span><span class="pn">)</span>
            <span class="k">match!</span> <span class="id">itor</span><span class="pn">.</span><span class="id">MoveNextAsync</span><span class="pn">(</span><span class="pn">)</span> <span class="k">with</span>
            <span class="pn">|</span> <span class="k">false</span> <span class="k">-&gt;</span> <span class="k">return</span> <span onmouseout="hideTip(event, 'fs78', 211)" onmouseover="showTip(event, 'fs78', 211)" class="id">None</span>
            <span class="pn">|</span> <span class="k">true</span> <span class="k">-&gt;</span> <span class="k">return</span> <span onmouseout="hideTip(event, 'fs79', 212)" onmouseover="showTip(event, 'fs79', 212)" class="id">Some</span> <span class="pn">(</span><span class="id">itor</span><span class="pn">.</span><span class="id">Current</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs36', 213)" onmouseover="showTip(event, 'fs36', 213)" class="id">ofEnumerator</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">-&gt;</span> <span class="id">itor</span><span class="pn">)</span><span class="pn">)</span>
        <span class="pn">}</span>

    <span class="c">/// Mirrors `collect` function from `Seq` and `List` modules.</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs80', 214)" onmouseover="showTip(event, 'fs80', 214)" class="fn">collect</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs81', 215)" onmouseover="showTip(event, 'fs81', 215)" class="fn">mapping</span><span class="pn">:</span> <span class="ta">&#39;</span><span class="id">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs6', 216)" onmouseover="showTip(event, 'fs6', 216)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">b</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs76', 217)" onmouseover="showTip(event, 'fs76', 217)" class="id">source</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs6', 218)" onmouseover="showTip(event, 'fs6', 218)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs74', 219)" onmouseover="showTip(event, 'fs74', 219)" class="k">seqAsync</span> <span class="pn">{</span>
            <span class="k">match!</span> <span onmouseout="hideTip(event, 'fs75', 220)" onmouseover="showTip(event, 'fs75', 220)" class="fn">tryUnconsAsync</span> <span onmouseout="hideTip(event, 'fs76', 221)" onmouseover="showTip(event, 'fs76', 221)" class="id">source</span> <span class="k">with</span>
            <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs78', 222)" onmouseover="showTip(event, 'fs78', 222)" class="uc">None</span> <span class="k">-&gt;</span> <span class="pn">(</span><span class="pn">)</span>
            <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs79', 223)" onmouseover="showTip(event, 'fs79', 223)" class="uc">Some</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs25', 224)" onmouseover="showTip(event, 'fs25', 224)" class="id">x</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs82', 225)" onmouseover="showTip(event, 'fs82', 225)" class="id">xs</span><span class="pn">)</span> <span class="k">-&gt;</span> <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs81', 226)" onmouseover="showTip(event, 'fs81', 226)" class="fn">mapping</span> <span onmouseout="hideTip(event, 'fs25', 227)" onmouseover="showTip(event, 'fs25', 227)" class="id">x</span> <span class="pn">;</span> <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs80', 228)" onmouseover="showTip(event, 'fs80', 228)" class="fn">collect</span> <span onmouseout="hideTip(event, 'fs81', 229)" onmouseover="showTip(event, 'fs81', 229)" class="fn">mapping</span> <span onmouseout="hideTip(event, 'fs82', 230)" onmouseover="showTip(event, 'fs82', 230)" class="id">xs</span>
        <span class="pn">}</span>
    
    <span class="k">type</span> <span onmouseout="hideTip(event, 'fs64', 231)" onmouseover="showTip(event, 'fs64', 231)" class="rt">SeqAsyncBuilder</span> <span class="k">with</span>
        <span class="c">/// Add iteration over `SeqAsync` with `for` in the computation expression.</span>
        <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">For</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs83', 232)" onmouseover="showTip(event, 'fs83', 232)" class="id">sequence</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs6', 233)" onmouseover="showTip(event, 'fs6', 233)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs59', 234)" onmouseover="showTip(event, 'fs59', 234)" class="fn">body</span><span class="pn">)</span> <span class="pn">:</span> <span onmouseout="hideTip(event, 'fs6', 235)" onmouseover="showTip(event, 'fs6', 235)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">b</span><span class="pn">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs80', 236)" onmouseover="showTip(event, 'fs80', 236)" class="fn">collect</span> <span onmouseout="hideTip(event, 'fs59', 237)" onmouseover="showTip(event, 'fs59', 237)" class="fn">body</span> <span onmouseout="hideTip(event, 'fs83', 238)" onmouseover="showTip(event, 'fs83', 238)" class="id">sequence</span>

    <span class="c">/// Take elements from multiple sources, re-emitting them as they come.</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs84', 239)" onmouseover="showTip(event, 'fs84', 239)" class="fn">merge</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs85', 240)" onmouseover="showTip(event, 'fs85', 240)" class="id">sources</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs6', 241)" onmouseover="showTip(event, 'fs6', 241)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span> <span onmouseout="hideTip(event, 'fs86', 242)" onmouseover="showTip(event, 'fs86', 242)" class="rt">list</span><span class="pn">)</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs43', 243)" onmouseover="showTip(event, 'fs43', 243)" class="fn">delay</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">-&gt;</span>
            <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs87', 244)" onmouseover="showTip(event, 'fs87', 244)" class="fn">loop</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs88', 245)" onmouseover="showTip(event, 'fs88', 245)" class="id">awaitedCons</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs11', 246)" onmouseover="showTip(event, 'fs11', 246)" class="d">Task</span><span class="pn">&lt;</span><span class="pn">(</span><span class="ta">&#39;</span><span class="id">a</span> <span class="pn">*</span> <span onmouseout="hideTip(event, 'fs6', 247)" onmouseover="showTip(event, 'fs6', 247)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">)</span> <span onmouseout="hideTip(event, 'fs77', 248)" onmouseover="showTip(event, 'fs77', 248)" class="rt">option</span><span class="pn">&gt;</span> <span onmouseout="hideTip(event, 'fs86', 249)" onmouseover="showTip(event, 'fs86', 249)" class="rt">list</span><span class="pn">)</span> <span class="o">=</span> 
                <span onmouseout="hideTip(event, 'fs74', 250)" onmouseover="showTip(event, 'fs74', 250)" class="k">seqAsync</span> <span class="pn">{</span>
                    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs22', 251)" onmouseover="showTip(event, 'fs22', 251)" class="fn">not</span> <span onmouseout="hideTip(event, 'fs88', 252)" onmouseover="showTip(event, 'fs88', 252)" class="id">awaitedCons</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs89', 253)" onmouseover="showTip(event, 'fs89', 253)" class="id">IsEmpty</span> <span class="k">then</span>
                        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs90', 254)" onmouseover="showTip(event, 'fs90', 254)" class="id">arrived</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 255)" onmouseover="showTip(event, 'fs11', 255)" class="d">Task</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs91', 256)" onmouseover="showTip(event, 'fs91', 256)" class="id">WhenAny</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs88', 257)" onmouseover="showTip(event, 'fs88', 257)" class="id">awaitedCons</span><span class="pn">)</span>
                        <span class="k">match!</span> <span onmouseout="hideTip(event, 'fs90', 258)" onmouseover="showTip(event, 'fs90', 258)" class="id">arrived</span> <span class="k">with</span>
                        <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs78', 259)" onmouseover="showTip(event, 'fs78', 259)" class="uc">None</span> <span class="k">-&gt;</span> <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs88', 260)" onmouseover="showTip(event, 'fs88', 260)" class="id">awaitedCons</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs92', 261)" onmouseover="showTip(event, 'fs92', 261)" class="m">List</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs93', 262)" onmouseover="showTip(event, 'fs93', 262)" class="id">filter</span> <span class="pn">(</span><span class="pn">(</span><span class="o">&lt;&gt;</span><span class="pn">)</span> <span onmouseout="hideTip(event, 'fs90', 263)" onmouseover="showTip(event, 'fs90', 263)" class="id">arrived</span><span class="pn">)</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs87', 264)" onmouseover="showTip(event, 'fs87', 264)" class="fn">loop</span>
                        <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs79', 265)" onmouseover="showTip(event, 'fs79', 265)" class="uc">Some</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs94', 266)" onmouseover="showTip(event, 'fs94', 266)" class="id">head</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs95', 267)" onmouseover="showTip(event, 'fs95', 267)" class="id">tail</span><span class="pn">)</span> <span class="k">-&gt;</span>
                            <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs94', 268)" onmouseover="showTip(event, 'fs94', 268)" class="id">head</span>
                            <span class="k">yield!</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs75', 269)" onmouseover="showTip(event, 'fs75', 269)" class="fn">tryUnconsAsync</span> <span onmouseout="hideTip(event, 'fs95', 270)" onmouseover="showTip(event, 'fs95', 270)" class="id">tail</span><span class="pn">)</span> <span class="uc">::</span> <span onmouseout="hideTip(event, 'fs88', 271)" onmouseover="showTip(event, 'fs88', 271)" class="id">awaitedCons</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs92', 272)" onmouseover="showTip(event, 'fs92', 272)" class="m">List</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs93', 273)" onmouseover="showTip(event, 'fs93', 273)" class="id">filter</span> <span class="pn">(</span><span class="pn">(</span><span class="o">&lt;&gt;</span><span class="pn">)</span> <span onmouseout="hideTip(event, 'fs90', 274)" onmouseover="showTip(event, 'fs90', 274)" class="id">arrived</span><span class="pn">)</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs87', 275)" onmouseover="showTip(event, 'fs87', 275)" class="fn">loop</span>
                <span class="pn">}</span>
            <span onmouseout="hideTip(event, 'fs85', 276)" onmouseover="showTip(event, 'fs85', 276)" class="id">sources</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs92', 277)" onmouseover="showTip(event, 'fs92', 277)" class="m">List</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs96', 278)" onmouseover="showTip(event, 'fs96', 278)" class="id">map</span> <span onmouseout="hideTip(event, 'fs75', 279)" onmouseover="showTip(event, 'fs75', 279)" class="fn">tryUnconsAsync</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs87', 280)" onmouseover="showTip(event, 'fs87', 280)" class="fn">loop</span>
        <span class="pn">)</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs97', 281)" onmouseover="showTip(event, 'fs97', 281)" class="fn">iter</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs98', 282)" onmouseover="showTip(event, 'fs98', 282)" class="fn">body</span><span class="pn">:</span> <span class="ta">&#39;</span><span class="id">a</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs10', 283)" onmouseover="showTip(event, 'fs10', 283)" class="rt">unit</span><span class="pn">)</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs76', 284)" onmouseover="showTip(event, 'fs76', 284)" class="id">source</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs6', 285)" onmouseover="showTip(event, 'fs6', 285)" class="if">SeqAsync</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs99', 286)" onmouseover="showTip(event, 'fs99', 286)" class="id">itor</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs76', 287)" onmouseover="showTip(event, 'fs76', 287)" class="fn">source</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs52', 288)" onmouseover="showTip(event, 'fs52', 288)" class="id">GetAsyncEnumerator</span> <span class="pn">(</span><span class="pn">)</span>
        <span class="k">while</span> <span onmouseout="hideTip(event, 'fs99', 289)" onmouseover="showTip(event, 'fs99', 289)" class="fn">itor</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs30', 290)" onmouseover="showTip(event, 'fs30', 290)" class="id">MoveNextAsync</span><span class="pn">(</span><span class="pn">)</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs100', 291)" onmouseover="showTip(event, 'fs100', 291)" class="id">Result</span> <span class="k">do</span> <span onmouseout="hideTip(event, 'fs98', 292)" onmouseover="showTip(event, 'fs98', 292)" class="fn">body</span> <span onmouseout="hideTip(event, 'fs99', 293)" onmouseover="showTip(event, 'fs99', 293)" class="id">itor</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs31', 294)" onmouseover="showTip(event, 'fs31', 294)" class="id">Current</span>
</code></pre></td>
</tr>
</table>
<h2><a name="Demonstration" class="anchor" href="#Demonstration">Demonstration</a></h2>
<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">let</span> <span onmouseout="hideTip(event, 'fs101', 295)" onmouseover="showTip(event, 'fs101', 295)" class="id">seqAsync</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs102', 296)" onmouseover="showTip(event, 'fs102', 296)" class="m">SeqAsync</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs101', 297)" onmouseover="showTip(event, 'fs101', 297)" class="id">seqAsync</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs103', 298)" onmouseover="showTip(event, 'fs103', 298)" class="fn">fizzBuzz</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs104', 299)" onmouseover="showTip(event, 'fs104', 299)" class="id">msDelay</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs105', 300)" onmouseover="showTip(event, 'fs105', 300)" class="vt">int</span><span class="pn">)</span> <span onmouseout="hideTip(event, 'fs106', 301)" onmouseover="showTip(event, 'fs106', 301)" class="id">n</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs107', 302)" onmouseover="showTip(event, 'fs107', 302)" class="fn">stream</span> <span class="pn">(</span><span class="pn">)</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs101', 303)" onmouseover="showTip(event, 'fs101', 303)" class="k">seqAsync</span> <span class="pn">{</span>
            <span class="k">for</span> <span onmouseout="hideTip(event, 'fs108', 304)" onmouseover="showTip(event, 'fs108', 304)" class="id">i</span> <span class="k">in</span> <span class="n">1..</span><span onmouseout="hideTip(event, 'fs106', 305)" onmouseover="showTip(event, 'fs106', 305)" class="id">n</span> <span class="k">do</span>
                <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs108', 306)" onmouseover="showTip(event, 'fs108', 306)" class="id">i</span>
                <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs11', 307)" onmouseover="showTip(event, 'fs11', 307)" class="d">Task</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs109', 308)" onmouseover="showTip(event, 'fs109', 308)" class="id">Delay</span> <span onmouseout="hideTip(event, 'fs104', 309)" onmouseover="showTip(event, 'fs104', 309)" class="id">msDelay</span>
        <span class="pn">}</span>
    <span class="pn">[</span>
        <span onmouseout="hideTip(event, 'fs101', 310)" onmouseover="showTip(event, 'fs101', 310)" class="k">seqAsync</span> <span class="pn">{</span> <span class="k">for</span> <span onmouseout="hideTip(event, 'fs108', 311)" onmouseover="showTip(event, 'fs108', 311)" class="id">i</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs107', 312)" onmouseover="showTip(event, 'fs107', 312)" class="fn">stream</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">do</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs108', 313)" onmouseover="showTip(event, 'fs108', 313)" class="id">i</span> <span class="o">%</span> <span class="n">3</span> <span class="o">&lt;&gt;</span> <span class="n">0</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs108', 314)" onmouseover="showTip(event, 'fs108', 314)" class="id">i</span> <span class="o">%</span> <span class="n">5</span> <span class="o">&lt;&gt;</span> <span class="n">0</span> <span class="k">then</span> <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs110', 315)" onmouseover="showTip(event, 'fs110', 315)" class="fn">string</span> <span onmouseout="hideTip(event, 'fs108', 316)" onmouseover="showTip(event, 'fs108', 316)" class="id">i</span> <span class="pn">}</span>
        <span onmouseout="hideTip(event, 'fs101', 317)" onmouseover="showTip(event, 'fs101', 317)" class="k">seqAsync</span> <span class="pn">{</span> <span class="k">for</span> <span onmouseout="hideTip(event, 'fs108', 318)" onmouseover="showTip(event, 'fs108', 318)" class="id">i</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs107', 319)" onmouseover="showTip(event, 'fs107', 319)" class="fn">stream</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">do</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs108', 320)" onmouseover="showTip(event, 'fs108', 320)" class="id">i</span> <span class="o">%</span> <span class="n">3</span> <span class="o">=</span> <span class="n">0</span>  <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs108', 321)" onmouseover="showTip(event, 'fs108', 321)" class="id">i</span> <span class="o">%</span> <span class="n">5</span> <span class="o">&lt;&gt;</span> <span class="n">0</span> <span class="k">then</span> <span class="k">yield</span> <span class="s">&quot;Fizz&quot;</span> <span class="pn">}</span>
        <span onmouseout="hideTip(event, 'fs101', 322)" onmouseover="showTip(event, 'fs101', 322)" class="k">seqAsync</span> <span class="pn">{</span> <span class="k">for</span> <span onmouseout="hideTip(event, 'fs108', 323)" onmouseover="showTip(event, 'fs108', 323)" class="id">i</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs107', 324)" onmouseover="showTip(event, 'fs107', 324)" class="fn">stream</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">do</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs108', 325)" onmouseover="showTip(event, 'fs108', 325)" class="id">i</span> <span class="o">%</span> <span class="n">3</span> <span class="o">&lt;&gt;</span> <span class="n">0</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs108', 326)" onmouseover="showTip(event, 'fs108', 326)" class="id">i</span> <span class="o">%</span> <span class="n">5</span> <span class="o">=</span> <span class="n">0</span>  <span class="k">then</span> <span class="k">yield</span> <span class="s">&quot;Buzz&quot;</span> <span class="pn">}</span>
        <span onmouseout="hideTip(event, 'fs101', 327)" onmouseover="showTip(event, 'fs101', 327)" class="k">seqAsync</span> <span class="pn">{</span> <span class="k">for</span> <span onmouseout="hideTip(event, 'fs108', 328)" onmouseover="showTip(event, 'fs108', 328)" class="id">i</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs107', 329)" onmouseover="showTip(event, 'fs107', 329)" class="fn">stream</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">do</span> <span class="k">if</span> <span onmouseout="hideTip(event, 'fs108', 330)" onmouseover="showTip(event, 'fs108', 330)" class="id">i</span> <span class="o">%</span> <span class="n">3</span> <span class="o">=</span> <span class="n">0</span>  <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs108', 331)" onmouseover="showTip(event, 'fs108', 331)" class="id">i</span> <span class="o">%</span> <span class="n">5</span> <span class="o">=</span> <span class="n">0</span>  <span class="k">then</span> <span class="k">yield</span> <span class="s">&quot;FizzBuzz&quot;</span> <span class="pn">}</span>
     <span class="pn">]</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs102', 332)" onmouseover="showTip(event, 'fs102', 332)" class="m">SeqAsync</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs84', 333)" onmouseover="showTip(event, 'fs84', 333)" class="id">merge</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs111', 334)" onmouseover="showTip(event, 'fs111', 334)" class="id">demo</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs103', 335)" onmouseover="showTip(event, 'fs103', 335)" class="fn">fizzBuzz</span> <span class="n">200</span> <span class="n">15</span>

<span onmouseout="hideTip(event, 'fs111', 336)" onmouseover="showTip(event, 'fs111', 336)" class="id">demo</span>
<span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs102', 337)" onmouseover="showTip(event, 'fs102', 337)" class="m">SeqAsync</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs97', 338)" onmouseover="showTip(event, 'fs97', 338)" class="id">iter</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs112', 339)" onmouseover="showTip(event, 'fs112', 339)" class="fn">printfn</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s">&quot;</span><span class="pn">)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Threading</div>
<div class="tip" id="fs3">namespace System.Threading.Tasks</div>
<div class="tip" id="fs4">namespace System.Collections</div>
<div class="tip" id="fs5">namespace System.Collections.Generic</div>
<div class="tip" id="fs6">type SeqAsync&lt;&#39;a&gt; = IAsyncEnumerable&lt;&#39;a&gt;</div>
<div class="tip" id="fs7">type IAsyncEnumerable&lt;&#39;T&gt; =<br />&#160;&#160;member GetAsyncEnumerator : ?cancellationToken:CancellationToken -&gt; IAsyncEnumerator&lt;&#39;T&gt;</div>
<div class="tip" id="fs8">Multiple items<br />type AsyncEnumerator&lt;&#39;a&gt; =<br />&#160;&#160;interface IAsyncDisposable<br />&#160;&#160;interface IAsyncEnumerator&lt;&#39;a&gt;<br />&#160;&#160;new : moveNextAsync:(unit -&gt; Task&lt;bool&gt;) * getCurrent:(unit -&gt; &#39;a) -&gt; AsyncEnumerator&lt;&#39;a&gt;<br /><br />--------------------<br />new : moveNextAsync:(unit -&gt; Task&lt;bool&gt;) * getCurrent:(unit -&gt; &#39;a) -&gt; AsyncEnumerator&lt;&#39;a&gt;</div>
<div class="tip" id="fs9">val moveNextAsync : (unit -&gt; Task&lt;bool&gt;)</div>
<div class="tip" id="fs10">type unit = Unit</div>
<div class="tip" id="fs11">Multiple items<br />type Task =<br />&#160;&#160;new : action:Action -&gt; Task + 7 overloads<br />&#160;&#160;member AsyncState : obj<br />&#160;&#160;member ConfigureAwait : continueOnCapturedContext:bool -&gt; ConfiguredTaskAwaitable<br />&#160;&#160;member ContinueWith : continuationAction:Action&lt;Task&gt; -&gt; Task + 19 overloads<br />&#160;&#160;member CreationOptions : TaskCreationOptions<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member Exception : AggregateException<br />&#160;&#160;member GetAwaiter : unit -&gt; TaskAwaiter<br />&#160;&#160;member Id : int<br />&#160;&#160;member IsCanceled : bool<br />&#160;&#160;...<br /><br />--------------------<br />type Task&lt;&#39;TResult&gt; =<br />&#160;&#160;inherit Task<br />&#160;&#160;new : function:Func&lt;&#39;TResult&gt; -&gt; Task&lt;&#39;TResult&gt; + 7 overloads<br />&#160;&#160;member ConfigureAwait : continueOnCapturedContext:bool -&gt; ConfiguredTaskAwaitable&lt;&#39;TResult&gt;<br />&#160;&#160;member ContinueWith : continuationAction:Action&lt;Task&lt;&#39;TResult&gt;&gt; -&gt; Task + 19 overloads<br />&#160;&#160;member GetAwaiter : unit -&gt; TaskAwaiter&lt;&#39;TResult&gt;<br />&#160;&#160;member Result : &#39;TResult<br />&#160;&#160;static member Factory : TaskFactory&lt;&#39;TResult&gt;<br /><br />--------------------<br />Task(action: System.Action) : Task<br />Task(action: System.Action, cancellationToken: System.Threading.CancellationToken) : Task<br />Task(action: System.Action, creationOptions: TaskCreationOptions) : Task<br />Task(action: System.Action&lt;obj&gt;, state: obj) : Task<br />Task(action: System.Action, cancellationToken: System.Threading.CancellationToken, creationOptions: TaskCreationOptions) : Task<br />Task(action: System.Action&lt;obj&gt;, state: obj, cancellationToken: System.Threading.CancellationToken) : Task<br />Task(action: System.Action&lt;obj&gt;, state: obj, creationOptions: TaskCreationOptions) : Task<br />Task(action: System.Action&lt;obj&gt;, state: obj, cancellationToken: System.Threading.CancellationToken, creationOptions: TaskCreationOptions) : Task<br /><br />--------------------<br />Task(function: System.Func&lt;&#39;TResult&gt;) : Task&lt;&#39;TResult&gt;<br />Task(function: System.Func&lt;&#39;TResult&gt;, cancellationToken: System.Threading.CancellationToken) : Task&lt;&#39;TResult&gt;<br />Task(function: System.Func&lt;&#39;TResult&gt;, creationOptions: TaskCreationOptions) : Task&lt;&#39;TResult&gt;<br />Task(function: System.Func&lt;obj,&#39;TResult&gt;, state: obj) : Task&lt;&#39;TResult&gt;<br />Task(function: System.Func&lt;&#39;TResult&gt;, cancellationToken: System.Threading.CancellationToken, creationOptions: TaskCreationOptions) : Task&lt;&#39;TResult&gt;<br />Task(function: System.Func&lt;obj,&#39;TResult&gt;, state: obj, cancellationToken: System.Threading.CancellationToken) : Task&lt;&#39;TResult&gt;<br />Task(function: System.Func&lt;obj,&#39;TResult&gt;, state: obj, creationOptions: TaskCreationOptions) : Task&lt;&#39;TResult&gt;<br />Task(function: System.Func&lt;obj,&#39;TResult&gt;, state: obj, cancellationToken: System.Threading.CancellationToken, creationOptions: TaskCreationOptions) : Task&lt;&#39;TResult&gt;</div>
<div class="tip" id="fs12">type bool = System.Boolean</div>
<div class="tip" id="fs13">val getCurrent : (unit -&gt; &#39;a)</div>
<div class="tip" id="fs14">type IAsyncEnumerator&lt;&#39;T&gt; =<br />&#160;&#160;inherit IAsyncDisposable<br />&#160;&#160;member Current : &#39;T<br />&#160;&#160;member MoveNextAsync : unit -&gt; ValueTask&lt;bool&gt;</div>
<div class="tip" id="fs15">Multiple items<br />type ValueTask =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : task:Task -&gt; ValueTask + 1 overload<br />&#160;&#160;&#160;&#160;member AsTask : unit -&gt; Task<br />&#160;&#160;&#160;&#160;member ConfigureAwait : continueOnCapturedContext:bool -&gt; ConfiguredValueTaskAwaitable<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetAwaiter : unit -&gt; ValueTaskAwaiter<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member IsCanceled : bool<br />&#160;&#160;&#160;&#160;member IsCompleted : bool<br />&#160;&#160;&#160;&#160;member IsCompletedSuccessfully : bool<br />&#160;&#160;&#160;&#160;member IsFaulted : bool<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />--------------------<br />type ValueTask&lt;&#39;TResult&gt; =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : result:&#39;TResult -&gt; ValueTask&lt;&#39;TResult&gt; + 2 overloads<br />&#160;&#160;&#160;&#160;member AsTask : unit -&gt; Task&lt;&#39;TResult&gt;<br />&#160;&#160;&#160;&#160;member ConfigureAwait : continueOnCapturedContext:bool -&gt; ConfiguredValueTaskAwaitable&lt;&#39;TResult&gt;<br />&#160;&#160;&#160;&#160;member Equals : obj:obj -&gt; bool + 1 overload<br />&#160;&#160;&#160;&#160;member GetAwaiter : unit -&gt; ValueTaskAwaiter&lt;&#39;TResult&gt;<br />&#160;&#160;&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;&#160;&#160;member IsCanceled : bool<br />&#160;&#160;&#160;&#160;member IsCompleted : bool<br />&#160;&#160;&#160;&#160;member IsCompletedSuccessfully : bool<br />&#160;&#160;&#160;&#160;member IsFaulted : bool<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />--------------------<br />ValueTask ()<br />ValueTask(task: Task) : ValueTask<br />ValueTask(source: Sources.IValueTaskSource, token: int16) : ValueTask<br /><br />--------------------<br />ValueTask ()<br />ValueTask(result: &#39;TResult) : ValueTask&lt;&#39;TResult&gt;<br />ValueTask(task: Task&lt;&#39;TResult&gt;) : ValueTask&lt;&#39;TResult&gt;<br />ValueTask(source: Sources.IValueTaskSource&lt;&#39;TResult&gt;, token: int16) : ValueTask&lt;&#39;TResult&gt;</div>
<div class="tip" id="fs16">type IAsyncDisposable =<br />&#160;&#160;member DisposeAsync : unit -&gt; ValueTask</div>
<div class="tip" id="fs17">val empty&lt;&#39;a&gt; : AsyncEnumerator&lt;&#39;a&gt;</div>
<div class="tip" id="fs18">val mutable started : bool</div>
<div class="tip" id="fs19">val moveNext : (unit -&gt; Task&lt;bool&gt;)</div>
<div class="tip" id="fs20">Task.FromResult&lt;&#39;TResult&gt;(result: &#39;TResult) : Task&lt;&#39;TResult&gt;</div>
<div class="tip" id="fs21">val current : (unit -&gt; &#39;a)</div>
<div class="tip" id="fs22">val not : value:bool -&gt; bool</div>
<div class="tip" id="fs23">val invalidOp : message:string -&gt; &#39;T</div>
<div class="tip" id="fs24">val singleton : x:&#39;a -&gt; AsyncEnumerator&lt;&#39;a&gt;</div>
<div class="tip" id="fs25">val x : &#39;a</div>
<div class="tip" id="fs26">val append : itor1:IAsyncEnumerator&lt;&#39;a&gt; -&gt; itor2:IAsyncEnumerator&lt;&#39;a&gt; -&gt; IAsyncEnumerator&lt;&#39;a&gt;</div>
<div class="tip" id="fs27">val itor1 : IAsyncEnumerator&lt;&#39;a&gt;</div>
<div class="tip" id="fs28">val itor2 : IAsyncEnumerator&lt;&#39;a&gt;</div>
<div class="tip" id="fs29">val mutable itering1 : bool</div>
<div class="tip" id="fs30">IAsyncEnumerator.MoveNextAsync() : ValueTask&lt;bool&gt;</div>
<div class="tip" id="fs31">property IAsyncEnumerator.Current: &#39;a with get</div>
<div class="tip" id="fs32">val bind : getDelay:(unit -&gt; Task&lt;&#39;a&gt;) -&gt; getEnumerator:(&#39;a -&gt; IAsyncEnumerator&lt;&#39;b&gt;) -&gt; AsyncEnumerator&lt;&#39;a0&gt;<br /><em><br /><br />&#160;Bind a `Task` to an `IAsyncEnumerator`. The task is started and awaited only once, at first enumeration.<br />&#160;Its result is applied by the `getEnumerator`argument.</em></div>
<div class="tip" id="fs33">val getDelay : (unit -&gt; Task&lt;&#39;a&gt;)</div>
<div class="tip" id="fs34">val getEnumerator : (&#39;a -&gt; IAsyncEnumerator&lt;&#39;b&gt;)</div>
<div class="tip" id="fs35">val mutable itor : obj</div>
<div class="tip" id="fs36">val ofEnumerator : getAsyncEnumerator:(unit -&gt; IAsyncEnumerator&lt;&#39;a&gt;) -&gt; SeqAsync&lt;&#39;a&gt;<br /><em><br /><br />&#160;Build an `SeqAsync` from a fuction returning an `IAsyncEnumerator`.</em></div>
<div class="tip" id="fs37">val getAsyncEnumerator : (unit -&gt; IAsyncEnumerator&lt;&#39;a&gt;)</div>
<div class="tip" id="fs38">val bind : expr:(unit -&gt; Task&lt;&#39;a&gt;) -&gt; func:(&#39;a -&gt; SeqAsync&lt;&#39;b&gt;) -&gt; SeqAsync&lt;&#39;b&gt;</div>
<div class="tip" id="fs39">val expr : (unit -&gt; Task&lt;&#39;a&gt;)</div>
<div class="tip" id="fs40">val func : (&#39;a -&gt; SeqAsync&lt;&#39;b&gt;)</div>
<div class="tip" id="fs41">module AsyncEnumerator<br /><br />from Script</div>
<div class="tip" id="fs42">val bind : getDelay:(unit -&gt; Task&lt;&#39;a&gt;) -&gt; getEnumerator:(&#39;a -&gt; IAsyncEnumerator&lt;&#39;b&gt;) -&gt; AsyncEnumerator.AsyncEnumerator&lt;&#39;a0&gt;<br /><em><br /><br />&#160;Bind a `Task` to an `IAsyncEnumerator`. The task is started and awaited only once, at first enumeration.<br />&#160;Its result is applied by the `getEnumerator`argument.</em></div>
<div class="tip" id="fs43">val delay : delayed:(unit -&gt; SeqAsync&lt;&#39;a&gt;) -&gt; SeqAsync&lt;&#39;a&gt;</div>
<div class="tip" id="fs44">val delayed : (unit -&gt; SeqAsync&lt;&#39;a&gt;)</div>
<div class="tip" id="fs45">val empty&lt;&#39;a&gt; : SeqAsync&lt;int&gt;</div>
<div class="tip" id="fs46">val empty&lt;&#39;a&gt; : AsyncEnumerator.AsyncEnumerator&lt;&#39;a&gt;</div>
<div class="tip" id="fs47">val singleton : x:&#39;a -&gt; SeqAsync&lt;&#39;b&gt;</div>
<div class="tip" id="fs48">val singleton : x:&#39;a -&gt; AsyncEnumerator.AsyncEnumerator&lt;&#39;a&gt;</div>
<div class="tip" id="fs49">val append : source1:SeqAsync&lt;&#39;a&gt; -&gt; source2:SeqAsync&lt;&#39;a&gt; -&gt; SeqAsync&lt;&#39;a&gt;</div>
<div class="tip" id="fs50">val source1 : SeqAsync&lt;&#39;a&gt;</div>
<div class="tip" id="fs51">val source2 : SeqAsync&lt;&#39;a&gt;</div>
<div class="tip" id="fs52">IAsyncEnumerable.GetAsyncEnumerator(?cancellationToken: System.Threading.CancellationToken) : IAsyncEnumerator&lt;&#39;a&gt;</div>
<div class="tip" id="fs53">val whileLoop : condition:(unit -&gt; bool) -&gt; body:SeqAsync&lt;int&gt; -&gt; SeqAsync&lt;int&gt;</div>
<div class="tip" id="fs54">val condition : (unit -&gt; bool)</div>
<div class="tip" id="fs55">val body : SeqAsync&lt;int&gt;</div>
<div class="tip" id="fs56">val forLoop : sequence:seq&lt;&#39;a&gt; -&gt; body:(&#39;a -&gt; SeqAsync&lt;int&gt;) -&gt; SeqAsync&lt;int&gt;</div>
<div class="tip" id="fs57">val sequence : seq&lt;&#39;a&gt;</div>
<div class="tip" id="fs58">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = IEnumerable&lt;&#39;T&gt;</div>
<div class="tip" id="fs59">val body : (&#39;a -&gt; SeqAsync&lt;int&gt;)</div>
<div class="tip" id="fs60">val itor : IEnumerator&lt;&#39;a&gt;</div>
<div class="tip" id="fs61">IEnumerable.GetEnumerator() : IEnumerator&lt;&#39;a&gt;</div>
<div class="tip" id="fs62">System.Collections.IEnumerator.MoveNext() : bool</div>
<div class="tip" id="fs63">property IEnumerator.Current: &#39;a with get</div>
<div class="tip" id="fs64">Multiple items<br />type SeqAsyncBuilder =<br />&#160;&#160;new : unit -&gt; SeqAsyncBuilder<br />&#160;&#160;member Bind : expr:Task&lt;&#39;a&gt; * body:(&#39;a -&gt; SeqAsync&lt;&#39;c&gt;) -&gt; SeqAsync&lt;&#39;c&gt;<br />&#160;&#160;member Bind : expr:Task * body:(&#39;a -&gt; SeqAsync&lt;&#39;b&gt;) -&gt; SeqAsync&lt;&#39;b&gt;<br />&#160;&#160;member Combine : xs:SeqAsync&lt;&#39;e&gt; * ys:SeqAsync&lt;&#39;e&gt; -&gt; SeqAsync&lt;&#39;e&gt;<br />&#160;&#160;member Delay : tail:(unit -&gt; SeqAsync&lt;&#39;h&gt;) -&gt; SeqAsync&lt;&#39;h&gt;<br />&#160;&#160;member For : sequence:seq&lt;&#39;a&gt; * body:(&#39;a -&gt; SeqAsync&lt;int&gt;) -&gt; SeqAsync&lt;int&gt;<br />&#160;&#160;member For : sequence:SeqAsync&lt;&#39;a&gt; * body:(&#39;a -&gt; SeqAsync&lt;int&gt;) -&gt; SeqAsync&lt;int&gt;<br />&#160;&#160;member While : condition:(unit -&gt; bool) * body:SeqAsync&lt;int&gt; -&gt; SeqAsync&lt;int&gt;<br />&#160;&#160;member Yield : x:&#39;f -&gt; SeqAsync&lt;&#39;g&gt;<br />&#160;&#160;member YieldFrom : xs:&#39;d -&gt; &#39;d<br />&#160;&#160;...<br /><br />--------------------<br />new : unit -&gt; SeqAsyncBuilder</div>
<div class="tip" id="fs65">val tail : (unit -&gt; SeqAsync&lt;&#39;h&gt;)</div>
<div class="tip" id="fs66">val x : &#39;f</div>
<div class="tip" id="fs67">val xs : SeqAsync&lt;&#39;e&gt;</div>
<div class="tip" id="fs68">val ys : SeqAsync&lt;&#39;e&gt;</div>
<div class="tip" id="fs69">val xs : &#39;d</div>
<div class="tip" id="fs70">val expr : Task&lt;&#39;a&gt;</div>
<div class="tip" id="fs71">val body : (&#39;a -&gt; SeqAsync&lt;&#39;c&gt;)</div>
<div class="tip" id="fs72">val expr : Task</div>
<div class="tip" id="fs73">val body : (&#39;a -&gt; SeqAsync&lt;&#39;b&gt;)</div>
<div class="tip" id="fs74">val seqAsync : SeqAsyncBuilder</div>
<div class="tip" id="fs75">val tryUnconsAsync : source:SeqAsync&lt;&#39;a&gt; -&gt; Task&lt;(&#39;a * SeqAsync&lt;&#39;a&gt;) option&gt;<br /><em><br /><br />&#160;Returns a `Task` retreiving the head and tail (as an `option`) from the source</em></div>
<div class="tip" id="fs76">val source : SeqAsync&lt;&#39;a&gt;</div>
<div class="tip" id="fs77">type &#39;T option = Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs78">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs79">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs80">val collect : mapping:(&#39;a -&gt; SeqAsync&lt;int&gt;) -&gt; source:SeqAsync&lt;&#39;a&gt; -&gt; SeqAsync&lt;int&gt;<br /><em><br /><br />&#160;Mirrors `collect` function from `Seq` and `List` modules.</em></div>
<div class="tip" id="fs81">val mapping : (&#39;a -&gt; SeqAsync&lt;int&gt;)</div>
<div class="tip" id="fs82">val xs : SeqAsync&lt;&#39;a&gt;</div>
<div class="tip" id="fs83">val sequence : SeqAsync&lt;&#39;a&gt;</div>
<div class="tip" id="fs84">val merge : sources:SeqAsync&lt;&#39;a&gt; list -&gt; SeqAsync&lt;int&gt;<br /><em><br /><br />&#160;Take elements from multiple sources, re-emitting them as they come.</em></div>
<div class="tip" id="fs85">val sources : SeqAsync&lt;&#39;a&gt; list</div>
<div class="tip" id="fs86">type &#39;T list = List&lt;&#39;T&gt;</div>
<div class="tip" id="fs87">val loop : (Task&lt;(&#39;a * SeqAsync&lt;&#39;a&gt;) option&gt; list -&gt; SeqAsync&lt;int&gt;)</div>
<div class="tip" id="fs88">val awaitedCons : Task&lt;(&#39;a * SeqAsync&lt;&#39;a&gt;) option&gt; list</div>
<div class="tip" id="fs89">property List.IsEmpty: bool with get</div>
<div class="tip" id="fs90">val arrived : Task&lt;(&#39;a * SeqAsync&lt;&#39;a&gt;) option&gt;</div>
<div class="tip" id="fs91">Task.WhenAny&lt;&#39;TResult&gt;(tasks: IEnumerable&lt;Task&lt;&#39;TResult&gt;&gt;) : Task&lt;Task&lt;&#39;TResult&gt;&gt;<br />Task.WhenAny&lt;&#39;TResult&gt;([&lt;System.ParamArray&gt;] tasks: Task&lt;&#39;TResult&gt; []) : Task&lt;Task&lt;&#39;TResult&gt;&gt;<br />Task.WhenAny(tasks: IEnumerable&lt;Task&gt;) : Task&lt;Task&gt;<br />Task.WhenAny([&lt;System.ParamArray&gt;] tasks: Task []) : Task&lt;Task&gt;</div>
<div class="tip" id="fs92">Multiple items<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;new : unit -&gt; List&lt;&#39;T&gt; + 2 overloads<br />&#160;&#160;member Add : item:&#39;T -&gt; unit<br />&#160;&#160;member AddRange : collection:IEnumerable&lt;&#39;T&gt; -&gt; unit<br />&#160;&#160;member AsReadOnly : unit -&gt; ReadOnlyCollection&lt;&#39;T&gt;<br />&#160;&#160;member BinarySearch : item:&#39;T -&gt; int + 2 overloads<br />&#160;&#160;member Capacity : int with get, set<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Contains : item:&#39;T -&gt; bool<br />&#160;&#160;member ConvertAll&lt;&#39;TOutput&gt; : converter:Converter&lt;&#39;T, &#39;TOutput&gt; -&gt; List&lt;&#39;TOutput&gt;<br />&#160;&#160;member CopyTo : array:&#39;T[] -&gt; unit + 2 overloads<br />&#160;&#160;...<br />&#160;&#160;nested type Enumerator<br /><br />--------------------<br />List() : List&lt;&#39;T&gt;<br />List(capacity: int) : List&lt;&#39;T&gt;<br />List(collection: IEnumerable&lt;&#39;T&gt;) : List&lt;&#39;T&gt;</div>
<div class="tip" id="fs93">val filter : predicate:(&#39;T -&gt; bool) -&gt; list:&#39;T list -&gt; &#39;T list</div>
<div class="tip" id="fs94">val head : &#39;a</div>
<div class="tip" id="fs95">val tail : SeqAsync&lt;&#39;a&gt;</div>
<div class="tip" id="fs96">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list</div>
<div class="tip" id="fs97">val iter : body:(&#39;a -&gt; unit) -&gt; source:SeqAsync&lt;&#39;a&gt; -&gt; unit</div>
<div class="tip" id="fs98">val body : (&#39;a -&gt; unit)</div>
<div class="tip" id="fs99">val itor : IAsyncEnumerator&lt;&#39;a&gt;</div>
<div class="tip" id="fs100">Multiple items<br />module Result<br /><br />from Microsoft.FSharp.Core<br /><br />--------------------<br />[&lt;Struct&gt;]<br />type Result&lt;&#39;T,&#39;TError&gt; =<br />&#160;&#160;| Ok of ResultValue: &#39;T<br />&#160;&#160;| Error of ErrorValue: &#39;TError</div>
<div class="tip" id="fs101">val seqAsync : SeqAsync.SeqAsyncBuilder</div>
<div class="tip" id="fs102">Multiple items<br />module SeqAsync<br /><br />from Script<br /><br />--------------------<br />type SeqAsync&lt;&#39;a&gt; = IAsyncEnumerable&lt;&#39;a&gt;</div>
<div class="tip" id="fs103">val fizzBuzz : msDelay:int -&gt; n:int -&gt; SeqAsync&lt;int&gt;</div>
<div class="tip" id="fs104">val msDelay : int</div>
<div class="tip" id="fs105">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />--------------------<br />type int = int32<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int</div>
<div class="tip" id="fs106">val n : int</div>
<div class="tip" id="fs107">val stream : (unit -&gt; SeqAsync&lt;int&gt;)</div>
<div class="tip" id="fs108">val i : int</div>
<div class="tip" id="fs109">Task.Delay(millisecondsDelay: int) : Task<br />Task.Delay(delay: System.TimeSpan) : Task<br />Task.Delay(millisecondsDelay: int, cancellationToken: System.Threading.CancellationToken) : Task<br />Task.Delay(delay: System.TimeSpan, cancellationToken: System.Threading.CancellationToken) : Task</div>
<div class="tip" id="fs110">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />--------------------<br />type string = System.String</div>
<div class="tip" id="fs111">val demo : SeqAsync&lt;int&gt;</div>
<div class="tip" id="fs112">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T</div>

