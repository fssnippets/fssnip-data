<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="m">#r</span> <span class="s">&quot;nuget: FSharp.Control.AsyncSeq, Version=2.0.24&quot;</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="id">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="id">FSharp</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="id">Control</span>
<span class="k">module</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="m">AsyncSeq</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="fn">forkThrottled</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">t</span><span class="pn">&gt;</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="id">n</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="id">capacity</span><span class="pn">:</span><span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="vt">int</span><span class="pn">)</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="id">xs</span><span class="pn">:</span><span class="id">AsyncSeq</span><span class="pn">&lt;</span><span class="id">&#39;</span><span class="id">t</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 10)" onmouseover="showTip(event, 'fs10', 10)" class="id">pcs</span> <span class="o">=</span> <span class="pn">[</span><span class="k">for</span> <span class="id">_</span> <span class="k">in</span> <span class="n">1</span> <span class="o">..</span> <span onmouseout="hideTip(event, 'fs6', 11)" onmouseover="showTip(event, 'fs6', 11)" class="id">n</span> <span class="k">-&gt;</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs1', 12)" onmouseover="showTip(event, 'fs1', 12)" class="d">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="id">Collections</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs12', 14)" onmouseover="showTip(event, 'fs12', 14)" class="id">Concurrent</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="id">BlockingCollection</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">t</span><span class="pn">&gt;</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs7', 16)" onmouseover="showTip(event, 'fs7', 16)" class="id">capacity</span><span class="pn">)</span><span class="pn">]</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 17)" onmouseover="showTip(event, 'fs14', 17)" class="id">aseqs</span> <span class="o">=</span> 
            <span onmouseout="hideTip(event, 'fs10', 18)" onmouseover="showTip(event, 'fs10', 18)" class="id">pcs</span> 
            <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 19)" onmouseover="showTip(event, 'fs15', 19)" class="m">List</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 20)" onmouseover="showTip(event, 'fs16', 20)" class="id">map</span><span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs17', 21)" onmouseover="showTip(event, 'fs17', 21)" class="id">buf</span> <span class="k">-&gt;</span> 
                <span class="id">asyncSeq</span> <span class="pn">{</span>
                <span class="k">for</span> <span class="id">x</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="id">buf</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 23)" onmouseover="showTip(event, 'fs18', 23)" class="id">GetConsumingEnumerable</span><span class="pn">(</span><span class="pn">)</span> <span class="k">do</span>
                    <span class="k">yield</span> <span class="id">x</span>
                <span class="pn">}</span><span class="pn">)</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 24)" onmouseover="showTip(event, 'fs19', 24)" class="id">runner</span> <span class="o">=</span> 
            <span onmouseout="hideTip(event, 'fs20', 25)" onmouseover="showTip(event, 'fs20', 25)" class="k">async</span> <span class="pn">{</span>
                <span class="k">do!</span>
                    <span onmouseout="hideTip(event, 'fs9', 26)" onmouseover="showTip(event, 'fs9', 26)" class="id">xs</span>
                    <span class="o">|&gt;</span> <span class="id">AsyncSeq</span><span class="pn">.</span><span class="id">iter</span> <span class="pn">(</span><span class="k">fun</span> <span class="id">x</span><span class="k">-&gt;</span>
                        <span class="k">for</span> <span class="id">p</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs10', 27)" onmouseover="showTip(event, 'fs10', 27)" class="id">pcs</span> <span class="k">do</span>
                            <span class="id">p</span><span class="pn">.</span><span class="id">Add</span><span class="pn">(</span><span class="id">x</span><span class="pn">)</span><span class="pn">)</span>
                <span class="k">do</span> <span onmouseout="hideTip(event, 'fs10', 28)" onmouseover="showTip(event, 'fs10', 28)" class="id">pcs</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs15', 29)" onmouseover="showTip(event, 'fs15', 29)" class="m">List</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs21', 30)" onmouseover="showTip(event, 'fs21', 30)" class="id">iter</span> <span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs22', 31)" onmouseover="showTip(event, 'fs22', 31)" class="id">p</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs22', 32)" onmouseover="showTip(event, 'fs22', 32)" class="fn">p</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 33)" onmouseover="showTip(event, 'fs18', 33)" class="id">CompleteAdding</span><span class="pn">(</span><span class="pn">)</span><span class="pn">)</span>
            <span class="pn">}</span>
        <span onmouseout="hideTip(event, 'fs23', 34)" onmouseover="showTip(event, 'fs23', 34)" class="rt">Async</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs24', 35)" onmouseover="showTip(event, 'fs24', 35)" class="id">Start</span> <span onmouseout="hideTip(event, 'fs19', 36)" onmouseover="showTip(event, 'fs19', 36)" class="id">runner</span>
        <span onmouseout="hideTip(event, 'fs14', 37)" onmouseover="showTip(event, 'fs14', 37)" class="id">aseqs</span>
<span class="c">(*</span>
<span class="c">let inputSeq = [for i in 1 .. 20 -&gt; i] |&gt; AsyncSeq.ofSeq</span>
<span class="c">let forkedSeqs = AsyncSeq.forkThrottled 2 10 inputSeq</span>
<span class="c">let consumer1 = forkedSeqs.[0]</span>
<span class="c">let consumer2 = forkedSeqs.[1]</span>

<span class="c">//start consumer1 first it will run for a while and then stop</span>
<span class="c">//as consumer2 is not running</span>
<span class="c">consumer1 </span>
<span class="c">|&gt; AsyncSeq.iterAsync (fun i -&gt; </span>
<span class="c">    async{</span>
<span class="c">        do! Async.Sleep 10; </span>
<span class="c">        do printfn $&quot;C1 {i}&quot;</span>
<span class="c">    })</span>
<span class="c">|&gt; Async.Start</span>

<span class="c">//start consumer2; rate of consumer 1 will be gated by the slower rate of consumer 2</span>
<span class="c">consumer2 </span>
<span class="c">|&gt; AsyncSeq.iterAsync (fun i -&gt; </span>
<span class="c">    async{</span>
<span class="c">        do! Async.Sleep 100; </span>
<span class="c">        do printfn $&quot;C2 {i}&quot;</span>
<span class="c">    })</span>
<span class="c">|&gt; Async.Start</span>
<span class="c">*)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace Microsoft.FSharp</div>
<div class="tip" id="fs3">namespace Microsoft.FSharp.Control</div>
<div class="tip" id="fs4">module AsyncSeq<br /><br />from Script</div>
<div class="tip" id="fs5">val forkThrottled&lt;&#39;t&gt; : n:int -&gt; capacity:int -&gt; xs:obj -&gt; obj list</div>
<div class="tip" id="fs6">val n : int</div>
<div class="tip" id="fs7">val capacity : int</div>
<div class="tip" id="fs8">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />--------------------<br />type int = int32<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int</div>
<div class="tip" id="fs9">val xs : obj</div>
<div class="tip" id="fs10">val pcs : Collections.Concurrent.BlockingCollection&lt;&#39;t&gt; list</div>
<div class="tip" id="fs11">namespace System.Collections</div>
<div class="tip" id="fs12">namespace System.Collections.Concurrent</div>
<div class="tip" id="fs13">Multiple items<br />type BlockingCollection&lt;&#39;T&gt; =<br />&#160;&#160;new : unit -&gt; BlockingCollection&lt;&#39;T&gt; + 3 overloads<br />&#160;&#160;member Add : item:&#39;T -&gt; unit + 1 overload<br />&#160;&#160;member BoundedCapacity : int<br />&#160;&#160;member CompleteAdding : unit -&gt; unit<br />&#160;&#160;member CopyTo : array:&#39;T[] * index:int -&gt; unit<br />&#160;&#160;member Count : int<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member GetConsumingEnumerable : unit -&gt; IEnumerable&lt;&#39;T&gt; + 1 overload<br />&#160;&#160;member IsAddingCompleted : bool<br />&#160;&#160;member IsCompleted : bool<br />&#160;&#160;...<br /><br />--------------------<br />Collections.Concurrent.BlockingCollection() : Collections.Concurrent.BlockingCollection&lt;&#39;T&gt;<br />Collections.Concurrent.BlockingCollection(boundedCapacity: int) : Collections.Concurrent.BlockingCollection&lt;&#39;T&gt;<br />Collections.Concurrent.BlockingCollection(collection: Collections.Concurrent.IProducerConsumerCollection&lt;&#39;T&gt;) : Collections.Concurrent.BlockingCollection&lt;&#39;T&gt;<br />Collections.Concurrent.BlockingCollection(collection: Collections.Concurrent.IProducerConsumerCollection&lt;&#39;T&gt;, boundedCapacity: int) : Collections.Concurrent.BlockingCollection&lt;&#39;T&gt;</div>
<div class="tip" id="fs14">val aseqs : obj list</div>
<div class="tip" id="fs15">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;&#160;&#160;interface IReadOnlyList&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;interface IReadOnlyCollection&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;interface IEnumerable<br />&#160;&#160;&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;member GetReverseIndex : rank:int * offset:int -&gt; int<br />&#160;&#160;&#160;&#160;member GetSlice : startIndex:int option * endIndex:int option -&gt; &#39;T list<br />&#160;&#160;&#160;&#160;member Head : &#39;T<br />&#160;&#160;&#160;&#160;member IsEmpty : bool<br />&#160;&#160;&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;&#160;&#160;member Length : int<br />&#160;&#160;&#160;&#160;...</div>
<div class="tip" id="fs16">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list</div>
<div class="tip" id="fs17">val buf : Collections.Concurrent.BlockingCollection&lt;&#39;t&gt;</div>
<div class="tip" id="fs18"></div>
<div class="tip" id="fs19">val runner : Async&lt;unit&gt;</div>
<div class="tip" id="fs20">val async : AsyncBuilder</div>
<div class="tip" id="fs21">val iter : action:(&#39;T -&gt; unit) -&gt; list:&#39;T list -&gt; unit</div>
<div class="tip" id="fs22">val p : Collections.Concurrent.BlockingCollection&lt;&#39;t&gt;</div>
<div class="tip" id="fs23">Multiple items<br />type Async =<br />&#160;&#160;static member AsBeginEnd : computation:(&#39;Arg -&gt; Async&lt;&#39;T&gt;) -&gt; (&#39;Arg * AsyncCallback * obj -&gt; IAsyncResult) * (IAsyncResult -&gt; &#39;T) * (IAsyncResult -&gt; unit)<br />&#160;&#160;static member AwaitEvent : event:IEvent&lt;&#39;Del,&#39;T&gt; * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt; (requires delegate and &#39;Del :&gt; Delegate)<br />&#160;&#160;static member AwaitIAsyncResult : iar:IAsyncResult * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />&#160;&#160;static member AwaitTask : task:Task -&gt; Async&lt;unit&gt;<br />&#160;&#160;static member AwaitTask : task:Task&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;<br />&#160;&#160;static member AwaitWaitHandle : waitHandle:WaitHandle * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />&#160;&#160;static member CancelDefaultToken : unit -&gt; unit<br />&#160;&#160;static member Catch : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;Choice&lt;&#39;T,exn&gt;&gt;<br />&#160;&#160;static member Choice : computations:seq&lt;Async&lt;&#39;T option&gt;&gt; -&gt; Async&lt;&#39;T option&gt;<br />&#160;&#160;static member FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />&#160;&#160;...<br /><br />--------------------<br />type Async&lt;&#39;T&gt; =</div>
<div class="tip" id="fs24">static member Async.Start : computation:Async&lt;unit&gt; * ?cancellationToken:Threading.CancellationToken -&gt; unit</div>

