<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
<span class="l">71: </span>
<span class="l">72: </span>
<span class="l">73: </span>
<span class="l">74: </span>
<span class="l">75: </span>
<span class="l">76: </span>
<span class="l">77: </span>
<span class="l">78: </span>
<span class="l">79: </span>
<span class="l">80: </span>
<span class="l">81: </span>
<span class="l">82: </span>
<span class="l">83: </span>
<span class="l">84: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="c">(*</span>
<span class="c">[CONTEXT] Trying to access box.com for file storage </span>
<span class="c">          (in interactive console app)</span>
<span class="c">  Concept could be used for other OAuth providers</span>
<span class="c">Box.com has the following info:</span>
<span class="c">  To complete an OAuth 2.0 flow the following steps need to be completed.</span>

<span class="c">    1. Configure the Box SDK</span>
<span class="c">    2. Redirect the user to the Box website (with REDIRECT_URI)</span>
<span class="c">    3. The user grants the application access</span>
<span class="c">    4. Exchange the authorization code for an access token</span>

<span class="c">Step 4: &quot;The user is redirected to your application&#39;s redirect URL </span>
<span class="c">with a query parameter containing a short-lived authorization code.&quot;</span>
<span class="c">Needed to receive that request to exchange the code</span>
<span class="c">So have the console app create a &#39;webserver&#39; and capture code [this script]. </span>

<span class="c">*)</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="id">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="id">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="id">Net</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="id">host</span> <span class="o">=</span> <span class="s">&quot;http://localhost:8888/&quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="id">hl</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="d">HttpListener</span><span class="pn">(</span><span class="pn">)</span>
<span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="fn">hl</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="id">Prefixes</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="id">Add</span> <span onmouseout="hideTip(event, 'fs3', 10)" onmouseover="showTip(event, 'fs3', 10)" class="id">host</span>
<span onmouseout="hideTip(event, 'fs4', 11)" onmouseover="showTip(event, 'fs4', 11)" class="fn">hl</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 12)" onmouseover="showTip(event, 'fs6', 12)" class="id">Start</span><span class="pn">(</span><span class="pn">)</span>
<span onmouseout="hideTip(event, 'fs7', 13)" onmouseover="showTip(event, 'fs7', 13)" class="fn">printfn</span> <span class="s">&quot;Listening for HTTP on </span><span class="pf">%s</span><span class="s"> ...&quot;</span> <span onmouseout="hideTip(event, 'fs3', 14)" onmouseover="showTip(event, 'fs3', 14)" class="id">host</span>

<span class="c">// Note: The GetContext method blocks while waiting for a request.</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs8', 15)" onmouseover="showTip(event, 'fs8', 15)" class="id">context</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 16)" onmouseover="showTip(event, 'fs4', 16)" class="fn">hl</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 17)" onmouseover="showTip(event, 'fs6', 17)" class="id">GetContext</span><span class="pn">(</span><span class="pn">)</span>

<span class="c">///incoming request</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs9', 18)" onmouseover="showTip(event, 'fs9', 18)" class="id">request</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 19)" onmouseover="showTip(event, 'fs8', 19)" class="id">context</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 20)" onmouseover="showTip(event, 'fs6', 20)" class="id">Request</span>
<span class="c">///querystring code key for OAuth2</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 21)" onmouseover="showTip(event, 'fs10', 21)" class="id">code</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs9', 22)" onmouseover="showTip(event, 'fs9', 22)" class="id">request</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 23)" onmouseover="showTip(event, 'fs6', 23)" class="id">QueryString</span><span class="pn">.</span><span class="pn">[</span><span class="s">&quot;code&quot;</span><span class="pn">]</span>

<span class="c">//printfn &quot;Url.OriginalString: %O&quot; request.Url.OriginalString</span>
<span class="c">//printfn &quot;RawUrl: %O&quot; request.RawUrl</span>
<span class="c">//printfn &quot;%s&quot; code</span>

<span class="c">// Obtain a response object to make outgoing response.</span>
<span class="c">//Already have what is needed (querystring code)</span>
<span class="c">//the response lets the sending server know I got it</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 24)" onmouseover="showTip(event, 'fs11', 24)" class="id">response</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 25)" onmouseover="showTip(event, 'fs8', 25)" class="id">context</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 26)" onmouseover="showTip(event, 'fs6', 26)" class="id">Response</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs12', 27)" onmouseover="showTip(event, 'fs12', 27)" class="id">responseString</span> <span class="o">=</span> 
  <span class="s">&quot;&quot;&quot;</span>
<span class="s">  &lt;!DOCTYPE html&gt;</span>
<span class="s">  &lt;html lang=&quot;en&quot;&gt;</span>
<span class="s">    &lt;head&gt;</span>
<span class="s">      &lt;meta charset=&quot;utf-8&quot;&gt;</span>
<span class="s">      &lt;title&gt;OAuth2 Code Page&lt;/title&gt;</span>
<span class="s">    &lt;/head&gt;</span>
<span class="s">    &lt;body&gt;</span>
<span class="s">      &lt;!-- page content --&gt;</span>
<span class="s">      Got the code! @ &quot;&quot;&quot;</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs13', 28)" onmouseover="showTip(event, 'fs13', 28)" class="vt">DateTime</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs14', 29)" onmouseover="showTip(event, 'fs14', 29)" class="id">Now</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 30)" onmouseover="showTip(event, 'fs6', 30)" class="id">ToString</span><span class="pn">(</span><span class="pn">)</span> <span class="o">+</span> <span class="s">&quot;&quot;&quot;</span>
<span class="s">    &lt;/body&gt;</span>
<span class="s">  &lt;/html&gt;</span>
<span class="s">  &quot;&quot;&quot;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 31)" onmouseover="showTip(event, 'fs15', 31)" class="id">encoding</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 32)" onmouseover="showTip(event, 'fs1', 32)" class="id">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 33)" onmouseover="showTip(event, 'fs16', 33)" class="id">Text</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs17', 34)" onmouseover="showTip(event, 'fs17', 34)" class="rt">Encoding</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 35)" onmouseover="showTip(event, 'fs18', 35)" class="id">UTF8</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 36)" onmouseover="showTip(event, 'fs19', 36)" class="id">txt</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 37)" onmouseover="showTip(event, 'fs15', 37)" class="fn">encoding</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 38)" onmouseover="showTip(event, 'fs6', 38)" class="id">GetBytes</span> <span onmouseout="hideTip(event, 'fs12', 39)" onmouseover="showTip(event, 'fs12', 39)" class="id">responseString</span>

<span class="c">//each are optional header options. Actually works ok without them</span>
<span onmouseout="hideTip(event, 'fs11', 40)" onmouseover="showTip(event, 'fs11', 40)" class="id">response</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 41)" onmouseover="showTip(event, 'fs6', 41)" class="id">ContentEncoding</span>  <span class="k">&lt;-</span> <span onmouseout="hideTip(event, 'fs15', 42)" onmouseover="showTip(event, 'fs15', 42)" class="id">encoding</span>
<span onmouseout="hideTip(event, 'fs11', 43)" onmouseover="showTip(event, 'fs11', 43)" class="id">response</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 44)" onmouseover="showTip(event, 'fs6', 44)" class="id">ContentLength64</span>  <span class="k">&lt;-</span> <span onmouseout="hideTip(event, 'fs20', 45)" onmouseover="showTip(event, 'fs20', 45)" class="rt">Convert</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs21', 46)" onmouseover="showTip(event, 'fs21', 46)" class="id">ToInt64</span><span class="pn">(</span> <span onmouseout="hideTip(event, 'fs19', 47)" onmouseover="showTip(event, 'fs19', 47)" class="id">txt</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 48)" onmouseover="showTip(event, 'fs6', 48)" class="id">Length</span> <span class="pn">)</span>
<span onmouseout="hideTip(event, 'fs11', 49)" onmouseover="showTip(event, 'fs11', 49)" class="id">response</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 50)" onmouseover="showTip(event, 'fs6', 50)" class="id">ContentType</span>      <span class="k">&lt;-</span> <span onmouseout="hideTip(event, 'fs1', 51)" onmouseover="showTip(event, 'fs1', 51)" class="id">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs2', 52)" onmouseover="showTip(event, 'fs2', 52)" class="id">Net</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs22', 53)" onmouseover="showTip(event, 'fs22', 53)" class="id">Mime</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs23', 54)" onmouseover="showTip(event, 'fs23', 54)" class="rt">MediaTypeNames</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs24', 55)" onmouseover="showTip(event, 'fs24', 55)" class="rt">Text</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs25', 56)" onmouseover="showTip(event, 'fs25', 56)" class="id">Html</span>
<span onmouseout="hideTip(event, 'fs11', 57)" onmouseover="showTip(event, 'fs11', 57)" class="id">response</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 58)" onmouseover="showTip(event, 'fs6', 58)" class="id">KeepAlive</span>        <span class="k">&lt;-</span> <span class="k">false</span>

<span class="c">//send response</span>
<span onmouseout="hideTip(event, 'fs11', 59)" onmouseover="showTip(event, 'fs11', 59)" class="fn">response</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 60)" onmouseover="showTip(event, 'fs6', 60)" class="id">OutputStream</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 61)" onmouseover="showTip(event, 'fs6', 61)" class="id">Write</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 62)" onmouseover="showTip(event, 'fs19', 62)" class="id">txt</span><span class="pn">,</span> <span class="n">0</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs19', 63)" onmouseover="showTip(event, 'fs19', 63)" class="id">txt</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 64)" onmouseover="showTip(event, 'fs6', 64)" class="id">Length</span><span class="pn">)</span>
<span class="c">//must close</span>
<span onmouseout="hideTip(event, 'fs11', 65)" onmouseover="showTip(event, 'fs11', 65)" class="fn">response</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 66)" onmouseover="showTip(event, 'fs6', 66)" class="id">OutputStream</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 67)" onmouseover="showTip(event, 'fs6', 67)" class="id">Close</span><span class="pn">(</span><span class="pn">)</span>

<span class="c">//stop the HTTP listener</span>
<span onmouseout="hideTip(event, 'fs4', 68)" onmouseover="showTip(event, 'fs4', 68)" class="fn">hl</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs6', 69)" onmouseover="showTip(event, 'fs6', 69)" class="id">Stop</span><span class="pn">(</span><span class="pn">)</span><span class="pn">;</span>

<span class="c">//the value I was wanting </span>
<span class="c">//as part of a client side OAuth 2 ping pong</span>
<span onmouseout="hideTip(event, 'fs7', 70)" onmouseover="showTip(event, 'fs7', 70)" class="fn">printfn</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs10', 71)" onmouseover="showTip(event, 'fs10', 71)" class="id">code</span>


<span class="c">//next use this to send new http request for exchange for Access Token</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.Net</div>
<div class="tip" id="fs3">val host : string</div>
<div class="tip" id="fs4">val hl : HttpListener</div>
<div class="tip" id="fs5">Multiple items<br />type HttpListener =<br />&#160;&#160;new : unit -&gt; HttpListener<br />&#160;&#160;member Abort : unit -&gt; unit<br />&#160;&#160;member AuthenticationSchemeSelectorDelegate : AuthenticationSchemeSelector with get, set<br />&#160;&#160;member AuthenticationSchemes : AuthenticationSchemes with get, set<br />&#160;&#160;member BeginGetContext : callback:AsyncCallback * state:obj -&gt; IAsyncResult<br />&#160;&#160;member Close : unit -&gt; unit<br />&#160;&#160;member DefaultServiceNames : ServiceNameCollection<br />&#160;&#160;member EndGetContext : asyncResult:IAsyncResult -&gt; HttpListenerContext<br />&#160;&#160;member ExtendedProtectionPolicy : ExtendedProtectionPolicy with get, set<br />&#160;&#160;member ExtendedProtectionSelectorDelegate : ExtendedProtectionSelector with get, set<br />&#160;&#160;...<br />&#160;&#160;nested type ExtendedProtectionSelector<br /><br />--------------------<br />HttpListener() : HttpListener</div>
<div class="tip" id="fs6"></div>
<div class="tip" id="fs7">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T</div>
<div class="tip" id="fs8">val context : HttpListenerContext</div>
<div class="tip" id="fs9">val request : HttpListenerRequest<br /><em><br /><br />incoming request</em></div>
<div class="tip" id="fs10">val code : string<br /><em><br /><br />querystring code key for OAuth2</em></div>
<div class="tip" id="fs11">val response : HttpListenerResponse</div>
<div class="tip" id="fs12">val responseString : string</div>
<div class="tip" id="fs13">Multiple items<br />type DateTime =<br />&#160;&#160;struct<br />&#160;&#160;&#160;&#160;new : ticks:int64 -&gt; DateTime + 10 overloads<br />&#160;&#160;&#160;&#160;member Add : value:TimeSpan -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddDays : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddHours : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddMilliseconds : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddMinutes : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddMonths : months:int -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddSeconds : value:float -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddTicks : value:int64 -&gt; DateTime<br />&#160;&#160;&#160;&#160;member AddYears : value:int -&gt; DateTime<br />&#160;&#160;&#160;&#160;...<br />&#160;&#160;end<br /><br />--------------------<br />DateTime ()<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(ticks: int64) : DateTime<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(ticks: int64, kind: DateTimeKind) : DateTime<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int) : DateTime<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, calendar: Globalization.Calendar) : DateTime<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int) : DateTime<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, kind: DateTimeKind) : DateTime<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, calendar: Globalization.Calendar) : DateTime<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int) : DateTime<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />DateTime(year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: int, kind: DateTimeKind) : DateTime<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs14">property DateTime.Now: DateTime with get</div>
<div class="tip" id="fs15">val encoding : Text.Encoding</div>
<div class="tip" id="fs16">namespace System.Text</div>
<div class="tip" id="fs17">type Encoding =<br />&#160;&#160;member BodyName : string<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CodePage : int<br />&#160;&#160;member DecoderFallback : DecoderFallback with get, set<br />&#160;&#160;member EncoderFallback : EncoderFallback with get, set<br />&#160;&#160;member EncodingName : string<br />&#160;&#160;member Equals : value:obj -&gt; bool<br />&#160;&#160;member GetByteCount : chars:char[] -&gt; int + 5 overloads<br />&#160;&#160;member GetBytes : chars:char[] -&gt; byte[] + 7 overloads<br />&#160;&#160;member GetCharCount : bytes:byte[] -&gt; int + 3 overloads<br />&#160;&#160;...</div>
<div class="tip" id="fs18">property Text.Encoding.UTF8: Text.Encoding with get</div>
<div class="tip" id="fs19">val txt : byte []</div>
<div class="tip" id="fs20">type Convert =<br />&#160;&#160;static val DBNull : obj<br />&#160;&#160;static member ChangeType : value:obj * typeCode:TypeCode -&gt; obj + 3 overloads<br />&#160;&#160;static member FromBase64CharArray : inArray:char[] * offset:int * length:int -&gt; byte[]<br />&#160;&#160;static member FromBase64String : s:string -&gt; byte[]<br />&#160;&#160;static member GetTypeCode : value:obj -&gt; TypeCode<br />&#160;&#160;static member IsDBNull : value:obj -&gt; bool<br />&#160;&#160;static member ToBase64CharArray : inArray:byte[] * offsetIn:int * length:int * outArray:char[] * offsetOut:int -&gt; int + 1 overload<br />&#160;&#160;static member ToBase64String : inArray:byte[] -&gt; string + 4 overloads<br />&#160;&#160;static member ToBoolean : value:obj -&gt; bool + 17 overloads<br />&#160;&#160;static member ToByte : value:obj -&gt; byte + 18 overloads<br />&#160;&#160;...</div>
<div class="tip" id="fs21">Convert.ToInt64(value: DateTime) : int64<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt64(value: string) : int64<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt64(value: decimal) : int64<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt64(value: float) : int64<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt64(value: float32) : int64<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt64(value: int64) : int64<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt64(value: uint64) : int64<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt64(value: uint32) : int64<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt64(value: int) : int64<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Convert.ToInt64(value: uint16) : int64<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs22">namespace System.Net.Mime</div>
<div class="tip" id="fs23">type MediaTypeNames =<br />&#160;&#160;nested type Application<br />&#160;&#160;nested type Image<br />&#160;&#160;nested type Text</div>
<div class="tip" id="fs24">type Text =<br />&#160;&#160;static val Plain : string<br />&#160;&#160;static val Html : string<br />&#160;&#160;static val Xml : string<br />&#160;&#160;static val RichText : string</div>
<div class="tip" id="fs25">field Mime.MediaTypeNames.Text.Html: string = &quot;text/html&quot;</div>

