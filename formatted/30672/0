<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">type</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="vt">Z</span> <span class="o">=</span> <span class="k">struct</span> <span class="k">end</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="vt">S</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">n</span><span class="pn">&gt;</span> <span class="o">=</span> <span class="k">struct</span> <span class="k">end</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="rt">List</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">n</span><span class="pn">,</span><span class="ta">&#39;</span><span class="id">b</span><span class="pn">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="uc">L</span> <span class="k">of</span> <span class="ta">&#39;</span><span class="id">b</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="rt">list</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="id">nil</span> <span class="pn">:</span> <span onmouseout="hideTip(event, 'fs3', 7)" onmouseover="showTip(event, 'fs3', 7)" class="rt">List</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs1', 8)" onmouseover="showTip(event, 'fs1', 8)" class="vt">Z</span><span class="pn">,</span> <span class="ta">&#39;</span><span class="id">b</span><span class="pn">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 9)" onmouseover="showTip(event, 'fs4', 9)" class="uc">L</span> <span class="pn">[</span><span class="pn">]</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 10)" onmouseover="showTip(event, 'fs7', 10)" class="fn">cons</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs8', 11)" onmouseover="showTip(event, 'fs8', 11)" class="id">b</span><span class="pn">:</span><span class="ta">&#39;</span><span class="id">b</span><span class="pn">)</span> <span class="pn">(</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs4', 12)" onmouseover="showTip(event, 'fs4', 12)" class="uc">L</span> <span onmouseout="hideTip(event, 'fs9', 13)" onmouseover="showTip(event, 'fs9', 13)" class="id">bs</span><span class="pn">)</span> <span class="pn">:</span> <span onmouseout="hideTip(event, 'fs3', 14)" onmouseover="showTip(event, 'fs3', 14)" class="rt">List</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">n</span><span class="pn">,</span> <span class="ta">&#39;</span><span class="id">b</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="pn">:</span> <span onmouseout="hideTip(event, 'fs3', 15)" onmouseover="showTip(event, 'fs3', 15)" class="rt">List</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs2', 16)" onmouseover="showTip(event, 'fs2', 16)" class="vt">S</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">n</span><span class="pn">&gt;</span><span class="pn">,</span><span class="ta">&#39;</span><span class="id">b</span><span class="pn">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 17)" onmouseover="showTip(event, 'fs4', 17)" class="uc">L</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs8', 18)" onmouseover="showTip(event, 'fs8', 18)" class="id">b</span><span class="uc">::</span><span class="id">bs</span><span class="pn">)</span>

<span class="pn">[&lt;</span><span onmouseout="hideTip(event, 'fs10', 19)" onmouseover="showTip(event, 'fs10', 19)" class="rt">EntryPoint</span><span class="pn">&gt;]</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 20)" onmouseover="showTip(event, 'fs11', 20)" class="fn">main</span> <span onmouseout="hideTip(event, 'fs12', 21)" onmouseover="showTip(event, 'fs12', 21)" class="id">args</span> <span class="o">=</span>
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 22)" onmouseover="showTip(event, 'fs13', 22)" class="id">l3</span> <span class="pn">:</span> <span onmouseout="hideTip(event, 'fs3', 23)" onmouseover="showTip(event, 'fs3', 23)" class="rt">List</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs2', 24)" onmouseover="showTip(event, 'fs2', 24)" class="vt">S</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs2', 25)" onmouseover="showTip(event, 'fs2', 25)" class="vt">S</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs2', 26)" onmouseover="showTip(event, 'fs2', 26)" class="vt">S</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs1', 27)" onmouseover="showTip(event, 'fs1', 27)" class="vt">Z</span><span class="pn">&gt;</span><span class="pn">&gt;</span><span class="pn">&gt;</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs14', 28)" onmouseover="showTip(event, 'fs14', 28)" class="vt">int</span><span class="pn">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 29)" onmouseover="showTip(event, 'fs7', 29)" class="fn">cons</span> <span class="n">1</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs7', 30)" onmouseover="showTip(event, 'fs7', 30)" class="fn">cons</span> <span class="n">2</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs7', 31)" onmouseover="showTip(event, 'fs7', 31)" class="fn">cons</span> <span class="n">3</span> <span onmouseout="hideTip(event, 'fs6', 32)" onmouseover="showTip(event, 'fs6', 32)" class="id">nil</span><span class="pn">)</span><span class="pn">)</span>
  <span onmouseout="hideTip(event, 'fs15', 33)" onmouseover="showTip(event, 'fs15', 33)" class="fn">printfn</span> <span class="s">&quot;</span><span class="pf">%A</span><span class="s">; </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs13', 34)" onmouseover="showTip(event, 'fs13', 34)" class="id">l3</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs7', 35)" onmouseover="showTip(event, 'fs7', 35)" class="fn">cons</span> <span class="n">3</span> <span onmouseout="hideTip(event, 'fs6', 36)" onmouseover="showTip(event, 'fs6', 36)" class="id">nil</span><span class="pn">)</span>
  <span class="n">0</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">type Z</div>
<div class="tip" id="fs2">type S&lt;&#39;n&gt;</div>
<div class="tip" id="fs3">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;&#160;&#160;interface IReadOnlyList&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;interface IReadOnlyCollection&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;interface IEnumerable<br />&#160;&#160;&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;member GetReverseIndex : rank:int * offset:int -&gt; int<br />&#160;&#160;&#160;&#160;member GetSlice : startIndex:int option * endIndex:int option -&gt; &#39;T list<br />&#160;&#160;&#160;&#160;member Head : &#39;T<br />&#160;&#160;&#160;&#160;member IsEmpty : bool<br />&#160;&#160;&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;&#160;&#160;member Length : int<br />&#160;&#160;&#160;&#160;...<br /><br />--------------------<br />type List&lt;&#39;n,&#39;b&gt; = | L of &#39;b list</div>
<div class="tip" id="fs4">union case List.L: &#39;b list -&gt; List&lt;&#39;n,&#39;b&gt;</div>
<div class="tip" id="fs5">type &#39;T list = List&lt;&#39;T&gt;</div>
<div class="tip" id="fs6">val nil : List&lt;Z,&#39;b&gt;</div>
<div class="tip" id="fs7">val cons : b:&#39;b -&gt; List&lt;&#39;n,&#39;b&gt; -&gt; List&lt;S&lt;&#39;n&gt;,&#39;b&gt;</div>
<div class="tip" id="fs8">val b : &#39;b</div>
<div class="tip" id="fs9">val bs : &#39;b list</div>
<div class="tip" id="fs10">Multiple items<br />type EntryPointAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; EntryPointAttribute<br /><br />--------------------<br />new : unit -&gt; EntryPointAttribute</div>
<div class="tip" id="fs11">val main : args:string [] -&gt; int</div>
<div class="tip" id="fs12">val args : string []</div>
<div class="tip" id="fs13">val l3 : List&lt;S&lt;S&lt;S&lt;Z&gt;&gt;&gt;,int&gt;</div>
<div class="tip" id="fs14">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />--------------------<br />type int = int32<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int</div>
<div class="tip" id="fs15">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T</div>

