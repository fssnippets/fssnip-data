<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="id">LiteDB</span>

<span class="pn">[&lt;</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="rt">CLIMutable</span><span class="pn">&gt;]</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="rt">Customer</span> <span class="o">=</span>
    <span class="pn">{</span>
        <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="id">Id</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="vt">int</span>
        <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="id">Name</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="rt">string</span>
        <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="id">Phones</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="rt">string</span><span class="pn">[</span><span class="pn">]</span>
        <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="id">IsActive</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="vt">bool</span>
    <span class="pn">}</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 12)" onmouseover="showTip(event, 'fs11', 12)" class="id">db</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs12', 13)" onmouseover="showTip(event, 'fs12', 13)" class="d">LiteDatabase</span><span class="pn">(</span><span class="s">@&quot;C:\Temp\MyData.db&quot;</span><span class="pn">)</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 14)" onmouseover="showTip(event, 'fs13', 14)" class="id">col</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 15)" onmouseover="showTip(event, 'fs11', 15)" class="fn">db</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs14', 16)" onmouseover="showTip(event, 'fs14', 16)" class="id">GetCollection</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs3', 17)" onmouseover="showTip(event, 'fs3', 17)" class="rt">Customer</span><span class="pn">&gt;</span><span class="pn">(</span><span class="s">&quot;customers&quot;</span><span class="pn">)</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs15', 18)" onmouseover="showTip(event, 'fs15', 18)" class="id">customer</span> <span class="o">=</span> <span class="pn">{</span> <span class="id">Id</span> <span class="o">=</span> <span class="n">0</span><span class="pn">;</span> <span class="id">Name</span> <span class="o">=</span> <span class="s">&quot;John Doe&quot;</span><span class="pn">;</span> <span class="id">Phones</span> <span class="o">=</span> <span class="pn">[|</span> <span class="s">&quot;867-5309&quot;</span> <span class="pn">|]</span><span class="pn">;</span> <span class="id">IsActive</span> <span class="o">=</span> <span class="k">true</span> <span class="pn">}</span>
<span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="fn">col</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 20)" onmouseover="showTip(event, 'fs16', 20)" class="id">Insert</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs15', 21)" onmouseover="showTip(event, 'fs15', 21)" class="id">customer</span><span class="pn">)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="id">reader</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 23)" onmouseover="showTip(event, 'fs11', 23)" class="fn">db</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 24)" onmouseover="showTip(event, 'fs18', 24)" class="id">Execute</span><span class="pn">(</span><span class="s">&quot;SELECT $ FROM customers&quot;</span><span class="pn">)</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs19', 25)" onmouseover="showTip(event, 'fs19', 25)" class="id">mapper</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 26)" onmouseover="showTip(event, 'fs20', 26)" class="rt">BsonMapper</span><span class="pn">(</span><span class="pn">)</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs21', 27)" onmouseover="showTip(event, 'fs21', 27)" class="id">customers</span> <span class="o">=</span> 
    <span class="pn">[|</span>
        <span class="k">while</span> <span onmouseout="hideTip(event, 'fs17', 28)" onmouseover="showTip(event, 'fs17', 28)" class="fn">reader</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs22', 29)" onmouseover="showTip(event, 'fs22', 29)" class="id">Read</span><span class="pn">(</span><span class="pn">)</span> <span class="k">do</span>
            <span onmouseout="hideTip(event, 'fs19', 30)" onmouseover="showTip(event, 'fs19', 30)" class="fn">mapper</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs23', 31)" onmouseover="showTip(event, 'fs23', 31)" class="id">Deserialize</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs3', 32)" onmouseover="showTip(event, 'fs3', 32)" class="rt">Customer</span><span class="pn">&gt;</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs17', 33)" onmouseover="showTip(event, 'fs17', 33)" class="id">reader</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs24', 34)" onmouseover="showTip(event, 'fs24', 34)" class="id">Current</span><span class="pn">)</span>
    <span class="pn">|]</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace LiteDB</div>
<div class="tip" id="fs2">Multiple items<br />type CLIMutableAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; CLIMutableAttribute<br /><br />--------------------<br />new : unit -&gt; CLIMutableAttribute</div>
<div class="tip" id="fs3">type Customer =<br />&#160;&#160;{ Id: int<br />&#160;&#160;&#160;&#160;Name: string<br />&#160;&#160;&#160;&#160;Phones: string []<br />&#160;&#160;&#160;&#160;IsActive: bool }</div>
<div class="tip" id="fs4">Customer.Id: int</div>
<div class="tip" id="fs5">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />--------------------<br />type int = int32<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int</div>
<div class="tip" id="fs6">Customer.Name: string</div>
<div class="tip" id="fs7">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />--------------------<br />type string = System.String</div>
<div class="tip" id="fs8">Customer.Phones: string []</div>
<div class="tip" id="fs9">Customer.IsActive: bool</div>
<div class="tip" id="fs10">type bool = System.Boolean</div>
<div class="tip" id="fs11">val db : LiteDatabase</div>
<div class="tip" id="fs12">Multiple items<br />type LiteDatabase =<br />&#160;&#160;new : connectionString:string * ?mapper:BsonMapper -&gt; LiteDatabase + 3 overloads<br />&#160;&#160;member BeginTrans : unit -&gt; bool<br />&#160;&#160;member Checkpoint : unit -&gt; unit<br />&#160;&#160;member CheckpointSize : int with get, set<br />&#160;&#160;member Collation : Collation<br />&#160;&#160;member CollectionExists : name:string -&gt; bool<br />&#160;&#160;member Commit : unit -&gt; bool<br />&#160;&#160;member Dispose : unit -&gt; unit<br />&#160;&#160;member DropCollection : name:string -&gt; bool<br />&#160;&#160;member Execute : commandReader:TextReader * ?parameters:BsonDocument -&gt; IBsonDataReader + 2 overloads<br />&#160;&#160;...<br /><br />--------------------<br />LiteDatabase(connectionString: string,?mapper: BsonMapper) : LiteDatabase<br />LiteDatabase(connectionString: ConnectionString,?mapper: BsonMapper) : LiteDatabase<br />LiteDatabase(stream: System.IO.Stream,?mapper: BsonMapper,?logStream: System.IO.Stream) : LiteDatabase<br />LiteDatabase(engine: Engine.ILiteEngine,?mapper: BsonMapper,?disposeOnClose: bool) : LiteDatabase</div>
<div class="tip" id="fs13">val col : ILiteCollection&lt;Customer&gt;</div>
<div class="tip" id="fs14">LiteDatabase.GetCollection&lt;&#39;T&gt;() : ILiteCollection&lt;&#39;T&gt;<br />LiteDatabase.GetCollection&lt;&#39;T&gt;(autoId: BsonAutoId) : ILiteCollection&lt;&#39;T&gt;<br />LiteDatabase.GetCollection(name: string,?autoId: BsonAutoId) : ILiteCollection&lt;BsonDocument&gt;<br />LiteDatabase.GetCollection&lt;&#39;T&gt;(name: string,?autoId: BsonAutoId) : ILiteCollection&lt;&#39;T&gt;</div>
<div class="tip" id="fs15">val customer : Customer</div>
<div class="tip" id="fs16">ILiteCollection.Insert(entities: System.Collections.Generic.IEnumerable&lt;Customer&gt;) : int<br />ILiteCollection.Insert(entity: Customer) : BsonValue<br />ILiteCollection.Insert(id: BsonValue, entity: Customer) : unit</div>
<div class="tip" id="fs17">val reader : IBsonDataReader</div>
<div class="tip" id="fs18">LiteDatabase.Execute(command: string, [&lt;System.ParamArray&gt;] args: BsonValue []) : IBsonDataReader<br />LiteDatabase.Execute(command: string,?parameters: BsonDocument) : IBsonDataReader<br />LiteDatabase.Execute(commandReader: System.IO.TextReader,?parameters: BsonDocument) : IBsonDataReader</div>
<div class="tip" id="fs19">val mapper : BsonMapper</div>
<div class="tip" id="fs20">Multiple items<br />type BsonMapper =<br />&#160;&#160;new : ?customTypeInstantiator:Func&lt;Type, obj&gt; * ?typeNameBinder:ITypeNameBinder -&gt; BsonMapper<br />&#160;&#160;val ResolveFieldName : Func&lt;string, string&gt;<br />&#160;&#160;val ResolveMember : Action&lt;Type, MemberInfo, MemberMapper&gt;<br />&#160;&#160;val ResolveCollectionName : Func&lt;Type, string&gt;<br />&#160;&#160;member Deserialize&lt;&#39;T&gt; : value:BsonValue -&gt; &#39;T + 1 overload<br />&#160;&#160;member EmptyStringToNull : bool with get, set<br />&#160;&#160;member Entity&lt;&#39;T&gt; : unit -&gt; EntityBuilder&lt;&#39;T&gt;<br />&#160;&#160;member EnumAsInteger : bool with get, set<br />&#160;&#160;member GetExpression&lt;&#39;T, &#39;K&gt; : predicate:Expression&lt;Func&lt;&#39;T, &#39;K&gt;&gt; -&gt; BsonExpression<br />&#160;&#160;member GetIndexExpression&lt;&#39;T, &#39;K&gt; : predicate:Expression&lt;Func&lt;&#39;T, &#39;K&gt;&gt; -&gt; BsonExpression<br />&#160;&#160;...<br /><br />--------------------<br />BsonMapper(?customTypeInstantiator: System.Func&lt;System.Type,obj&gt;,?typeNameBinder: ITypeNameBinder) : BsonMapper</div>
<div class="tip" id="fs21">val customers : Customer []</div>
<div class="tip" id="fs22">IBsonDataReader.Read() : bool</div>
<div class="tip" id="fs23">BsonMapper.Deserialize&lt;&#39;T&gt;(value: BsonValue) : &#39;T<br />BsonMapper.Deserialize(type: System.Type, value: BsonValue) : obj</div>
<div class="tip" id="fs24">property IBsonDataReader.Current: BsonValue with get</div>

