<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
<span class="l">21: </span>
<span class="l">22: </span>
<span class="l">23: </span>
<span class="l">24: </span>
<span class="l">25: </span>
<span class="l">26: </span>
<span class="l">27: </span>
<span class="l">28: </span>
<span class="l">29: </span>
<span class="l">30: </span>
<span class="l">31: </span>
<span class="l">32: </span>
<span class="l">33: </span>
<span class="l">34: </span>
<span class="l">35: </span>
<span class="l">36: </span>
<span class="l">37: </span>
<span class="l">38: </span>
<span class="l">39: </span>
<span class="l">40: </span>
<span class="l">41: </span>
<span class="l">42: </span>
<span class="l">43: </span>
<span class="l">44: </span>
<span class="l">45: </span>
<span class="l">46: </span>
<span class="l">47: </span>
<span class="l">48: </span>
<span class="l">49: </span>
<span class="l">50: </span>
<span class="l">51: </span>
<span class="l">52: </span>
<span class="l">53: </span>
<span class="l">54: </span>
<span class="l">55: </span>
<span class="l">56: </span>
<span class="l">57: </span>
<span class="l">58: </span>
<span class="l">59: </span>
<span class="l">60: </span>
<span class="l">61: </span>
<span class="l">62: </span>
<span class="l">63: </span>
<span class="l">64: </span>
<span class="l">65: </span>
<span class="l">66: </span>
<span class="l">67: </span>
<span class="l">68: </span>
<span class="l">69: </span>
<span class="l">70: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="id">System</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="rt">SpanReader</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">T</span><span class="pn">,</span> <span class="ta">&#39;</span><span class="id">TState</span><span class="pn">,</span> <span class="ta">&#39;</span><span class="id">TRet</span><span class="pn">&gt;</span> <span class="o">=</span> <span class="k">delegate</span> <span class="k">of</span> <span class="id">span</span><span class="pn">:</span> <span class="vt">Span</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">T</span><span class="pn">&gt;</span> <span class="pn">*</span> <span class="id">state</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="rt">byref</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">TState</span><span class="pn">&gt;</span> <span class="k">-&gt;</span> <span class="ta">&#39;</span><span class="id">TRet</span>

<span class="pn">[&lt;</span><span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="rt">Struct</span><span class="pn">;</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="rt">NoComparison</span><span class="pn">;</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="rt">NoEquality</span><span class="pn">&gt;]</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="vt">StringAllocatorState</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">TCtx</span><span class="pn">&gt;</span> <span class="o">=</span> 
    <span class="pn">{</span>
        <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs8', 8)" onmouseover="showTip(event, 'fs8', 8)" class="mv">Position</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs9', 9)" onmouseover="showTip(event, 'fs9', 9)" class="vt">int</span>
        <span onmouseout="hideTip(event, 'fs10', 10)" onmouseover="showTip(event, 'fs10', 10)" class="id">Ctx</span><span class="pn">:</span> <span class="ta">&#39;</span><span class="id">TCtx</span>
    <span class="pn">}</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs11', 11)" onmouseover="showTip(event, 'fs11', 11)" class="rt">StringAllocatorReader</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">TCtx</span><span class="pn">,</span> <span class="ta">&#39;</span><span class="id">TRet</span><span class="pn">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 12)" onmouseover="showTip(event, 'fs2', 12)" class="rt">SpanReader</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs12', 13)" onmouseover="showTip(event, 'fs12', 13)" class="vt">char</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs7', 14)" onmouseover="showTip(event, 'fs7', 14)" class="vt">StringAllocatorState</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">TCtx</span><span class="pn">&gt;</span><span class="pn">,</span> <span class="ta">&#39;</span><span class="id">TRet</span><span class="pn">&gt;</span>

<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs13', 15)" onmouseover="showTip(event, 'fs13', 15)" class="fn">getContext</span><span class="pn">(</span><span class="pn">)</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="id">StringAllocatorReader</span><span class="pn">(</span><span class="k">fun</span> <span class="id">_</span> <span onmouseout="hideTip(event, 'fs14', 17)" onmouseover="showTip(event, 'fs14', 17)" class="mv">state</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs14', 18)" onmouseover="showTip(event, 'fs14', 18)" class="mv">state</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs15', 19)" onmouseover="showTip(event, 'fs15', 19)" class="id">Ctx</span><span class="pn">)</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs16', 20)" onmouseover="showTip(event, 'fs16', 20)" class="rt">StringAllocator</span><span class="pn">(</span><span class="pn">)</span> <span class="o">=</span>  
    <span class="k">member</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs17', 21)" onmouseover="showTip(event, 'fs17', 21)" class="id">this</span><span class="pn">.</span><span class="fn">Zero</span><span class="pn">(</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 22)" onmouseover="showTip(event, 'fs11', 22)" class="id">StringAllocatorReader</span><span class="pn">(</span><span class="k">fun</span> <span class="id">_</span> <span class="mv">_</span> <span class="k">-&gt;</span> <span class="pn">(</span><span class="pn">)</span><span class="pn">)</span>
    
    <span class="k">member</span> <span class="k">inline</span> <span class="id">_</span><span class="pn">.</span><span class="fn">Combine</span><span class="pn">(</span>
        <span class="pn">[&lt;</span><span class="id">InlineIfLambda</span><span class="pn">&gt;]</span> <span onmouseout="hideTip(event, 'fs18', 23)" onmouseover="showTip(event, 'fs18', 23)" class="id">f</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs11', 24)" onmouseover="showTip(event, 'fs11', 24)" class="rt">StringAllocatorReader</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">TCtx</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs19', 25)" onmouseover="showTip(event, 'fs19', 25)" class="rt">unit</span><span class="pn">&gt;</span><span class="pn">,</span> 
        <span class="pn">[&lt;</span><span class="id">InlineIfLambda</span><span class="pn">&gt;]</span> <span onmouseout="hideTip(event, 'fs20', 26)" onmouseover="showTip(event, 'fs20', 26)" class="id">g</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs11', 27)" onmouseover="showTip(event, 'fs11', 27)" class="rt">StringAllocatorReader</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">TCtx</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs19', 28)" onmouseover="showTip(event, 'fs19', 28)" class="rt">unit</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs11', 29)" onmouseover="showTip(event, 'fs11', 29)" class="id">StringAllocatorReader</span><span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs21', 30)" onmouseover="showTip(event, 'fs21', 30)" class="id">chars</span> <span onmouseout="hideTip(event, 'fs22', 31)" onmouseover="showTip(event, 'fs22', 31)" class="mv">state</span> <span class="k">-&gt;</span> 
            <span onmouseout="hideTip(event, 'fs18', 32)" onmouseover="showTip(event, 'fs18', 32)" class="fn">f</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs15', 33)" onmouseover="showTip(event, 'fs15', 33)" class="id">Invoke</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs21', 34)" onmouseover="showTip(event, 'fs21', 34)" class="id">chars</span><span class="pn">,</span> <span class="o">&amp;</span><span onmouseout="hideTip(event, 'fs22', 35)" onmouseover="showTip(event, 'fs22', 35)" class="mv">state</span><span class="pn">)</span>
            <span onmouseout="hideTip(event, 'fs20', 36)" onmouseover="showTip(event, 'fs20', 36)" class="fn">g</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs15', 37)" onmouseover="showTip(event, 'fs15', 37)" class="id">Invoke</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs21', 38)" onmouseover="showTip(event, 'fs21', 38)" class="id">chars</span><span class="pn">,</span> <span class="o">&amp;</span><span onmouseout="hideTip(event, 'fs22', 39)" onmouseover="showTip(event, 'fs22', 39)" class="mv">state</span><span class="pn">)</span><span class="pn">)</span>
    
    <span class="k">member</span> <span class="k">inline</span> <span class="id">_</span><span class="pn">.</span><span class="fn">Delay</span><span class="pn">(</span>
        <span class="pn">[&lt;</span><span class="id">InlineIfLambda</span><span class="pn">&gt;]</span> <span onmouseout="hideTip(event, 'fs23', 40)" onmouseover="showTip(event, 'fs23', 40)" class="fn">f</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs19', 41)" onmouseover="showTip(event, 'fs19', 41)" class="rt">unit</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs11', 42)" onmouseover="showTip(event, 'fs11', 42)" class="rt">StringAllocatorReader</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">TCtx</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs19', 43)" onmouseover="showTip(event, 'fs19', 43)" class="rt">unit</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs11', 44)" onmouseover="showTip(event, 'fs11', 44)" class="id">StringAllocatorReader</span><span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs21', 45)" onmouseover="showTip(event, 'fs21', 45)" class="id">chars</span> <span onmouseout="hideTip(event, 'fs22', 46)" onmouseover="showTip(event, 'fs22', 46)" class="mv">state</span> <span class="k">-&gt;</span> <span class="fn">(</span><span onmouseout="hideTip(event, 'fs23', 47)" onmouseover="showTip(event, 'fs23', 47)" class="fn">f</span><span class="pn">(</span><span class="pn">)</span><span class="pn">)</span><span class="pn">.</span><span class="id">Invoke</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs21', 48)" onmouseover="showTip(event, 'fs21', 48)" class="id">chars</span><span class="pn">,</span> <span class="o">&amp;</span><span onmouseout="hideTip(event, 'fs22', 49)" onmouseover="showTip(event, 'fs22', 49)" class="mv">state</span><span class="pn">)</span><span class="pn">)</span>
    
    <span class="k">member</span> <span class="k">inline</span> <span class="id">_</span><span class="pn">.</span><span class="fn">Bind</span><span class="pn">(</span>
        <span class="pn">[&lt;</span><span class="id">InlineIfLambda</span><span class="pn">&gt;]</span> <span onmouseout="hideTip(event, 'fs24', 50)" onmouseover="showTip(event, 'fs24', 50)" class="id">reader</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs11', 51)" onmouseover="showTip(event, 'fs11', 51)" class="rt">StringAllocatorReader</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">TCtx</span><span class="pn">,</span> <span class="ta">&#39;</span><span class="id">TRet</span><span class="pn">&gt;</span><span class="pn">,</span>
        <span class="pn">[&lt;</span><span class="id">InlineIfLambda</span><span class="pn">&gt;]</span> <span onmouseout="hideTip(event, 'fs25', 52)" onmouseover="showTip(event, 'fs25', 52)" class="fn">cont</span><span class="pn">:</span> <span class="ta">&#39;</span><span class="id">TRet</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs11', 53)" onmouseover="showTip(event, 'fs11', 53)" class="rt">StringAllocatorReader</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">TCtx</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs19', 54)" onmouseover="showTip(event, 'fs19', 54)" class="rt">unit</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs11', 55)" onmouseover="showTip(event, 'fs11', 55)" class="id">StringAllocatorReader</span><span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs21', 56)" onmouseover="showTip(event, 'fs21', 56)" class="id">chars</span> <span onmouseout="hideTip(event, 'fs22', 57)" onmouseover="showTip(event, 'fs22', 57)" class="mv">state</span> <span class="k">-&gt;</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs26', 58)" onmouseover="showTip(event, 'fs26', 58)" class="id">ret</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 59)" onmouseover="showTip(event, 'fs24', 59)" class="fn">reader</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs15', 60)" onmouseover="showTip(event, 'fs15', 60)" class="id">Invoke</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs21', 61)" onmouseover="showTip(event, 'fs21', 61)" class="id">chars</span><span class="pn">,</span> <span class="o">&amp;</span><span onmouseout="hideTip(event, 'fs22', 62)" onmouseover="showTip(event, 'fs22', 62)" class="mv">state</span><span class="pn">)</span>
            <span class="fn">(</span><span onmouseout="hideTip(event, 'fs25', 63)" onmouseover="showTip(event, 'fs25', 63)" class="fn">cont</span> <span onmouseout="hideTip(event, 'fs26', 64)" onmouseover="showTip(event, 'fs26', 64)" class="id">ret</span><span class="pn">)</span><span class="pn">.</span><span class="id">Invoke</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs21', 65)" onmouseover="showTip(event, 'fs21', 65)" class="id">chars</span><span class="pn">,</span> <span class="o">&amp;</span><span onmouseout="hideTip(event, 'fs22', 66)" onmouseover="showTip(event, 'fs22', 66)" class="mv">state</span><span class="pn">)</span><span class="pn">)</span>
    
    <span class="k">member</span> <span class="k">inline</span> <span class="id">_</span><span class="pn">.</span><span class="fn">Yield</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs27', 67)" onmouseover="showTip(event, 'fs27', 67)" class="id">ch</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs12', 68)" onmouseover="showTip(event, 'fs12', 68)" class="vt">char</span><span class="pn">)</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs11', 69)" onmouseover="showTip(event, 'fs11', 69)" class="id">StringAllocatorReader</span><span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs21', 70)" onmouseover="showTip(event, 'fs21', 70)" class="id">chars</span> <span onmouseout="hideTip(event, 'fs28', 71)" onmouseover="showTip(event, 'fs28', 71)" class="mv">state</span> <span class="k">-&gt;</span> 
            <span onmouseout="hideTip(event, 'fs21', 72)" onmouseover="showTip(event, 'fs21', 72)" class="id">chars</span><span class="pn">[</span><span onmouseout="hideTip(event, 'fs28', 73)" onmouseover="showTip(event, 'fs28', 73)" class="mv">state</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs15', 74)" onmouseover="showTip(event, 'fs15', 74)" class="id">Position</span><span class="pn">]</span> <span class="k">&lt;-</span> <span onmouseout="hideTip(event, 'fs27', 75)" onmouseover="showTip(event, 'fs27', 75)" class="id">ch</span><span class="pn">;</span> 
            <span onmouseout="hideTip(event, 'fs28', 76)" onmouseover="showTip(event, 'fs28', 76)" class="mv">state</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs15', 77)" onmouseover="showTip(event, 'fs15', 77)" class="id">Position</span> <span class="k">&lt;-</span> <span onmouseout="hideTip(event, 'fs28', 78)" onmouseover="showTip(event, 'fs28', 78)" class="mv">state</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs15', 79)" onmouseover="showTip(event, 'fs15', 79)" class="id">Position</span> <span class="o">+</span> <span class="n">1</span><span class="pn">)</span>

    <span class="k">member</span> <span class="k">inline</span> <span class="id">_</span><span class="pn">.</span><span class="fn">Yield</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs29', 80)" onmouseover="showTip(event, 'fs29', 80)" class="id">str</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs30', 81)" onmouseover="showTip(event, 'fs30', 81)" class="rt">string</span><span class="pn">)</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs11', 82)" onmouseover="showTip(event, 'fs11', 82)" class="id">StringAllocatorReader</span><span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs21', 83)" onmouseover="showTip(event, 'fs21', 83)" class="id">chars</span> <span onmouseout="hideTip(event, 'fs14', 84)" onmouseover="showTip(event, 'fs14', 84)" class="mv">state</span> <span class="k">-&gt;</span> 
            <span onmouseout="hideTip(event, 'fs29', 85)" onmouseover="showTip(event, 'fs29', 85)" class="fn">str</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs15', 86)" onmouseover="showTip(event, 'fs15', 86)" class="id">AsSpan</span><span class="pn">(</span><span class="pn">)</span><span class="pn">.</span><span class="id">CopyTo</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs21', 87)" onmouseover="showTip(event, 'fs21', 87)" class="fn">chars</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs15', 88)" onmouseover="showTip(event, 'fs15', 88)" class="id">Slice</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs14', 89)" onmouseover="showTip(event, 'fs14', 89)" class="mv">state</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs15', 90)" onmouseover="showTip(event, 'fs15', 90)" class="id">Position</span><span class="pn">)</span><span class="pn">)</span>
            <span onmouseout="hideTip(event, 'fs14', 91)" onmouseover="showTip(event, 'fs14', 91)" class="mv">state</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs15', 92)" onmouseover="showTip(event, 'fs15', 92)" class="id">Position</span> <span class="k">&lt;-</span> <span onmouseout="hideTip(event, 'fs14', 93)" onmouseover="showTip(event, 'fs14', 93)" class="mv">state</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs15', 94)" onmouseover="showTip(event, 'fs15', 94)" class="id">Position</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fs29', 95)" onmouseover="showTip(event, 'fs29', 95)" class="id">str</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs15', 96)" onmouseover="showTip(event, 'fs15', 96)" class="id">Length</span><span class="pn">)</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs31', 97)" onmouseover="showTip(event, 'fs31', 97)" class="id">stringAlloc</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 98)" onmouseover="showTip(event, 'fs16', 98)" class="rt">StringAllocator</span><span class="pn">(</span><span class="pn">)</span>

<span class="k">let</span> <span class="k">inline</span> <span onmouseout="hideTip(event, 'fs32', 99)" onmouseover="showTip(event, 'fs32', 99)" class="fn">run</span> 
    <span class="pn">(</span><span onmouseout="hideTip(event, 'fs33', 100)" onmouseover="showTip(event, 'fs33', 100)" class="id">length</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs9', 101)" onmouseover="showTip(event, 'fs9', 101)" class="vt">int</span><span class="pn">)</span>
    <span class="pn">(</span><span onmouseout="hideTip(event, 'fs34', 102)" onmouseover="showTip(event, 'fs34', 102)" class="id">ctx</span><span class="pn">:</span> <span class="ta">&#39;</span><span class="id">TCtx</span><span class="pn">)</span>
    <span class="pn">(</span><span class="pn">[&lt;</span><span class="id">InlineIfLambda</span><span class="pn">&gt;]</span> <span onmouseout="hideTip(event, 'fs35', 103)" onmouseover="showTip(event, 'fs35', 103)" class="id">action</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs11', 104)" onmouseover="showTip(event, 'fs11', 104)" class="rt">StringAllocatorReader</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">TCtx</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs19', 105)" onmouseover="showTip(event, 'fs19', 105)" class="rt">unit</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs36', 106)" onmouseover="showTip(event, 'fs36', 106)" class="m">String</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs37', 107)" onmouseover="showTip(event, 'fs37', 107)" class="id">Create</span><span class="pn">(</span>
        <span onmouseout="hideTip(event, 'fs33', 108)" onmouseover="showTip(event, 'fs33', 108)" class="id">length</span><span class="pn">,</span> 
        <span onmouseout="hideTip(event, 'fs34', 109)" onmouseover="showTip(event, 'fs34', 109)" class="id">ctx</span><span class="pn">,</span> 
        <span onmouseout="hideTip(event, 'fs1', 110)" onmouseover="showTip(event, 'fs1', 110)" class="id">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs38', 111)" onmouseover="showTip(event, 'fs38', 111)" class="id">Buffers</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs39', 112)" onmouseover="showTip(event, 'fs39', 112)" class="id">SpanAction</span><span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs21', 113)" onmouseover="showTip(event, 'fs21', 113)" class="id">chars</span> <span onmouseout="hideTip(event, 'fs34', 114)" onmouseover="showTip(event, 'fs34', 114)" class="id">ctx</span> <span class="k">-&gt;</span> 
            <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs40', 115)" onmouseover="showTip(event, 'fs40', 115)" class="mv">state</span> <span class="o">=</span> <span class="pn">{</span> <span class="mv">Position</span> <span class="o">=</span> <span class="n">0</span><span class="pn">;</span> <span class="id">Ctx</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 116)" onmouseover="showTip(event, 'fs34', 116)" class="id">ctx</span> <span class="pn">}</span>
            <span onmouseout="hideTip(event, 'fs35', 117)" onmouseover="showTip(event, 'fs35', 117)" class="fn">action</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs15', 118)" onmouseover="showTip(event, 'fs15', 118)" class="id">Invoke</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs21', 119)" onmouseover="showTip(event, 'fs21', 119)" class="id">chars</span><span class="pn">,</span> <span class="o">&amp;</span><span onmouseout="hideTip(event, 'fs40', 120)" onmouseover="showTip(event, 'fs40', 120)" class="mv">state</span><span class="pn">)</span><span class="pn">)</span><span class="pn">)</span>
            
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 121)" onmouseover="showTip(event, 'fs41', 121)" class="id">s</span> <span class="o">=</span> 
    <span onmouseout="hideTip(event, 'fs32', 122)" onmouseover="showTip(event, 'fs32', 122)" class="fn">run</span> <span class="n">5</span> <span class="pn">[|</span> <span class="s">&quot;ab&quot;</span><span class="pn">;</span> <span class="s">&quot;cd&quot;</span><span class="pn">;</span> <span class="s">&quot;e&quot;</span> <span class="pn">|]</span>
        <span class="pn">(</span><span onmouseout="hideTip(event, 'fs31', 123)" onmouseover="showTip(event, 'fs31', 123)" class="k">stringAlloc</span> <span class="pn">{</span>
            <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs42', 124)" onmouseover="showTip(event, 'fs42', 124)" class="id">xs</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs13', 125)" onmouseover="showTip(event, 'fs13', 125)" class="fn">getContext</span><span class="pn">(</span><span class="pn">)</span>
            <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs42', 126)" onmouseover="showTip(event, 'fs42', 126)" class="id">xs</span><span class="pn">[</span><span class="n">0</span><span class="pn">]</span>
            <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs42', 127)" onmouseover="showTip(event, 'fs42', 127)" class="id">xs</span><span class="pn">[</span><span class="n">1</span><span class="pn">]</span>
            <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs42', 128)" onmouseover="showTip(event, 'fs42', 128)" class="id">xs</span><span class="pn">[</span><span class="n">2</span><span class="pn">]</span>
        <span class="pn">}</span><span class="pn">)</span>
    
<span onmouseout="hideTip(event, 'fs43', 129)" onmouseover="showTip(event, 'fs43', 129)" class="rt">Console</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs44', 130)" onmouseover="showTip(event, 'fs44', 130)" class="id">WriteLine</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs41', 131)" onmouseover="showTip(event, 'fs41', 131)" class="id">s</span><span class="pn">)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">type SpanReader&lt;&#39;T,&#39;TState,&#39;TRet&gt; =<br />&#160;&#160;delegate of Span&lt;&#39;T&gt; * byref&lt;&#39;TState&gt; -&gt; &#39;TRet</div>
<div class="tip" id="fs3">type byref&lt;&#39;T&gt; = (# &quot;&lt;Common IL Type Omitted&gt;&quot; #)</div>
<div class="tip" id="fs4">Multiple items<br />type StructAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; StructAttribute<br /><br />--------------------<br />new : unit -&gt; StructAttribute</div>
<div class="tip" id="fs5">Multiple items<br />type NoComparisonAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; NoComparisonAttribute<br /><br />--------------------<br />new : unit -&gt; NoComparisonAttribute</div>
<div class="tip" id="fs6">Multiple items<br />type NoEqualityAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; NoEqualityAttribute<br /><br />--------------------<br />new : unit -&gt; NoEqualityAttribute</div>
<div class="tip" id="fs7">[&lt;Struct&gt;]<br />type StringAllocatorState&lt;&#39;TCtx&gt; =<br />&#160;&#160;{ mutable Position: int<br />&#160;&#160;&#160;&#160;Ctx: &#39;TCtx }</div>
<div class="tip" id="fs8">StringAllocatorState.Position: int</div>
<div class="tip" id="fs9">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />--------------------<br />type int = int32<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int</div>
<div class="tip" id="fs10">StringAllocatorState.Ctx: &#39;TCtx</div>
<div class="tip" id="fs11">type StringAllocatorReader&lt;&#39;TCtx,&#39;TRet&gt; = SpanReader&lt;char,StringAllocatorState&lt;&#39;TCtx&gt;,&#39;TRet&gt;</div>
<div class="tip" id="fs12">Multiple items<br />val char : value:&#39;T -&gt; char (requires member op_Explicit)<br /><br />--------------------<br />type char = Char</div>
<div class="tip" id="fs13">val getContext : unit -&gt; StringAllocatorReader&lt;&#39;a,&#39;a&gt;</div>
<div class="tip" id="fs14">val state : byref&lt;StringAllocatorState&lt;&#39;a&gt;&gt;</div>
<div class="tip" id="fs15"></div>
<div class="tip" id="fs16">Multiple items<br />type StringAllocator =<br />&#160;&#160;new : unit -&gt; StringAllocator<br />&#160;&#160;member Bind : reader:StringAllocatorReader&lt;&#39;TCtx,&#39;TRet&gt; * cont:(&#39;TRet -&gt; StringAllocatorReader&lt;&#39;TCtx,unit&gt;) -&gt; StringAllocatorReader&lt;&#39;TCtx,unit&gt;<br />&#160;&#160;member Combine : f:StringAllocatorReader&lt;&#39;TCtx,unit&gt; * g:StringAllocatorReader&lt;&#39;TCtx,unit&gt; -&gt; StringAllocatorReader&lt;&#39;TCtx,unit&gt;<br />&#160;&#160;member Delay : f:(unit -&gt; StringAllocatorReader&lt;&#39;TCtx,unit&gt;) -&gt; StringAllocatorReader&lt;&#39;TCtx,unit&gt;<br />&#160;&#160;member Yield : ch:char -&gt; StringAllocatorReader&lt;&#39;b,unit&gt;<br />&#160;&#160;member Yield : str:string -&gt; StringAllocatorReader&lt;&#39;a,unit&gt;<br />&#160;&#160;member Zero : unit -&gt; StringAllocatorReader&lt;&#39;c,unit&gt;<br /><br />--------------------<br />new : unit -&gt; StringAllocator</div>
<div class="tip" id="fs17">val this : StringAllocator</div>
<div class="tip" id="fs18">val f : StringAllocatorReader&lt;&#39;TCtx,unit&gt;</div>
<div class="tip" id="fs19">type unit = Unit</div>
<div class="tip" id="fs20">val g : StringAllocatorReader&lt;&#39;TCtx,unit&gt;</div>
<div class="tip" id="fs21">val chars : Span&lt;char&gt;</div>
<div class="tip" id="fs22">val state : byref&lt;StringAllocatorState&lt;&#39;TCtx&gt;&gt;</div>
<div class="tip" id="fs23">val f : (unit -&gt; StringAllocatorReader&lt;&#39;TCtx,unit&gt;)</div>
<div class="tip" id="fs24">val reader : StringAllocatorReader&lt;&#39;TCtx,&#39;TRet&gt;</div>
<div class="tip" id="fs25">val cont : (&#39;TRet -&gt; StringAllocatorReader&lt;&#39;TCtx,unit&gt;)</div>
<div class="tip" id="fs26">val ret : &#39;TRet</div>
<div class="tip" id="fs27">val ch : char</div>
<div class="tip" id="fs28">val state : byref&lt;StringAllocatorState&lt;&#39;b&gt;&gt;</div>
<div class="tip" id="fs29">val str : string</div>
<div class="tip" id="fs30">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />--------------------<br />type string = String</div>
<div class="tip" id="fs31">val stringAlloc : StringAllocator</div>
<div class="tip" id="fs32">val run : length:int -&gt; ctx:&#39;TCtx -&gt; action:StringAllocatorReader&lt;&#39;TCtx,unit&gt; -&gt; string</div>
<div class="tip" id="fs33">val length : int</div>
<div class="tip" id="fs34">val ctx : &#39;TCtx</div>
<div class="tip" id="fs35">val action : StringAllocatorReader&lt;&#39;TCtx,unit&gt;</div>
<div class="tip" id="fs36">Multiple items<br />type String =<br />&#160;&#160;new : value:char[] -&gt; string + 8 overloads<br />&#160;&#160;member Chars : int -&gt; char<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareTo : value:obj -&gt; int + 1 overload<br />&#160;&#160;member Contains : value:string -&gt; bool + 3 overloads<br />&#160;&#160;member CopyTo : sourceIndex:int * destination:char[] * destinationIndex:int * count:int -&gt; unit<br />&#160;&#160;member EndsWith : value:string -&gt; bool + 3 overloads<br />&#160;&#160;member EnumerateRunes : unit -&gt; StringRuneEnumerator<br />&#160;&#160;member Equals : obj:obj -&gt; bool + 2 overloads<br />&#160;&#160;member GetEnumerator : unit -&gt; CharEnumerator<br />&#160;&#160;...<br /><br />--------------------<br />String(value: char []) : String<br />String(value: nativeptr&lt;char&gt;) : String<br />String(value: nativeptr&lt;sbyte&gt;) : String<br />String(value: ReadOnlySpan&lt;char&gt;) : String<br />String(c: char, count: int) : String<br />String(value: char [], startIndex: int, length: int) : String<br />String(value: nativeptr&lt;char&gt;, startIndex: int, length: int) : String<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int) : String<br />String(value: nativeptr&lt;sbyte&gt;, startIndex: int, length: int, enc: Text.Encoding) : String</div>
<div class="tip" id="fs37">String.Create&lt;&#39;TState&gt;(length: int, state: &#39;TState, action: Buffers.SpanAction&lt;char,&#39;TState&gt;) : string</div>
<div class="tip" id="fs38">namespace System.Buffers</div>
<div class="tip" id="fs39">type SpanAction&lt;&#39;T,&#39;TArg&gt; =<br />&#160;&#160;delegate of Span&lt;&#39;T&gt; * &#39;TArg -&gt; unit</div>
<div class="tip" id="fs40">[&lt;Struct&gt;]<br />val mutable state : StringAllocatorState&lt;&#39;TCtx&gt;</div>
<div class="tip" id="fs41">val s : string</div>
<div class="tip" id="fs42">val xs : string []</div>
<div class="tip" id="fs43">type Console =<br />&#160;&#160;static member BackgroundColor : ConsoleColor with get, set<br />&#160;&#160;static member Beep : unit -&gt; unit + 1 overload<br />&#160;&#160;static member BufferHeight : int with get, set<br />&#160;&#160;static member BufferWidth : int with get, set<br />&#160;&#160;static member CapsLock : bool<br />&#160;&#160;static member Clear : unit -&gt; unit<br />&#160;&#160;static member CursorLeft : int with get, set<br />&#160;&#160;static member CursorSize : int with get, set<br />&#160;&#160;static member CursorTop : int with get, set<br />&#160;&#160;static member CursorVisible : bool with get, set<br />&#160;&#160;...</div>
<div class="tip" id="fs44">Console.WriteLine() : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: string) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: obj) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: uint64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: int64) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: uint32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: int) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: float32) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: float) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />Console.WriteLine(value: decimal) : unit<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>

