<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
<span class="l">144: </span>
<span class="l">145: </span>
<span class="l">146: </span>
<span class="l">147: </span>
<span class="l">148: </span>
<span class="l">149: </span>
<span class="l">150: </span>
<span class="l">151: </span>
<span class="l">152: </span>
<span class="l">153: </span>
<span class="l">154: </span>
<span class="l">155: </span>
<span class="l">156: </span>
<span class="l">157: </span>
<span class="l">158: </span>
<span class="l">159: </span>
<span class="l">160: </span>
<span class="l">161: </span>
<span class="l">162: </span>
<span class="l">163: </span>
<span class="l">164: </span>
<span class="l">165: </span>
<span class="l">166: </span>
<span class="l">167: </span>
<span class="l">168: </span>
<span class="l">169: </span>
<span class="l">170: </span>
<span class="l">171: </span>
<span class="l">172: </span>
<span class="l">173: </span>
<span class="l">174: </span>
<span class="l">175: </span>
<span class="l">176: </span>
<span class="l">177: </span>
<span class="l">178: </span>
<span class="l">179: </span>
<span class="l">180: </span>
<span class="l">181: </span>
<span class="l">182: </span>
<span class="l">183: </span>
<span class="l">184: </span>
<span class="l">185: </span>
<span class="l">186: </span>
<span class="l">187: </span>
<span class="l">188: </span>
<span class="l">189: </span>
<span class="l">190: </span>
<span class="l">191: </span>
<span class="l">192: </span>
<span class="l">193: </span>
<span class="l">194: </span>
<span class="l">195: </span>
<span class="l">196: </span>
<span class="l">197: </span>
<span class="l">198: </span>
<span class="l">199: </span>
<span class="l">200: </span>
<span class="l">201: </span>
<span class="l">202: </span>
<span class="l">203: </span>
<span class="l">204: </span>
<span class="l">205: </span>
<span class="l">206: </span>
<span class="l">207: </span>
<span class="l">208: </span>
<span class="l">209: </span>
<span class="l">210: </span>
<span class="l">211: </span>
<span class="l">212: </span>
<span class="l">213: </span>
<span class="l">214: </span>
<span class="l">215: </span>
<span class="l">216: </span>
<span class="l">217: </span>
<span class="l">218: </span>
<span class="l">219: </span>
<span class="l">220: </span>
<span class="l">221: </span>
<span class="l">222: </span>
<span class="l">223: </span>
<span class="l">224: </span>
<span class="l">225: </span>
<span class="l">226: </span>
<span class="l">227: </span>
<span class="l">228: </span>
<span class="l">229: </span>
<span class="l">230: </span>
<span class="l">231: </span>
<span class="l">232: </span>
<span class="l">233: </span>
<span class="l">234: </span>
<span class="l">235: </span>
<span class="l">236: </span>
<span class="l">237: </span>
<span class="l">238: </span>
<span class="l">239: </span>
<span class="l">240: </span>
<span class="l">241: </span>
<span class="l">242: </span>
<span class="l">243: </span>
<span class="l">244: </span>
<span class="l">245: </span>
<span class="l">246: </span>
<span class="l">247: </span>
<span class="l">248: </span>
<span class="l">249: </span>
<span class="l">250: </span>
<span class="l">251: </span>
<span class="l">252: </span>
<span class="l">253: </span>
<span class="l">254: </span>
<span class="l">255: </span>
<span class="l">256: </span>
<span class="l">257: </span>
<span class="l">258: </span>
<span class="l">259: </span>
<span class="l">260: </span>
<span class="l">261: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="id">System</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="rt">Interlocked</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="rt">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs3', 4)" onmouseover="showTip(event, 'fs3', 4)" class="id">Threading</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs4', 5)" onmouseover="showTip(event, 'fs4', 5)" class="id">Interlocked</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs5', 6)" onmouseover="showTip(event, 'fs5', 6)" class="d">Scope</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">&gt;</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs6', 7)" onmouseover="showTip(event, 'fs6', 7)" class="id">value</span><span class="pn">:</span><span class="ta">&#39;</span><span class="id">a</span><span class="pn">)</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs7', 8)" onmouseover="showTip(event, 'fs7', 8)" class="id">queue</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="rt">Collections</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="id">Generic</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="id">Queue</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs11', 12)" onmouseover="showTip(event, 'fs11', 12)" class="if">IDisposable</span><span class="pn">&gt;</span><span class="pn">(</span><span class="pn">)</span>
    <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs12', 13)" onmouseover="showTip(event, 'fs12', 13)" class="mv">closed</span> <span class="o">=</span> <span class="n">0</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs13', 14)" onmouseover="showTip(event, 'fs13', 14)" class="fn">close</span> <span class="pn">(</span><span class="pn">)</span> <span class="o">=</span> 
        <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs14', 15)" onmouseover="showTip(event, 'fs14', 15)" class="mv">exnList</span> <span class="o">=</span> <span class="pn">[</span><span class="pn">]</span> <span class="c">// where we collect errors while inner objects are being disposed</span>
        <span class="k">for</span> <span onmouseout="hideTip(event, 'fs15', 16)" onmouseover="showTip(event, 'fs15', 16)" class="id">i</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fs7', 17)" onmouseover="showTip(event, 'fs7', 17)" class="id">queue</span> <span class="k">do</span>
            <span class="k">try</span>
                <span onmouseout="hideTip(event, 'fs15', 18)" onmouseover="showTip(event, 'fs15', 18)" class="fn">i</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 19)" onmouseover="showTip(event, 'fs16', 19)" class="id">Dispose</span><span class="pn">(</span><span class="pn">)</span>
            <span class="k">with</span> 
                <span onmouseout="hideTip(event, 'fs17', 20)" onmouseover="showTip(event, 'fs17', 20)" class="id">exn</span> <span class="k">-&gt;</span>  <span onmouseout="hideTip(event, 'fs14', 21)" onmouseover="showTip(event, 'fs14', 21)" class="mv">exnList</span> <span class="k">&lt;-</span> <span onmouseout="hideTip(event, 'fs17', 22)" onmouseover="showTip(event, 'fs17', 22)" class="id">exn</span> <span class="uc">::</span> <span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="mv">exnList</span> 
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs14', 24)" onmouseover="showTip(event, 'fs14', 24)" class="mv">exnList</span> <span class="k">with</span>
        <span class="pn">|</span> <span class="pn">[</span><span class="pn">]</span> <span class="k">-&gt;</span> <span class="pn">(</span><span class="pn">)</span>  <span class="c">// no errors occurred</span>
        <span class="pn">|</span> <span class="pn">[</span><span onmouseout="hideTip(event, 'fs17', 25)" onmouseover="showTip(event, 'fs17', 25)" class="id">exn</span><span class="pn">]</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs18', 26)" onmouseover="showTip(event, 'fs18', 26)" class="k">raise</span> <span onmouseout="hideTip(event, 'fs17', 27)" onmouseover="showTip(event, 'fs17', 27)" class="id">exn</span>
        <span class="pn">|</span> <span class="id">_</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs18', 28)" onmouseover="showTip(event, 'fs18', 28)" class="k">raise</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 29)" onmouseover="showTip(event, 'fs19', 29)" class="rt">AggregateException</span> <span onmouseout="hideTip(event, 'fs14', 30)" onmouseover="showTip(event, 'fs14', 30)" class="mv">exnList</span><span class="pn">)</span>  
    <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="prop">Value</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 31)" onmouseover="showTip(event, 'fs6', 31)" class="id">value</span>
    <span class="k">member</span> <span class="k">internal</span> <span class="id">_</span><span class="pn">.</span><span class="prop">InnerDisposables</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs7', 32)" onmouseover="showTip(event, 'fs7', 32)" class="id">queue</span>
    <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">Close</span> <span class="pn">(</span><span class="pn">)</span> <span class="o">=</span>        
        <span class="k">match</span> <span onmouseout="hideTip(event, 'fs2', 33)" onmouseover="showTip(event, 'fs2', 33)" class="rt">Interlocked</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs20', 34)" onmouseover="showTip(event, 'fs20', 34)" class="id">CompareExchange</span><span class="pn">(</span><span class="o">&amp;</span><span onmouseout="hideTip(event, 'fs12', 35)" onmouseover="showTip(event, 'fs12', 35)" class="mv">closed</span><span class="pn">,</span><span class="n">1</span><span class="pn">,</span><span class="n">0</span><span class="pn">)</span> <span class="k">with</span>
        <span class="pn">|</span> <span class="n">0</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs13', 36)" onmouseover="showTip(event, 'fs13', 36)" class="fn">close</span> <span class="pn">(</span><span class="pn">)</span> <span class="c">// will run at most once</span>
        <span class="pn">|</span> <span class="id">_</span> <span class="k">-&gt;</span> <span class="pn">(</span><span class="pn">)</span>

 

    <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs11', 37)" onmouseover="showTip(event, 'fs11', 37)" class="if">IDisposable</span> <span class="k">with</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs21', 38)" onmouseover="showTip(event, 'fs21', 38)" class="id">this</span><span class="pn">.</span><span class="fn">Dispose</span> <span class="pn">(</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 39)" onmouseover="showTip(event, 'fs21', 39)" class="fn">this</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 40)" onmouseover="showTip(event, 'fs16', 40)" class="id">Close</span><span class="pn">(</span><span class="pn">)</span>

<span class="k">module</span> <span class="m">UnsafeInternals</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 41)" onmouseover="showTip(event, 'fs22', 41)" class="fn">getInnerDisposables</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs23', 42)" onmouseover="showTip(event, 'fs23', 42)" class="id">x</span><span class="pn">:</span><span onmouseout="hideTip(event, 'fs5', 43)" onmouseover="showTip(event, 'fs5', 43)" class="d">Scope</span><span class="pn">&lt;</span><span class="id">_</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 44)" onmouseover="showTip(event, 'fs23', 44)" class="id">x</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 45)" onmouseover="showTip(event, 'fs16', 45)" class="id">InnerDisposables</span>
    <span class="c">(*</span>
<span class="c">        may be useful to provide builder extensions.</span>
<span class="c">        Note that there is unique instance of Scope inside workflow that is created by </span>
<span class="c">        Return function. It is not directly accessible from inside workflow. Other builder functions maintain its mutable state.</span>
<span class="c">        And they all run eagerly in one thread right now. However, builder extension method may access that instance. Thus, if anyone wants to pass</span>
<span class="c">        Scope instance between threads he must make a byvalue copy of it.</span>
<span class="c">    *)</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs24', 46)" onmouseover="showTip(event, 'fs24', 46)" class="rt">ScopeBuilder</span> <span class="pn">(</span><span class="pn">)</span> <span class="o">=</span>
    <span class="k">member</span> <span class="id">_</span><span class="pn">.</span> <span class="fn">Return</span> <span onmouseout="hideTip(event, 'fs25', 47)" onmouseover="showTip(event, 'fs25', 47)" class="id">x</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs5', 48)" onmouseover="showTip(event, 'fs5', 48)" class="d">Scope</span><span class="pn">&lt;</span><span class="id">_</span><span class="pn">&gt;</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs25', 49)" onmouseover="showTip(event, 'fs25', 49)" class="id">x</span><span class="pn">)</span>
        
    <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">Using</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs26', 50)" onmouseover="showTip(event, 'fs26', 50)" class="id">res</span> <span class="pn">,</span><span onmouseout="hideTip(event, 'fs27', 51)" onmouseover="showTip(event, 'fs27', 51)" class="fn">body</span><span class="pn">)</span> <span class="o">=</span>
        <span class="k">try</span>
            <span class="k">let</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs28', 52)" onmouseover="showTip(event, 'fs28', 52)" class="id">x</span><span class="pn">:</span><span onmouseout="hideTip(event, 'fs5', 53)" onmouseover="showTip(event, 'fs5', 53)" class="d">Scope</span><span class="pn">&lt;</span><span class="id">_</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs27', 54)" onmouseover="showTip(event, 'fs27', 54)" class="fn">body</span> <span onmouseout="hideTip(event, 'fs26', 55)" onmouseover="showTip(event, 'fs26', 55)" class="id">res</span>
            <span onmouseout="hideTip(event, 'fs28', 56)" onmouseover="showTip(event, 'fs28', 56)" class="fn">x</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 57)" onmouseover="showTip(event, 'fs16', 57)" class="id">InnerDisposables</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 58)" onmouseover="showTip(event, 'fs16', 58)" class="id">Enqueue</span> <span onmouseout="hideTip(event, 'fs26', 59)" onmouseover="showTip(event, 'fs26', 59)" class="id">res</span>
            <span onmouseout="hideTip(event, 'fs28', 60)" onmouseover="showTip(event, 'fs28', 60)" class="id">x</span>
        <span class="k">with</span>
            <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs17', 61)" onmouseover="showTip(event, 'fs17', 61)" class="id">exn</span> <span class="k">-&gt;</span> 
                <span class="k">try</span>
                    <span onmouseout="hideTip(event, 'fs26', 62)" onmouseover="showTip(event, 'fs26', 62)" class="fn">res</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 63)" onmouseover="showTip(event, 'fs16', 63)" class="id">Dispose</span><span class="pn">(</span><span class="pn">)</span>
                <span class="k">with</span>
                    <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs29', 64)" onmouseover="showTip(event, 'fs29', 64)" class="id">exn1</span> <span class="k">-&gt;</span>
                        <span onmouseout="hideTip(event, 'fs18', 65)" onmouseover="showTip(event, 'fs18', 65)" class="k">raise</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs19', 66)" onmouseover="showTip(event, 'fs19', 66)" class="rt">AggregateException</span> <span class="pn">[|</span><span onmouseout="hideTip(event, 'fs17', 67)" onmouseover="showTip(event, 'fs17', 67)" class="id">exn</span> <span class="pn">;</span> <span onmouseout="hideTip(event, 'fs29', 68)" onmouseover="showTip(event, 'fs29', 68)" class="id">exn1</span><span class="pn">|]</span><span class="pn">)</span>
                <span onmouseout="hideTip(event, 'fs30', 69)" onmouseover="showTip(event, 'fs30', 69)" class="k">reraise</span><span class="pn">(</span><span class="pn">)</span>           

    
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs31', 70)" onmouseover="showTip(event, 'fs31', 70)" class="id">this</span><span class="pn">.</span><span class="fn">Bind</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs32', 71)" onmouseover="showTip(event, 'fs32', 71)" class="id">scope</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs33', 72)" onmouseover="showTip(event, 'fs33', 72)" class="fn">body</span><span class="pn">)</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs34', 73)" onmouseover="showTip(event, 'fs34', 73)" class="fn">outerbody</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs35', 74)" onmouseover="showTip(event, 'fs35', 74)" class="id">scope&#39;</span> <span class="pn">:</span> <span onmouseout="hideTip(event, 'fs5', 75)" onmouseover="showTip(event, 'fs5', 75)" class="d">Scope</span><span class="pn">&lt;</span><span class="id">_</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs33', 76)" onmouseover="showTip(event, 'fs33', 76)" class="fn">body</span> <span onmouseout="hideTip(event, 'fs35', 77)" onmouseover="showTip(event, 'fs35', 77)" class="id">scope&#39;</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 78)" onmouseover="showTip(event, 'fs16', 78)" class="id">Value</span>
        <span onmouseout="hideTip(event, 'fs31', 79)" onmouseover="showTip(event, 'fs31', 79)" class="fn">this</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 80)" onmouseover="showTip(event, 'fs16', 80)" class="id">Using</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs32', 81)" onmouseover="showTip(event, 'fs32', 81)" class="id">scope</span><span class="pn">,</span><span onmouseout="hideTip(event, 'fs34', 82)" onmouseover="showTip(event, 'fs34', 82)" class="fn">outerbody</span><span class="pn">)</span>
        <span class="c">(*</span>
<span class="c">            thus, let! x = {expr}</span>
<span class="c">             -- is equivalent to --</span>
<span class="c">            use scope = {expr}</span>
<span class="c">                    // outerbody starts here</span>
<span class="c">            let x = scope.Value</span>
<span class="c">                    // body starts here</span>
<span class="c">        *)</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs31', 83)" onmouseover="showTip(event, 'fs31', 83)" class="id">this</span><span class="pn">.</span><span class="fn">ReturnFrom</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs36', 84)" onmouseover="showTip(event, 'fs36', 84)" class="id">anotherscope</span><span class="pn">:</span><span onmouseout="hideTip(event, 'fs5', 85)" onmouseover="showTip(event, 'fs5', 85)" class="d">Scope</span><span class="pn">&lt;</span><span class="id">_</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs31', 86)" onmouseover="showTip(event, 'fs31', 86)" class="fn">this</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 87)" onmouseover="showTip(event, 'fs16', 87)" class="id">Using</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs36', 88)" onmouseover="showTip(event, 'fs36', 88)" class="id">anotherscope</span><span class="pn">,</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs37', 89)" onmouseover="showTip(event, 'fs37', 89)" class="id">thatscope</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs31', 90)" onmouseover="showTip(event, 'fs31', 90)" class="fn">this</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 91)" onmouseover="showTip(event, 'fs16', 91)" class="id">Return</span> <span onmouseout="hideTip(event, 'fs37', 92)" onmouseover="showTip(event, 'fs37', 92)" class="id">thatscope</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 93)" onmouseover="showTip(event, 'fs16', 93)" class="id">Value</span><span class="pn">)</span>
        <span class="c">(*</span>
<span class="c">            created current scope using value of another scope </span>
<span class="c">            bound another scope to current scope as disposable</span>
<span class="c">        *)</span>


       
<span class="pn">[&lt;</span><span onmouseout="hideTip(event, 'fs38', 94)" onmouseover="showTip(event, 'fs38', 94)" class="rt">AutoOpen</span><span class="pn">&gt;]</span>
<span class="k">module</span> <span class="m">ScopeBuilderInstance</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs39', 95)" onmouseover="showTip(event, 'fs39', 95)" class="id">scope</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 96)" onmouseover="showTip(event, 'fs24', 96)" class="rt">ScopeBuilder</span> <span class="pn">(</span><span class="pn">)</span> 

<span class="c">// example</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 97)" onmouseover="showTip(event, 'fs1', 97)" class="id">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs40', 98)" onmouseover="showTip(event, 'fs40', 98)" class="id">IO</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs41', 99)" onmouseover="showTip(event, 'fs41', 99)" class="id">somescope</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs39', 100)" onmouseover="showTip(event, 'fs39', 100)" class="k">scope</span> <span class="pn">{</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs42', 101)" onmouseover="showTip(event, 'fs42', 101)" class="id">bytes</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs1', 102)" onmouseover="showTip(event, 'fs1', 102)" class="rt">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs43', 103)" onmouseover="showTip(event, 'fs43', 103)" class="id">Text</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs44', 104)" onmouseover="showTip(event, 'fs44', 104)" class="id">UTF8Encoding</span><span class="pn">(</span><span class="pn">)</span><span class="pn">.</span><span class="id">GetBytes</span> <span class="s">&quot;this</span>
<span class="s">is</span>
<span class="s">multiline</span>
<span class="s">text&quot;</span>
        <span class="k">use</span> <span onmouseout="hideTip(event, 'fs45', 105)" onmouseover="showTip(event, 'fs45', 105)" class="id">ms</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs46', 106)" onmouseover="showTip(event, 'fs46', 106)" class="d">MemoryStream</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs42', 107)" onmouseover="showTip(event, 'fs42', 107)" class="id">bytes</span><span class="pn">)</span> 
        <span class="k">use</span> <span onmouseout="hideTip(event, 'fs47', 108)" onmouseover="showTip(event, 'fs47', 108)" class="id">sr</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs48', 109)" onmouseover="showTip(event, 'fs48', 109)" class="d">StreamReader</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs45', 110)" onmouseover="showTip(event, 'fs45', 110)" class="id">ms</span><span class="pn">)</span>
        <span class="k">return</span> 
            <span class="pn">{|</span>
                <span class="id">Next</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs47', 111)" onmouseover="showTip(event, 'fs47', 111)" class="fn">sr</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 112)" onmouseover="showTip(event, 'fs16', 112)" class="id">ReadLine</span>
                <span onmouseout="hideTip(event, 'fs46', 113)" onmouseover="showTip(event, 'fs46', 113)" class="id">MemoryStream</span> <span class="o">=</span>  <span onmouseout="hideTip(event, 'fs45', 114)" onmouseover="showTip(event, 'fs45', 114)" class="id">ms</span>
            <span class="pn">|}</span>

    <span class="pn">}</span>

<span onmouseout="hideTip(event, 'fs41', 115)" onmouseover="showTip(event, 'fs41', 115)" class="id">somescope</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 116)" onmouseover="showTip(event, 'fs16', 116)" class="id">Value</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 117)" onmouseover="showTip(event, 'fs16', 117)" class="id">Next</span><span class="pn">(</span><span class="pn">)</span>  <span class="c">// reads text line by line</span>

<span onmouseout="hideTip(event, 'fs41', 118)" onmouseover="showTip(event, 'fs41', 118)" class="id">somescope</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 119)" onmouseover="showTip(event, 'fs16', 119)" class="id">Value</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 120)" onmouseover="showTip(event, 'fs16', 120)" class="id">MemoryStream</span> <span class="c">// view state of memory stream in fsharp interactive</span>

<span onmouseout="hideTip(event, 'fs41', 121)" onmouseover="showTip(event, 'fs41', 121)" class="fn">somescope</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 122)" onmouseover="showTip(event, 'fs16', 122)" class="id">Close</span><span class="pn">(</span><span class="pn">)</span> <span class="c">// try execute above commands now</span>

<span class="c">// demonstrate what happens on error and also disposing order</span>
<span class="c">// define 2 helper functions</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs49', 123)" onmouseover="showTip(event, 'fs49', 123)" class="fn">useful</span> <span onmouseout="hideTip(event, 'fs50', 124)" onmouseover="showTip(event, 'fs50', 124)" class="id">name</span> <span class="o">=</span>
    <span class="pn">{</span>
        <span class="k">new</span> <span onmouseout="hideTip(event, 'fs11', 125)" onmouseover="showTip(event, 'fs11', 125)" class="if">IDisposable</span> <span class="k">with</span>
            <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">Dispose</span> <span class="pn">(</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs51', 126)" onmouseover="showTip(event, 'fs51', 126)" class="fn">printfn</span> <span class="s">&quot;disposed </span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs50', 127)" onmouseover="showTip(event, 'fs50', 127)" class="id">name</span>            
    <span class="pn">}</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs52', 128)" onmouseover="showTip(event, 'fs52', 128)" class="fn">useless</span> <span onmouseout="hideTip(event, 'fs50', 129)" onmouseover="showTip(event, 'fs50', 129)" class="id">name</span> <span class="o">=</span>
    <span class="pn">{</span>
        <span class="k">new</span> <span onmouseout="hideTip(event, 'fs11', 130)" onmouseover="showTip(event, 'fs11', 130)" class="if">IDisposable</span> <span class="k">with</span>
            <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">Dispose</span> <span class="pn">(</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs53', 131)" onmouseover="showTip(event, 'fs53', 131)" class="fn">failwithf</span> <span class="s">&quot;failed to dispose </span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs50', 132)" onmouseover="showTip(event, 'fs50', 132)" class="id">name</span>
    <span class="pn">}</span>

<span class="c">// demo : order  of disposing</span>
<span onmouseout="hideTip(event, 'fs39', 133)" onmouseover="showTip(event, 'fs39', 133)" class="k">scope</span> <span class="pn">{</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 134)" onmouseover="showTip(event, 'fs49', 134)" class="fn">useful</span> <span class="s">&quot;1&quot;</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 135)" onmouseover="showTip(event, 'fs49', 135)" class="fn">useful</span> <span class="s">&quot;2&quot;</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 136)" onmouseover="showTip(event, 'fs49', 136)" class="fn">useful</span> <span class="s">&quot;3&quot;</span>
    <span class="k">return</span> <span class="n">4</span>
<span class="pn">}</span>  <span class="o">|&gt;</span> <span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs54', 137)" onmouseover="showTip(event, 'fs54', 137)" class="id">s</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs54', 138)" onmouseover="showTip(event, 'fs54', 138)" class="fn">s</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 139)" onmouseover="showTip(event, 'fs16', 139)" class="id">Close</span><span class="pn">(</span><span class="pn">)</span> <span class="pn">;</span> <span onmouseout="hideTip(event, 'fs54', 140)" onmouseover="showTip(event, 'fs54', 140)" class="fn">s</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 141)" onmouseover="showTip(event, 'fs16', 141)" class="id">Close</span><span class="pn">(</span><span class="c">(*closing twice takes no effect*)</span><span class="pn">)</span><span class="pn">)</span>

<span class="c">// composite scope</span>
<span onmouseout="hideTip(event, 'fs39', 142)" onmouseover="showTip(event, 'fs39', 142)" class="k">scope</span> <span class="pn">{</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 143)" onmouseover="showTip(event, 'fs49', 143)" class="fn">useful</span> <span class="s">&quot;1&quot;</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 144)" onmouseover="showTip(event, 'fs49', 144)" class="fn">useful</span> <span class="s">&quot;2&quot;</span>
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs55', 145)" onmouseover="showTip(event, 'fs55', 145)" class="id">v</span> <span class="o">=</span> 
        <span onmouseout="hideTip(event, 'fs39', 146)" onmouseover="showTip(event, 'fs39', 146)" class="k">scope</span> <span class="pn">{</span>
            <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 147)" onmouseover="showTip(event, 'fs49', 147)" class="fn">useful</span> <span class="s">&quot;4&quot;</span>
            <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 148)" onmouseover="showTip(event, 'fs49', 148)" class="fn">useful</span> <span class="s">&quot;5&quot;</span>
            <span class="k">return</span> <span class="n">10</span>
        <span class="pn">}</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 149)" onmouseover="showTip(event, 'fs49', 149)" class="fn">useful</span> <span class="s">&quot;3&quot;</span>
    <span class="k">return</span> <span onmouseout="hideTip(event, 'fs55', 150)" onmouseover="showTip(event, 'fs55', 150)" class="id">v</span> <span class="o">+</span> <span class="n">5</span>
<span class="pn">}</span>  <span class="o">|&gt;</span> <span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs54', 151)" onmouseover="showTip(event, 'fs54', 151)" class="id">s</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs51', 152)" onmouseover="showTip(event, 'fs51', 152)" class="fn">printfn</span> <span class="s">&quot;value is </span><span class="pf">%i</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs54', 153)" onmouseover="showTip(event, 'fs54', 153)" class="id">s</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 154)" onmouseover="showTip(event, 'fs16', 154)" class="id">Value</span> <span class="pn">;</span> <span onmouseout="hideTip(event, 'fs54', 155)" onmouseover="showTip(event, 'fs54', 155)" class="fn">s</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 156)" onmouseover="showTip(event, 'fs16', 156)" class="id">Close</span><span class="pn">(</span><span class="pn">)</span><span class="pn">)</span>


<span class="k">let</span> <span onmouseout="hideTip(event, 'fs56', 157)" onmouseover="showTip(event, 'fs56', 157)" class="id">sc1</span> <span class="o">=</span>
        <span onmouseout="hideTip(event, 'fs39', 158)" onmouseover="showTip(event, 'fs39', 158)" class="k">scope</span> <span class="pn">{</span>
            <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 159)" onmouseover="showTip(event, 'fs49', 159)" class="fn">useful</span> <span class="s">&quot;4&quot;</span>
            <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 160)" onmouseover="showTip(event, 'fs49', 160)" class="fn">useful</span> <span class="s">&quot;5&quot;</span>
            <span class="k">return</span> <span class="n">10</span>
        <span class="pn">}</span>
<span class="c">//sc1.Close()  // try to close sc1 before executing following statements      </span>
<span onmouseout="hideTip(event, 'fs39', 161)" onmouseover="showTip(event, 'fs39', 161)" class="k">scope</span> <span class="pn">{</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 162)" onmouseover="showTip(event, 'fs49', 162)" class="fn">useful</span> <span class="s">&quot;1&quot;</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 163)" onmouseover="showTip(event, 'fs49', 163)" class="fn">useful</span> <span class="s">&quot;2&quot;</span>
    <span class="k">return!</span> <span onmouseout="hideTip(event, 'fs56', 164)" onmouseover="showTip(event, 'fs56', 164)" class="id">sc1</span>
<span class="pn">}</span>  <span class="o">|&gt;</span> <span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs54', 165)" onmouseover="showTip(event, 'fs54', 165)" class="id">s</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs51', 166)" onmouseover="showTip(event, 'fs51', 166)" class="fn">printfn</span> <span class="s">&quot;value is </span><span class="pf">%i</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs54', 167)" onmouseover="showTip(event, 'fs54', 167)" class="id">s</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 168)" onmouseover="showTip(event, 'fs16', 168)" class="id">Value</span> <span class="pn">;</span> <span onmouseout="hideTip(event, 'fs54', 169)" onmouseover="showTip(event, 'fs54', 169)" class="fn">s</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 170)" onmouseover="showTip(event, 'fs16', 170)" class="id">Close</span><span class="pn">(</span><span class="pn">)</span><span class="pn">)</span>


<span class="k">let</span> <span onmouseout="hideTip(event, 'fs57', 171)" onmouseover="showTip(event, 'fs57', 171)" class="id">throwingscope</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs39', 172)" onmouseover="showTip(event, 'fs39', 172)" class="k">scope</span> <span class="pn">{</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 173)" onmouseover="showTip(event, 'fs49', 173)" class="fn">useful</span> <span class="s">&quot;1&quot;</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 174)" onmouseover="showTip(event, 'fs49', 174)" class="fn">useful</span> <span class="s">&quot;2&quot;</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs52', 175)" onmouseover="showTip(event, 'fs52', 175)" class="fn">useless</span> <span class="s">&quot;3&quot;</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 176)" onmouseover="showTip(event, 'fs49', 176)" class="fn">useful</span> <span class="s">&quot;4&quot;</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs52', 177)" onmouseover="showTip(event, 'fs52', 177)" class="fn">useless</span> <span class="s">&quot;5&quot;</span>
    <span class="k">return</span> <span class="pn">(</span><span class="pn">)</span>
    <span class="pn">}</span>

<span class="c">// now we shall close it</span>

<span class="k">try</span>
   <span onmouseout="hideTip(event, 'fs57', 178)" onmouseover="showTip(event, 'fs57', 178)" class="fn">throwingscope</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 179)" onmouseover="showTip(event, 'fs16', 179)" class="id">Close</span><span class="pn">(</span><span class="pn">)</span> 
<span class="k">with</span>
<span class="pn">|</span> <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs19', 180)" onmouseover="showTip(event, 'fs19', 180)" class="rt">AggregateException</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs58', 181)" onmouseover="showTip(event, 'fs58', 181)" class="id">agexn</span> <span class="k">-&gt;</span>
    <span onmouseout="hideTip(event, 'fs51', 182)" onmouseover="showTip(event, 'fs51', 182)" class="fn">printfn</span> <span class="s">&quot;AggregateException\n</span><span class="pf">%s</span><span class="s">&quot;</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs58', 183)" onmouseover="showTip(event, 'fs58', 183)" class="fn">agexn</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 184)" onmouseover="showTip(event, 'fs16', 184)" class="id">Flatten</span><span class="pn">(</span><span class="pn">)</span><span class="pn">.</span><span class="id">Message</span>
<span class="pn">|</span> <span onmouseout="hideTip(event, 'fs17', 185)" onmouseover="showTip(event, 'fs17', 185)" class="id">exn</span> <span class="k">-&gt;</span>
    <span onmouseout="hideTip(event, 'fs51', 186)" onmouseover="showTip(event, 'fs51', 186)" class="fn">printfn</span> <span class="s">&quot;just an exception\n </span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs17', 187)" onmouseover="showTip(event, 'fs17', 187)" class="id">exn</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 188)" onmouseover="showTip(event, 'fs16', 188)" class="id">Message</span>  

<span class="c">// try execute the same code outside computation expression </span>

<span class="k">try</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 189)" onmouseover="showTip(event, 'fs49', 189)" class="fn">useful</span> <span class="s">&quot;1&quot;</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 190)" onmouseover="showTip(event, 'fs49', 190)" class="fn">useful</span> <span class="s">&quot;2&quot;</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs52', 191)" onmouseover="showTip(event, 'fs52', 191)" class="fn">useless</span> <span class="s">&quot;3&quot;</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 192)" onmouseover="showTip(event, 'fs49', 192)" class="fn">useful</span> <span class="s">&quot;4&quot;</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs52', 193)" onmouseover="showTip(event, 'fs52', 193)" class="fn">useless</span> <span class="s">&quot;5&quot;</span> <span class="c">// exception is lost </span>
    <span class="pn">(</span><span class="pn">)</span>
<span class="k">with</span>
<span class="pn">|</span> <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs19', 194)" onmouseover="showTip(event, 'fs19', 194)" class="rt">AggregateException</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs58', 195)" onmouseover="showTip(event, 'fs58', 195)" class="id">agexn</span> <span class="k">-&gt;</span>
    <span onmouseout="hideTip(event, 'fs51', 196)" onmouseover="showTip(event, 'fs51', 196)" class="fn">printfn</span> <span class="s">&quot;AggregateException\n</span><span class="pf">%s</span><span class="s">&quot;</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs58', 197)" onmouseover="showTip(event, 'fs58', 197)" class="fn">agexn</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 198)" onmouseover="showTip(event, 'fs16', 198)" class="id">Flatten</span><span class="pn">(</span><span class="pn">)</span><span class="pn">.</span><span class="id">Message</span>
<span class="pn">|</span> <span onmouseout="hideTip(event, 'fs17', 199)" onmouseover="showTip(event, 'fs17', 199)" class="id">exn</span> <span class="k">-&gt;</span>
    <span onmouseout="hideTip(event, 'fs51', 200)" onmouseover="showTip(event, 'fs51', 200)" class="fn">printfn</span> <span class="s">&quot;just an exception\n </span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs17', 201)" onmouseover="showTip(event, 'fs17', 201)" class="id">exn</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 202)" onmouseover="showTip(event, 'fs16', 202)" class="id">Message</span> 

<span class="c">// when exception occurs when creating scope  </span>

<span class="k">try</span>    
    <span onmouseout="hideTip(event, 'fs39', 203)" onmouseover="showTip(event, 'fs39', 203)" class="k">scope</span> <span class="pn">{</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 204)" onmouseover="showTip(event, 'fs49', 204)" class="fn">useful</span> <span class="s">&quot;1&quot;</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 205)" onmouseover="showTip(event, 'fs49', 205)" class="fn">useful</span> <span class="s">&quot;2&quot;</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs52', 206)" onmouseover="showTip(event, 'fs52', 206)" class="fn">useless</span> <span class="s">&quot;3&quot;</span>
    <span onmouseout="hideTip(event, 'fs59', 207)" onmouseover="showTip(event, 'fs59', 207)" class="fn">failwith</span> <span class="s">&quot;error!!!&quot;</span>
    <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs49', 208)" onmouseover="showTip(event, 'fs49', 208)" class="fn">useful</span> <span class="s">&quot;4&quot;</span>
    <span class="k">return</span> <span class="pn">(</span><span class="pn">)</span>
    <span class="pn">}</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs60', 209)" onmouseover="showTip(event, 'fs60', 209)" class="fn">ignore</span>
<span class="k">with</span>
<span class="pn">|</span> <span class="o">:?</span> <span onmouseout="hideTip(event, 'fs19', 210)" onmouseover="showTip(event, 'fs19', 210)" class="rt">AggregateException</span> <span class="k">as</span> <span onmouseout="hideTip(event, 'fs58', 211)" onmouseover="showTip(event, 'fs58', 211)" class="id">agexn</span> <span class="k">-&gt;</span>
    <span onmouseout="hideTip(event, 'fs51', 212)" onmouseover="showTip(event, 'fs51', 212)" class="fn">printfn</span> <span class="s">&quot;AggregateException\n</span><span class="pf">%s</span><span class="s">&quot;</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs58', 213)" onmouseover="showTip(event, 'fs58', 213)" class="fn">agexn</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 214)" onmouseover="showTip(event, 'fs16', 214)" class="id">Flatten</span><span class="pn">(</span><span class="pn">)</span><span class="pn">.</span><span class="id">Message</span>
<span class="pn">|</span> <span onmouseout="hideTip(event, 'fs17', 215)" onmouseover="showTip(event, 'fs17', 215)" class="id">exn</span> <span class="k">-&gt;</span>
    <span onmouseout="hideTip(event, 'fs51', 216)" onmouseover="showTip(event, 'fs51', 216)" class="fn">printfn</span> <span class="s">&quot;just an exception\n </span><span class="pf">%s</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs17', 217)" onmouseover="showTip(event, 'fs17', 217)" class="id">exn</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 218)" onmouseover="showTip(event, 'fs16', 218)" class="id">Message</span>  

<span class="c">(*---------some tricks we can use with scopes--------*)</span>

<span class="c">// preparation 1 : helper type</span>
<span class="c">// we&#39;ll use it to construct guarded methods</span>
<span class="k">type</span> <span onmouseout="hideTip(event, 'fs61', 219)" onmouseover="showTip(event, 'fs61', 219)" class="d">Disposable</span> <span class="pn">(</span><span class="o">?</span><span onmouseout="hideTip(event, 'fs62', 220)" onmouseover="showTip(event, 'fs62', 220)" class="id">name</span><span class="pn">)</span> <span class="o">=</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs63', 221)" onmouseover="showTip(event, 'fs63', 221)" class="id">objectName</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs64', 222)" onmouseover="showTip(event, 'fs64', 222)" class="fn">defaultArg</span>  <span onmouseout="hideTip(event, 'fs62', 223)" onmouseover="showTip(event, 'fs62', 223)" class="id">name</span> <span class="s">&quot;disposable&quot;</span>
    <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fs65', 224)" onmouseover="showTip(event, 'fs65', 224)" class="mv">isDisposed</span> <span class="o">=</span> <span class="k">false</span>
    <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">Close</span><span class="pn">(</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs65', 225)" onmouseover="showTip(event, 'fs65', 225)" class="mv">isDisposed</span> <span class="k">&lt;-</span> <span class="k">true</span>
    <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="prop">IsDisposed</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs65', 226)" onmouseover="showTip(event, 'fs65', 226)" class="mv">isDisposed</span>
    <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">Check</span><span class="pn">(</span><span class="pn">)</span> <span class="o">=</span>
        <span class="k">if</span> <span onmouseout="hideTip(event, 'fs65', 227)" onmouseover="showTip(event, 'fs65', 227)" class="mv">isDisposed</span> <span class="k">then</span> 
            <span onmouseout="hideTip(event, 'fs18', 228)" onmouseover="showTip(event, 'fs18', 228)" class="k">raise</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs66', 229)" onmouseover="showTip(event, 'fs66', 229)" class="rt">ObjectDisposedException</span> <span onmouseout="hideTip(event, 'fs63', 230)" onmouseover="showTip(event, 'fs63', 230)" class="id">objectName</span><span class="pn">)</span>
    <span class="k">interface</span> <span onmouseout="hideTip(event, 'fs11', 231)" onmouseover="showTip(event, 'fs11', 231)" class="if">IDisposable</span> <span class="k">with</span>
        <span class="k">member</span> <span onmouseout="hideTip(event, 'fs67', 232)" onmouseover="showTip(event, 'fs67', 232)" class="id">this</span><span class="pn">.</span><span class="fn">Dispose</span> <span class="pn">(</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs67', 233)" onmouseover="showTip(event, 'fs67', 233)" class="fn">this</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 234)" onmouseover="showTip(event, 'fs16', 234)" class="id">Close</span><span class="pn">(</span><span class="pn">)</span>

<span class="c">// preparation 2 : helper function</span>
<span class="c">// use IDisposable as pattern to autoclean filesystem of temporary files </span>
<span class="k">module</span> <span onmouseout="hideTip(event, 'fs68', 235)" onmouseover="showTip(event, 'fs68', 235)" class="m">File</span> <span class="o">=</span>
    <span class="c">// file at path will be deleted on dispose</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs69', 236)" onmouseover="showTip(event, 'fs69', 236)" class="fn">autoDelete</span> <span onmouseout="hideTip(event, 'fs70', 237)" onmouseover="showTip(event, 'fs70', 237)" class="id">path</span> <span class="o">=</span>
            <span class="pn">{</span>
                <span class="k">new</span> <span onmouseout="hideTip(event, 'fs11', 238)" onmouseover="showTip(event, 'fs11', 238)" class="if">IDisposable</span> <span class="k">with</span>
                <span class="k">member</span> <span class="id">_</span><span class="pn">.</span><span class="fn">Dispose</span><span class="pn">(</span><span class="pn">)</span> <span class="o">=</span>
                    <span class="k">if</span> <span onmouseout="hideTip(event, 'fs68', 239)" onmouseover="showTip(event, 'fs68', 239)" class="rt">File</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs71', 240)" onmouseover="showTip(event, 'fs71', 240)" class="id">Exists</span> <span onmouseout="hideTip(event, 'fs70', 241)" onmouseover="showTip(event, 'fs70', 241)" class="id">path</span> <span class="k">then</span>                        
                        <span onmouseout="hideTip(event, 'fs68', 242)" onmouseover="showTip(event, 'fs68', 242)" class="rt">File</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs72', 243)" onmouseover="showTip(event, 'fs72', 243)" class="id">Delete</span> <span onmouseout="hideTip(event, 'fs70', 244)" onmouseover="showTip(event, 'fs70', 244)" class="id">path</span>
            <span class="pn">}</span>              
<span class="c">// example</span>
<span class="k">let</span> <span onmouseout="hideTip(event, 'fs73', 245)" onmouseover="showTip(event, 'fs73', 245)" class="id">notebookScope</span> <span class="o">=</span>
    <span onmouseout="hideTip(event, 'fs39', 246)" onmouseover="showTip(event, 'fs39', 246)" class="k">scope</span> <span class="pn">{</span>
        <span class="k">use</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs68', 247)" onmouseover="showTip(event, 'fs68', 247)" class="m">File</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs69', 248)" onmouseover="showTip(event, 'fs69', 248)" class="id">autoDelete</span> <span class="s">&quot;tempfile&quot;</span> <span class="c">// tempfile willbe deleted on dispose</span>
        <span class="k">use</span> <span onmouseout="hideTip(event, 'fs74', 249)" onmouseover="showTip(event, 'fs74', 249)" class="id">guard</span> <span class="o">=</span> <span class="k">new</span> <span onmouseout="hideTip(event, 'fs61', 250)" onmouseover="showTip(event, 'fs61', 250)" class="d">Disposable</span> <span class="s">&quot;notebook&quot;</span>
        <span class="k">return</span> 
            <span class="pn">{|</span>
                <span class="id">WriteLine</span> <span class="o">=</span> 
                    <span class="k">fun</span> <span onmouseout="hideTip(event, 'fs75', 251)" onmouseover="showTip(event, 'fs75', 251)" class="id">line</span> <span class="k">-&gt;</span>
                    <span onmouseout="hideTip(event, 'fs74', 252)" onmouseover="showTip(event, 'fs74', 252)" class="fn">guard</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 253)" onmouseover="showTip(event, 'fs16', 253)" class="id">Check</span><span class="pn">(</span><span class="pn">)</span>
                    <span onmouseout="hideTip(event, 'fs68', 254)" onmouseover="showTip(event, 'fs68', 254)" class="m">File</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs76', 255)" onmouseover="showTip(event, 'fs76', 255)" class="id">AppendAllLines</span> <span class="pn">(</span><span class="s">&quot;tempfile&quot;</span><span class="pn">,</span><span class="pn">[|</span><span onmouseout="hideTip(event, 'fs75', 256)" onmouseover="showTip(event, 'fs75', 256)" class="id">line</span><span class="pn">|]</span><span class="pn">)</span>
                <span class="id">Print</span> <span class="o">=</span>
                    <span class="k">fun</span> <span class="pn">(</span><span class="pn">)</span> <span class="k">-&gt;</span>
                    <span onmouseout="hideTip(event, 'fs74', 257)" onmouseover="showTip(event, 'fs74', 257)" class="fn">guard</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 258)" onmouseover="showTip(event, 'fs16', 258)" class="id">Check</span><span class="pn">(</span><span class="pn">)</span>
                    <span onmouseout="hideTip(event, 'fs68', 259)" onmouseover="showTip(event, 'fs68', 259)" class="m">File</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs77', 260)" onmouseover="showTip(event, 'fs77', 260)" class="id">ReadAllText</span> <span class="s">&quot;tempfile&quot;</span>
                    <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs51', 261)" onmouseover="showTip(event, 'fs51', 261)" class="fn">printfn</span> <span class="s">&quot;</span><span class="pf">%s</span><span class="s">&quot;</span>

            <span class="pn">|}</span>
    <span class="pn">}</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs78', 262)" onmouseover="showTip(event, 'fs78', 262)" class="id">notebook</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs73', 263)" onmouseover="showTip(event, 'fs73', 263)" class="id">notebookScope</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 264)" onmouseover="showTip(event, 'fs16', 264)" class="id">Value</span>

<span onmouseout="hideTip(event, 'fs78', 265)" onmouseover="showTip(event, 'fs78', 265)" class="id">notebook</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 266)" onmouseover="showTip(event, 'fs16', 266)" class="id">WriteLine</span> <span class="s">&quot;Hello World!&quot;</span> <span class="c">// tempfile appears in your IDE explorer</span>
<span onmouseout="hideTip(event, 'fs78', 267)" onmouseover="showTip(event, 'fs78', 267)" class="id">notebook</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 268)" onmouseover="showTip(event, 'fs16', 268)" class="id">WriteLine</span> <span class="s">&quot;Our experience with scopes&quot;</span>
<span onmouseout="hideTip(event, 'fs78', 269)" onmouseover="showTip(event, 'fs78', 269)" class="id">notebook</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 270)" onmouseover="showTip(event, 'fs16', 270)" class="id">Print</span><span class="pn">(</span><span class="pn">)</span>

<span onmouseout="hideTip(event, 'fs73', 271)" onmouseover="showTip(event, 'fs73', 271)" class="fn">notebookScope</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 272)" onmouseover="showTip(event, 'fs16', 272)" class="id">Close</span><span class="pn">(</span><span class="pn">)</span> <span class="c">// tempfile disappeared</span>
<span onmouseout="hideTip(event, 'fs78', 273)" onmouseover="showTip(event, 'fs78', 273)" class="id">notebook</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs16', 274)" onmouseover="showTip(event, 'fs16', 274)" class="id">Print</span><span class="pn">(</span><span class="pn">)</span> <span class="c">// ObjectDisposedException thrown by guard</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">type Interlocked = Threading.Interlocked</div>
<div class="tip" id="fs3">namespace System.Threading</div>
<div class="tip" id="fs4">type Interlocked =<br />&#160;&#160;static member Add : location1:int * value:int -&gt; int + 1 overload<br />&#160;&#160;static member CompareExchange : location1:int * value:int * comparand:int -&gt; int + 6 overloads<br />&#160;&#160;static member Decrement : location:int -&gt; int + 1 overload<br />&#160;&#160;static member Exchange : location1:int * value:int -&gt; int + 6 overloads<br />&#160;&#160;static member Increment : location:int -&gt; int + 1 overload<br />&#160;&#160;static member MemoryBarrier : unit -&gt; unit<br />&#160;&#160;static member MemoryBarrierProcessWide : unit -&gt; unit<br />&#160;&#160;static member Read : location:int64 -&gt; int64</div>
<div class="tip" id="fs5">Multiple items<br />type Scope&lt;&#39;a&gt; =<br />&#160;&#160;interface IDisposable<br />&#160;&#160;new : value:&#39;a -&gt; Scope&lt;&#39;a&gt;<br />&#160;&#160;member Close : unit -&gt; unit<br />&#160;&#160;member internal InnerDisposables : Queue&lt;IDisposable&gt;<br />&#160;&#160;member Value : &#39;a<br /><br />--------------------<br />new : value:&#39;a -&gt; Scope&lt;&#39;a&gt;</div>
<div class="tip" id="fs6">val value : &#39;a</div>
<div class="tip" id="fs7">val queue : Collections.Generic.Queue&lt;IDisposable&gt;</div>
<div class="tip" id="fs8">Multiple items<br />namespace System.Collections<br /><br />--------------------<br />namespace Microsoft.FSharp.Collections</div>
<div class="tip" id="fs9">namespace System.Collections.Generic</div>
<div class="tip" id="fs10">Multiple items<br />type Queue&lt;&#39;T&gt; =<br />&#160;&#160;new : unit -&gt; Queue&lt;&#39;T&gt; + 2 overloads<br />&#160;&#160;member Clear : unit -&gt; unit<br />&#160;&#160;member Contains : item:&#39;T -&gt; bool<br />&#160;&#160;member CopyTo : array:&#39;T[] * arrayIndex:int -&gt; unit<br />&#160;&#160;member Count : int<br />&#160;&#160;member Dequeue : unit -&gt; &#39;T<br />&#160;&#160;member Enqueue : item:&#39;T -&gt; unit<br />&#160;&#160;member GetEnumerator : unit -&gt; Enumerator&lt;&#39;T&gt;<br />&#160;&#160;member Peek : unit -&gt; &#39;T<br />&#160;&#160;member ToArray : unit -&gt; &#39;T[]<br />&#160;&#160;...<br />&#160;&#160;nested type Enumerator<br /><br />--------------------<br />Collections.Generic.Queue() : Collections.Generic.Queue&lt;&#39;T&gt;<br />Collections.Generic.Queue(capacity: int) : Collections.Generic.Queue&lt;&#39;T&gt;<br />Collections.Generic.Queue(collection: Collections.Generic.IEnumerable&lt;&#39;T&gt;) : Collections.Generic.Queue&lt;&#39;T&gt;</div>
<div class="tip" id="fs11">type IDisposable =<br />&#160;&#160;member Dispose : unit -&gt; unit</div>
<div class="tip" id="fs12">val mutable closed : int</div>
<div class="tip" id="fs13">val close : (unit -&gt; unit)</div>
<div class="tip" id="fs14">val mutable exnList : exn list</div>
<div class="tip" id="fs15">val i : IDisposable</div>
<div class="tip" id="fs16"></div>
<div class="tip" id="fs17">Multiple items<br />val exn : exn<br /><br />--------------------<br />type exn = Exception</div>
<div class="tip" id="fs18">val raise : exn:Exception -&gt; &#39;T</div>
<div class="tip" id="fs19">Multiple items<br />type AggregateException =<br />&#160;&#160;inherit Exception<br />&#160;&#160;new : unit -&gt; AggregateException + 6 overloads<br />&#160;&#160;member Flatten : unit -&gt; AggregateException<br />&#160;&#160;member GetBaseException : unit -&gt; Exception<br />&#160;&#160;member GetObjectData : info:SerializationInfo * context:StreamingContext -&gt; unit<br />&#160;&#160;member Handle : predicate:Func&lt;Exception, bool&gt; -&gt; unit<br />&#160;&#160;member InnerExceptions : ReadOnlyCollection&lt;Exception&gt;<br />&#160;&#160;member Message : string<br />&#160;&#160;member ToString : unit -&gt; string<br /><br />--------------------<br />AggregateException() : AggregateException<br />AggregateException(message: string) : AggregateException<br />AggregateException(innerExceptions: Collections.Generic.IEnumerable&lt;exn&gt;) : AggregateException<br />AggregateException([&lt;ParamArray&gt;] innerExceptions: exn []) : AggregateException<br />AggregateException(message: string, innerException: exn) : AggregateException<br />AggregateException(message: string, innerExceptions: Collections.Generic.IEnumerable&lt;exn&gt;) : AggregateException<br />AggregateException(message: string, [&lt;ParamArray&gt;] innerExceptions: exn []) : AggregateException</div>
<div class="tip" id="fs20">Threading.Interlocked.CompareExchange&lt;&#39;T (requires reference type)&gt;(location1: byref&lt;&#39;T&gt;, value: &#39;T, comparand: &#39;T) : &#39;T<br />Threading.Interlocked.CompareExchange(location1: byref&lt;nativeint&gt;, value: nativeint, comparand: nativeint) : nativeint<br />Threading.Interlocked.CompareExchange(location1: byref&lt;obj&gt;, value: obj, comparand: obj) : obj<br />Threading.Interlocked.CompareExchange(location1: byref&lt;float&gt;, value: float, comparand: float) : float<br />Threading.Interlocked.CompareExchange(location1: byref&lt;float32&gt;, value: float32, comparand: float32) : float32<br />Threading.Interlocked.CompareExchange(location1: byref&lt;int64&gt;, value: int64, comparand: int64) : int64<br />Threading.Interlocked.CompareExchange(location1: byref&lt;int&gt;, value: int, comparand: int) : int</div>
<div class="tip" id="fs21">val this : Scope&lt;&#39;a&gt;</div>
<div class="tip" id="fs22">val getInnerDisposables : x:Scope&lt;&#39;a&gt; -&gt; Collections.Generic.Queue&lt;IDisposable&gt;</div>
<div class="tip" id="fs23">val x : Scope&lt;&#39;a&gt;</div>
<div class="tip" id="fs24">Multiple items<br />type ScopeBuilder =<br />&#160;&#160;new : unit -&gt; ScopeBuilder<br />&#160;&#160;member Bind : scope:Scope&lt;&#39;b&gt; * body:(&#39;b -&gt; Scope&lt;&#39;c&gt;) -&gt; Scope&lt;&#39;c&gt;<br />&#160;&#160;member Return : x:&#39;f -&gt; Scope&lt;&#39;f&gt;<br />&#160;&#160;member ReturnFrom : anotherscope:Scope&lt;&#39;a&gt; -&gt; Scope&lt;&#39;a&gt;<br />&#160;&#160;member Using : res:&#39;d * body:(&#39;d -&gt; Scope&lt;&#39;e&gt;) -&gt; Scope&lt;&#39;e&gt; (requires &#39;d :&gt; IDisposable)<br /><br />--------------------<br />new : unit -&gt; ScopeBuilder</div>
<div class="tip" id="fs25">val x : &#39;f</div>
<div class="tip" id="fs26">val res : #IDisposable</div>
<div class="tip" id="fs27">val body : (#IDisposable -&gt; Scope&lt;&#39;e&gt;)</div>
<div class="tip" id="fs28">val x : Scope&lt;&#39;e&gt;</div>
<div class="tip" id="fs29">val exn1 : exn</div>
<div class="tip" id="fs30">val reraise : unit -&gt; &#39;T</div>
<div class="tip" id="fs31">val this : ScopeBuilder</div>
<div class="tip" id="fs32">val scope : Scope&lt;&#39;b&gt;</div>
<div class="tip" id="fs33">val body : (&#39;b -&gt; Scope&lt;&#39;c&gt;)</div>
<div class="tip" id="fs34">val outerbody : (Scope&lt;&#39;b&gt; -&gt; Scope&lt;&#39;c&gt;)</div>
<div class="tip" id="fs35">val scope&#39; : Scope&lt;&#39;b&gt;</div>
<div class="tip" id="fs36">val anotherscope : Scope&lt;&#39;a&gt;</div>
<div class="tip" id="fs37">val thatscope : Scope&lt;&#39;a&gt;</div>
<div class="tip" id="fs38">Multiple items<br />type AutoOpenAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; AutoOpenAttribute<br />&#160;&#160;new : path:string -&gt; AutoOpenAttribute<br />&#160;&#160;member Path : string<br /><br />--------------------<br />new : unit -&gt; AutoOpenAttribute<br />new : path:string -&gt; AutoOpenAttribute</div>
<div class="tip" id="fs39">val scope : ScopeBuilder</div>
<div class="tip" id="fs40">namespace System.IO</div>
<div class="tip" id="fs41">val somescope : Scope&lt;{| MemoryStream: MemoryStream; Next: (unit -&gt; string) |}&gt;</div>
<div class="tip" id="fs42">val bytes : byte []</div>
<div class="tip" id="fs43">namespace System.Text</div>
<div class="tip" id="fs44">Multiple items<br />type UTF8Encoding =<br />&#160;&#160;inherit Encoding<br />&#160;&#160;new : unit -&gt; UTF8Encoding + 2 overloads<br />&#160;&#160;member Equals : value:obj -&gt; bool<br />&#160;&#160;member GetByteCount : chars:string -&gt; int + 3 overloads<br />&#160;&#160;member GetBytes : chars:ReadOnlySpan&lt;char&gt; * bytes:Span&lt;byte&gt; -&gt; int + 3 overloads<br />&#160;&#160;member GetCharCount : bytes:ReadOnlySpan&lt;byte&gt; -&gt; int + 2 overloads<br />&#160;&#160;member GetChars : bytes:ReadOnlySpan&lt;byte&gt; * chars:Span&lt;char&gt; -&gt; int + 2 overloads<br />&#160;&#160;member GetDecoder : unit -&gt; Decoder<br />&#160;&#160;member GetEncoder : unit -&gt; Encoder<br />&#160;&#160;member GetHashCode : unit -&gt; int<br />&#160;&#160;member GetMaxByteCount : charCount:int -&gt; int<br />&#160;&#160;...<br /><br />--------------------<br />Text.UTF8Encoding() : Text.UTF8Encoding<br />Text.UTF8Encoding(encoderShouldEmitUTF8Identifier: bool) : Text.UTF8Encoding<br />Text.UTF8Encoding(encoderShouldEmitUTF8Identifier: bool, throwOnInvalidBytes: bool) : Text.UTF8Encoding</div>
<div class="tip" id="fs45">val ms : MemoryStream</div>
<div class="tip" id="fs46">Multiple items<br />type MemoryStream =<br />&#160;&#160;inherit Stream<br />&#160;&#160;new : unit -&gt; MemoryStream + 6 overloads<br />&#160;&#160;member CanRead : bool<br />&#160;&#160;member CanSeek : bool<br />&#160;&#160;member CanWrite : bool<br />&#160;&#160;member Capacity : int with get, set<br />&#160;&#160;member CopyTo : destination:Stream * bufferSize:int -&gt; unit<br />&#160;&#160;member CopyToAsync : destination:Stream * bufferSize:int * cancellationToken:CancellationToken -&gt; Task<br />&#160;&#160;member Flush : unit -&gt; unit<br />&#160;&#160;member FlushAsync : cancellationToken:CancellationToken -&gt; Task<br />&#160;&#160;member GetBuffer : unit -&gt; byte[]<br />&#160;&#160;...<br /><br />--------------------<br />MemoryStream() : MemoryStream<br />MemoryStream(capacity: int) : MemoryStream<br />MemoryStream(buffer: byte []) : MemoryStream<br />MemoryStream(buffer: byte [], writable: bool) : MemoryStream<br />MemoryStream(buffer: byte [], index: int, count: int) : MemoryStream<br />MemoryStream(buffer: byte [], index: int, count: int, writable: bool) : MemoryStream<br />MemoryStream(buffer: byte [], index: int, count: int, writable: bool, publiclyVisible: bool) : MemoryStream</div>
<div class="tip" id="fs47">val sr : StreamReader</div>
<div class="tip" id="fs48">Multiple items<br />type StreamReader =<br />&#160;&#160;inherit TextReader<br />&#160;&#160;new : stream:Stream -&gt; StreamReader + 10 overloads<br />&#160;&#160;member BaseStream : Stream<br />&#160;&#160;member Close : unit -&gt; unit<br />&#160;&#160;member CurrentEncoding : Encoding<br />&#160;&#160;member DiscardBufferedData : unit -&gt; unit<br />&#160;&#160;member EndOfStream : bool<br />&#160;&#160;member Peek : unit -&gt; int<br />&#160;&#160;member Read : unit -&gt; int + 2 overloads<br />&#160;&#160;member ReadAsync : buffer:Memory&lt;char&gt; * ?cancellationToken:CancellationToken -&gt; ValueTask&lt;int&gt; + 1 overload<br />&#160;&#160;member ReadBlock : buffer:Span&lt;char&gt; -&gt; int + 1 overload<br />&#160;&#160;...<br /><br />--------------------<br />StreamReader(stream: Stream) : StreamReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StreamReader(path: string) : StreamReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StreamReader(stream: Stream, detectEncodingFromByteOrderMarks: bool) : StreamReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StreamReader(stream: Stream, encoding: Text.Encoding) : StreamReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StreamReader(path: string, detectEncodingFromByteOrderMarks: bool) : StreamReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StreamReader(path: string, encoding: Text.Encoding) : StreamReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StreamReader(stream: Stream, encoding: Text.Encoding, detectEncodingFromByteOrderMarks: bool) : StreamReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StreamReader(path: string, encoding: Text.Encoding, detectEncodingFromByteOrderMarks: bool) : StreamReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StreamReader(stream: Stream, encoding: Text.Encoding, detectEncodingFromByteOrderMarks: bool, bufferSize: int) : StreamReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em><br />StreamReader(path: string, encoding: Text.Encoding, detectEncodingFromByteOrderMarks: bool, bufferSize: int) : StreamReader<br />&#160;&#160;&#160;<em>(+0 other overloads)</em></div>
<div class="tip" id="fs49">val useful : name:string -&gt; IDisposable</div>
<div class="tip" id="fs50">val name : string</div>
<div class="tip" id="fs51">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T</div>
<div class="tip" id="fs52">val useless : name:string -&gt; IDisposable</div>
<div class="tip" id="fs53">val failwithf : format:Printf.StringFormat&lt;&#39;T,&#39;Result&gt; -&gt; &#39;T</div>
<div class="tip" id="fs54">val s : Scope&lt;int&gt;</div>
<div class="tip" id="fs55">val v : int</div>
<div class="tip" id="fs56">val sc1 : Scope&lt;int&gt;</div>
<div class="tip" id="fs57">val throwingscope : Scope&lt;unit&gt;</div>
<div class="tip" id="fs58">val agexn : AggregateException</div>
<div class="tip" id="fs59">val failwith : message:string -&gt; &#39;T</div>
<div class="tip" id="fs60">val ignore : value:&#39;T -&gt; unit</div>
<div class="tip" id="fs61">Multiple items<br />type Disposable =<br />&#160;&#160;interface IDisposable<br />&#160;&#160;new : ?name:string -&gt; Disposable<br />&#160;&#160;member Check : unit -&gt; unit<br />&#160;&#160;member Close : unit -&gt; unit<br />&#160;&#160;member IsDisposed : bool<br /><br />--------------------<br />new : ?name:string -&gt; Disposable</div>
<div class="tip" id="fs62">val name : string option</div>
<div class="tip" id="fs63">val objectName : string</div>
<div class="tip" id="fs64">val defaultArg : arg:&#39;T option -&gt; defaultValue:&#39;T -&gt; &#39;T</div>
<div class="tip" id="fs65">val mutable isDisposed : bool</div>
<div class="tip" id="fs66">Multiple items<br />type ObjectDisposedException =<br />&#160;&#160;inherit InvalidOperationException<br />&#160;&#160;new : objectName:string -&gt; ObjectDisposedException + 2 overloads<br />&#160;&#160;member GetObjectData : info:SerializationInfo * context:StreamingContext -&gt; unit<br />&#160;&#160;member Message : string<br />&#160;&#160;member ObjectName : string<br /><br />--------------------<br />ObjectDisposedException(objectName: string) : ObjectDisposedException<br />ObjectDisposedException(objectName: string, message: string) : ObjectDisposedException<br />ObjectDisposedException(message: string, innerException: exn) : ObjectDisposedException</div>
<div class="tip" id="fs67">val this : Disposable</div>
<div class="tip" id="fs68">type File =<br />&#160;&#160;static member AppendAllLines : path:string * contents:IEnumerable&lt;string&gt; -&gt; unit + 1 overload<br />&#160;&#160;static member AppendAllLinesAsync : path:string * contents:IEnumerable&lt;string&gt; * ?cancellationToken:CancellationToken -&gt; Task + 1 overload<br />&#160;&#160;static member AppendAllText : path:string * contents:string -&gt; unit + 1 overload<br />&#160;&#160;static member AppendAllTextAsync : path:string * contents:string * ?cancellationToken:CancellationToken -&gt; Task + 1 overload<br />&#160;&#160;static member AppendText : path:string -&gt; StreamWriter<br />&#160;&#160;static member Copy : sourceFileName:string * destFileName:string -&gt; unit + 1 overload<br />&#160;&#160;static member Create : path:string -&gt; FileStream + 2 overloads<br />&#160;&#160;static member CreateText : path:string -&gt; StreamWriter<br />&#160;&#160;static member Decrypt : path:string -&gt; unit<br />&#160;&#160;static member Delete : path:string -&gt; unit<br />&#160;&#160;...</div>
<div class="tip" id="fs69">val autoDelete : path:string -&gt; IDisposable</div>
<div class="tip" id="fs70">val path : string</div>
<div class="tip" id="fs71">File.Exists(path: string) : bool</div>
<div class="tip" id="fs72">File.Delete(path: string) : unit</div>
<div class="tip" id="fs73">val notebookScope : Scope&lt;{| Print: (unit -&gt; unit); WriteLine: (string -&gt; unit) |}&gt;</div>
<div class="tip" id="fs74">val guard : Disposable</div>
<div class="tip" id="fs75">val line : string</div>
<div class="tip" id="fs76">File.AppendAllLines(path: string, contents: Collections.Generic.IEnumerable&lt;string&gt;) : unit<br />File.AppendAllLines(path: string, contents: Collections.Generic.IEnumerable&lt;string&gt;, encoding: Text.Encoding) : unit</div>
<div class="tip" id="fs77">File.ReadAllText(path: string) : string<br />File.ReadAllText(path: string, encoding: Text.Encoding) : string</div>
<div class="tip" id="fs78">val notebook : {| Print: (unit -&gt; unit); WriteLine: (string -&gt; unit) |}</div>

