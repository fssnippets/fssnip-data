<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="m">#r</span> <span class="s">&quot;nuget:FSharp.Control.AsyncSeq&quot;</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="id">FSharp</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="id">Control</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="id">nums</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="k">asyncSeq</span> <span class="pn">{</span> 
  <span class="k">for</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="id">i</span> <span class="k">in</span> <span class="n">0</span> <span class="o">..</span> <span class="n">10</span> <span class="k">do</span> 
    <span class="k">do!</span> <span onmouseout="hideTip(event, 'fs6', 6)" onmouseover="showTip(event, 'fs6', 6)" class="rt">Async</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs7', 7)" onmouseover="showTip(event, 'fs7', 7)" class="id">Sleep</span> <span class="n">1000</span>
    <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="id">i</span> <span class="pn">}</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs8', 9)" onmouseover="showTip(event, 'fs8', 9)" class="rt">Message</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">K</span><span class="pn">,</span> <span class="ta">&#39;</span><span class="id">V</span><span class="pn">&gt;</span> <span class="o">=</span> 
  <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs9', 10)" onmouseover="showTip(event, 'fs9', 10)" class="uc">NextGroup</span> <span class="k">of</span> <span onmouseout="hideTip(event, 'fs10', 11)" onmouseover="showTip(event, 'fs10', 11)" class="rt">AsyncReplyChannel</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs11', 12)" onmouseover="showTip(event, 'fs11', 12)" class="rt">option</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">K</span> <span class="pn">*</span> <span onmouseout="hideTip(event, 'fs12', 13)" onmouseover="showTip(event, 'fs12', 13)" class="if">AsyncSeq</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">V</span><span class="pn">&gt;</span><span class="pn">&gt;</span><span class="pn">&gt;</span>
  <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs13', 14)" onmouseover="showTip(event, 'fs13', 14)" class="uc">NextValue</span> <span class="k">of</span> <span class="ta">&#39;</span><span class="id">K</span> <span class="pn">*</span> <span onmouseout="hideTip(event, 'fs10', 15)" onmouseover="showTip(event, 'fs10', 15)" class="rt">AsyncReplyChannel</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs11', 16)" onmouseover="showTip(event, 'fs11', 16)" class="rt">option</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">V</span><span class="pn">&gt;</span><span class="pn">&gt;</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs14', 17)" onmouseover="showTip(event, 'fs14', 17)" class="fn">groupBy</span> <span onmouseout="hideTip(event, 'fs15', 18)" onmouseover="showTip(event, 'fs15', 18)" class="fn">f</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs16', 19)" onmouseover="showTip(event, 'fs16', 19)" class="id">asq</span><span class="pn">:</span><span onmouseout="hideTip(event, 'fs12', 20)" onmouseover="showTip(event, 'fs12', 20)" class="if">AsyncSeq</span><span class="pn">&lt;</span><span class="id">_</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span> 
  <span class="k">let</span> <span onmouseout="hideTip(event, 'fs17', 21)" onmouseover="showTip(event, 'fs17', 21)" class="id">agent</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs18', 22)" onmouseover="showTip(event, 'fs18', 22)" class="d">MailboxProcessor</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs19', 23)" onmouseover="showTip(event, 'fs19', 23)" class="id">Start</span><span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs17', 24)" onmouseover="showTip(event, 'fs17', 24)" class="id">agent</span> <span class="k">-&gt;</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 25)" onmouseover="showTip(event, 'fs20', 25)" class="id">en</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs16', 26)" onmouseover="showTip(event, 'fs16', 26)" class="fn">asq</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs21', 27)" onmouseover="showTip(event, 'fs21', 27)" class="id">GetEnumerator</span><span class="pn">(</span><span class="pn">)</span>

    <span class="c">// Fetch next element from &#39;en&#39; and add it to &#39;groups&#39;</span>
    <span class="c">// If there is no more elements, return None</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 28)" onmouseover="showTip(event, 'fs22', 28)" class="fn">fetchNext</span> <span onmouseout="hideTip(event, 'fs23', 29)" onmouseover="showTip(event, 'fs23', 29)" class="id">groups</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 30)" onmouseover="showTip(event, 'fs24', 30)" class="k">async</span> <span class="pn">{</span>
      <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs25', 31)" onmouseover="showTip(event, 'fs25', 31)" class="id">next</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs20', 32)" onmouseover="showTip(event, 'fs20', 32)" class="fn">en</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs26', 33)" onmouseover="showTip(event, 'fs26', 33)" class="id">MoveNext</span><span class="pn">(</span><span class="pn">)</span>
      <span class="k">match</span> <span onmouseout="hideTip(event, 'fs25', 34)" onmouseover="showTip(event, 'fs25', 34)" class="id">next</span> <span class="k">with</span> 
      <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs27', 35)" onmouseover="showTip(event, 'fs27', 35)" class="uc">Some</span> <span onmouseout="hideTip(event, 'fs28', 36)" onmouseover="showTip(event, 'fs28', 36)" class="id">n</span> <span class="k">-&gt;</span>
          <span onmouseout="hideTip(event, 'fs29', 37)" onmouseover="showTip(event, 'fs29', 37)" class="fn">printfn</span> <span class="s">&quot;Fetched: </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs28', 38)" onmouseover="showTip(event, 'fs28', 38)" class="id">n</span>
          <span class="k">let</span> <span onmouseout="hideTip(event, 'fs30', 39)" onmouseover="showTip(event, 'fs30', 39)" class="id">k</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs15', 40)" onmouseover="showTip(event, 'fs15', 40)" class="fn">f</span> <span onmouseout="hideTip(event, 'fs28', 41)" onmouseover="showTip(event, 'fs28', 41)" class="id">n</span>
          <span class="k">if</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs31', 42)" onmouseover="showTip(event, 'fs31', 42)" class="m">Map</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs32', 43)" onmouseover="showTip(event, 'fs32', 43)" class="id">containsKey</span> <span onmouseout="hideTip(event, 'fs30', 44)" onmouseover="showTip(event, 'fs30', 44)" class="id">k</span> <span onmouseout="hideTip(event, 'fs23', 45)" onmouseover="showTip(event, 'fs23', 45)" class="id">groups</span><span class="pn">)</span> <span class="k">then</span> 
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs33', 46)" onmouseover="showTip(event, 'fs33', 46)" class="id">returned</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs34', 47)" onmouseover="showTip(event, 'fs34', 47)" class="id">g</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 48)" onmouseover="showTip(event, 'fs23', 48)" class="id">groups</span><span class="pn">.</span><span class="pn">[</span><span onmouseout="hideTip(event, 'fs30', 49)" onmouseover="showTip(event, 'fs30', 49)" class="id">k</span><span class="pn">]</span>
            <span class="k">let</span> <span onmouseout="hideTip(event, 'fs35', 50)" onmouseover="showTip(event, 'fs35', 50)" class="id">ng</span> <span class="o">=</span> <span class="pn">(</span><span class="k">false</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs28', 51)" onmouseover="showTip(event, 'fs28', 51)" class="id">n</span><span class="pn">)</span><span class="uc">::</span><span onmouseout="hideTip(event, 'fs34', 52)" onmouseover="showTip(event, 'fs34', 52)" class="id">g</span>
            <span class="k">return</span> <span onmouseout="hideTip(event, 'fs27', 53)" onmouseover="showTip(event, 'fs27', 53)" class="uc">Some</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs31', 54)" onmouseover="showTip(event, 'fs31', 54)" class="m">Map</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs36', 55)" onmouseover="showTip(event, 'fs36', 55)" class="id">add</span> <span onmouseout="hideTip(event, 'fs30', 56)" onmouseover="showTip(event, 'fs30', 56)" class="id">k</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs33', 57)" onmouseover="showTip(event, 'fs33', 57)" class="id">returned</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs35', 58)" onmouseover="showTip(event, 'fs35', 58)" class="id">ng</span><span class="pn">)</span> <span onmouseout="hideTip(event, 'fs23', 59)" onmouseover="showTip(event, 'fs23', 59)" class="id">groups</span><span class="pn">)</span>
          <span class="k">else</span> 
            <span class="k">return</span> <span onmouseout="hideTip(event, 'fs27', 60)" onmouseover="showTip(event, 'fs27', 60)" class="uc">Some</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs31', 61)" onmouseover="showTip(event, 'fs31', 61)" class="m">Map</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs36', 62)" onmouseover="showTip(event, 'fs36', 62)" class="id">add</span> <span onmouseout="hideTip(event, 'fs30', 63)" onmouseover="showTip(event, 'fs30', 63)" class="id">k</span> <span class="pn">(</span><span class="k">false</span><span class="pn">,</span> <span class="pn">[</span><span class="k">false</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs28', 64)" onmouseover="showTip(event, 'fs28', 64)" class="id">n</span><span class="pn">]</span><span class="pn">)</span> <span onmouseout="hideTip(event, 'fs23', 65)" onmouseover="showTip(event, 'fs23', 65)" class="id">groups</span><span class="pn">)</span>
      <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs37', 66)" onmouseover="showTip(event, 'fs37', 66)" class="uc">None</span> <span class="k">-&gt;</span>
          <span class="k">return</span> <span onmouseout="hideTip(event, 'fs37', 67)" onmouseover="showTip(event, 'fs37', 67)" class="uc">None</span> <span class="pn">}</span>

    <span class="c">// Create AsyncSeq for iterating over group elements</span>
    <span class="c">// for a group with key &#39;k&#39;</span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs38', 68)" onmouseover="showTip(event, 'fs38', 68)" class="fn">groupSeq</span> <span onmouseout="hideTip(event, 'fs30', 69)" onmouseover="showTip(event, 'fs30', 69)" class="id">k</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 70)" onmouseover="showTip(event, 'fs4', 70)" class="k">asyncSeq</span> <span class="pn">{</span>
      <span onmouseout="hideTip(event, 'fs29', 71)" onmouseover="showTip(event, 'fs29', 71)" class="fn">printfn</span> <span class="s">&quot;Next inner for: </span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs30', 72)" onmouseover="showTip(event, 'fs30', 72)" class="id">k</span>
      <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs39', 73)" onmouseover="showTip(event, 'fs39', 73)" class="id">res</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 74)" onmouseover="showTip(event, 'fs17', 74)" class="fn">agent</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs40', 75)" onmouseover="showTip(event, 'fs40', 75)" class="id">PostAndAsyncReply</span><span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs41', 76)" onmouseover="showTip(event, 'fs41', 76)" class="id">r</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs13', 77)" onmouseover="showTip(event, 'fs13', 77)" class="uc">NextValue</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs30', 78)" onmouseover="showTip(event, 'fs30', 78)" class="id">k</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs41', 79)" onmouseover="showTip(event, 'fs41', 79)" class="id">r</span><span class="pn">)</span><span class="pn">)</span>
      <span class="k">match</span> <span class="id">res</span> <span class="k">with</span> 
      <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs37', 80)" onmouseover="showTip(event, 'fs37', 80)" class="uc">None</span> <span class="k">-&gt;</span> <span class="pn">(</span><span class="pn">)</span>
      <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs27', 81)" onmouseover="showTip(event, 'fs27', 81)" class="uc">Some</span> <span onmouseout="hideTip(event, 'fs42', 82)" onmouseover="showTip(event, 'fs42', 82)" class="id">v</span> <span class="k">-&gt;</span>
          <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs42', 83)" onmouseover="showTip(event, 'fs42', 83)" class="id">v</span>
          <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs38', 84)" onmouseover="showTip(event, 'fs38', 84)" class="fn">groupSeq</span> <span onmouseout="hideTip(event, 'fs30', 85)" onmouseover="showTip(event, 'fs30', 85)" class="id">k</span> <span class="pn">}</span>

    <span class="c">// The state &#39;groups&#39; is a Map&lt;&#39;K, bool * list&lt;bool * &#39;V&gt;&gt;</span>
    <span class="c">// It is a map from keys to groups where each group is a list</span>
    <span class="c">// of values. In addition &#39;bool&#39; values indicate if a group/value</span>
    <span class="c">// has already been returned. </span>
    <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs43', 86)" onmouseover="showTip(event, 'fs43', 86)" class="fn">loop</span> <span onmouseout="hideTip(event, 'fs23', 87)" onmouseover="showTip(event, 'fs23', 87)" class="id">groups</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 88)" onmouseover="showTip(event, 'fs24', 88)" class="k">async</span> <span class="pn">{</span>
      <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs44', 89)" onmouseover="showTip(event, 'fs44', 89)" class="id">msg</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 90)" onmouseover="showTip(event, 'fs17', 90)" class="fn">agent</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs45', 91)" onmouseover="showTip(event, 'fs45', 91)" class="id">Receive</span><span class="pn">(</span><span class="pn">)</span>
      <span class="k">match</span> <span onmouseout="hideTip(event, 'fs44', 92)" onmouseover="showTip(event, 'fs44', 92)" class="id">msg</span> <span class="k">with</span> 
      <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs13', 93)" onmouseover="showTip(event, 'fs13', 93)" class="uc">NextValue</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs30', 94)" onmouseover="showTip(event, 'fs30', 94)" class="id">k</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs46', 95)" onmouseover="showTip(event, 'fs46', 95)" class="id">repl</span><span class="pn">)</span> <span class="k">-&gt;</span>
          <span class="c">// Do we have unreturned value for a group with key k?</span>
          <span class="k">let</span> <span class="id">_</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs34', 96)" onmouseover="showTip(event, 'fs34', 96)" class="id">g</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 97)" onmouseover="showTip(event, 'fs23', 97)" class="id">groups</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs31', 98)" onmouseover="showTip(event, 'fs31', 98)" class="m">Map</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs47', 99)" onmouseover="showTip(event, 'fs47', 99)" class="id">find</span> <span onmouseout="hideTip(event, 'fs30', 100)" onmouseover="showTip(event, 'fs30', 100)" class="id">k</span>
          <span class="k">let</span> <span onmouseout="hideTip(event, 'fs48', 101)" onmouseover="showTip(event, 'fs48', 101)" class="id">v</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 102)" onmouseover="showTip(event, 'fs34', 102)" class="id">g</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs49', 103)" onmouseover="showTip(event, 'fs49', 103)" class="m">List</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs50', 104)" onmouseover="showTip(event, 'fs50', 104)" class="id">tryFind</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs33', 105)" onmouseover="showTip(event, 'fs33', 105)" class="id">returned</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs42', 106)" onmouseover="showTip(event, 'fs42', 106)" class="id">v</span><span class="pn">)</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs51', 107)" onmouseover="showTip(event, 'fs51', 107)" class="fn">not</span> <span onmouseout="hideTip(event, 'fs33', 108)" onmouseover="showTip(event, 'fs33', 108)" class="id">returned</span><span class="pn">)</span>
          <span class="k">match</span> <span onmouseout="hideTip(event, 'fs48', 109)" onmouseover="showTip(event, 'fs48', 109)" class="id">v</span> <span class="k">with</span> 
          <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs37', 110)" onmouseover="showTip(event, 'fs37', 110)" class="uc">None</span> <span class="k">-&gt;</span>
              <span class="c">// If no, fetch next value. If there was one, try again.</span>
              <span class="c">// If we got to the end, return &#39;None&#39;</span>
              <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs52', 111)" onmouseover="showTip(event, 'fs52', 111)" class="id">groups</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 112)" onmouseover="showTip(event, 'fs22', 112)" class="fn">fetchNext</span> <span onmouseout="hideTip(event, 'fs52', 113)" onmouseover="showTip(event, 'fs52', 113)" class="id">groups</span>
              <span class="k">match</span> <span onmouseout="hideTip(event, 'fs52', 114)" onmouseover="showTip(event, 'fs52', 114)" class="id">groups</span> <span class="k">with</span> 
              <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs37', 115)" onmouseover="showTip(event, 'fs37', 115)" class="uc">None</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs46', 116)" onmouseover="showTip(event, 'fs46', 116)" class="fn">repl</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs53', 117)" onmouseover="showTip(event, 'fs53', 117)" class="id">Reply</span> <span onmouseout="hideTip(event, 'fs37', 118)" onmouseover="showTip(event, 'fs37', 118)" class="uc">None</span>
              <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs27', 119)" onmouseover="showTip(event, 'fs27', 119)" class="uc">Some</span> <span onmouseout="hideTip(event, 'fs23', 120)" onmouseover="showTip(event, 'fs23', 120)" class="id">groups</span> <span class="k">-&gt;</span>
                  <span onmouseout="hideTip(event, 'fs17', 121)" onmouseover="showTip(event, 'fs17', 121)" class="fn">agent</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs54', 122)" onmouseover="showTip(event, 'fs54', 122)" class="id">Post</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs13', 123)" onmouseover="showTip(event, 'fs13', 123)" class="uc">NextValue</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs30', 124)" onmouseover="showTip(event, 'fs30', 124)" class="id">k</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs46', 125)" onmouseover="showTip(event, 'fs46', 125)" class="id">repl</span><span class="pn">)</span><span class="pn">)</span>
                  <span class="k">return!</span> <span onmouseout="hideTip(event, 'fs43', 126)" onmouseover="showTip(event, 'fs43', 126)" class="fn">loop</span> <span onmouseout="hideTip(event, 'fs23', 127)" onmouseover="showTip(event, 'fs23', 127)" class="id">groups</span>
          <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs27', 128)" onmouseover="showTip(event, 'fs27', 128)" class="uc">Some</span><span class="pn">(</span><span class="id">_</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs42', 129)" onmouseover="showTip(event, 'fs42', 129)" class="id">v</span><span class="pn">)</span> <span class="k">-&gt;</span>
              <span class="c">// Return this and mark as returned</span>
              <span onmouseout="hideTip(event, 'fs46', 130)" onmouseover="showTip(event, 'fs46', 130)" class="fn">repl</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs53', 131)" onmouseover="showTip(event, 'fs53', 131)" class="id">Reply</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs27', 132)" onmouseover="showTip(event, 'fs27', 132)" class="uc">Some</span> <span onmouseout="hideTip(event, 'fs42', 133)" onmouseover="showTip(event, 'fs42', 133)" class="id">v</span><span class="pn">)</span>
              <span class="k">let</span> <span onmouseout="hideTip(event, 'fs35', 134)" onmouseover="showTip(event, 'fs35', 134)" class="id">ng</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs34', 135)" onmouseover="showTip(event, 'fs34', 135)" class="id">g</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs49', 136)" onmouseover="showTip(event, 'fs49', 136)" class="m">List</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs55', 137)" onmouseover="showTip(event, 'fs55', 137)" class="id">map</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs33', 138)" onmouseover="showTip(event, 'fs33', 138)" class="id">returned</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs56', 139)" onmouseover="showTip(event, 'fs56', 139)" class="id">v&#39;</span><span class="pn">)</span> <span class="k">-&gt;</span> 
                <span class="k">if</span> <span onmouseout="hideTip(event, 'fs51', 140)" onmouseover="showTip(event, 'fs51', 140)" class="fn">not</span> <span onmouseout="hideTip(event, 'fs33', 141)" onmouseover="showTip(event, 'fs33', 141)" class="id">returned</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs42', 142)" onmouseover="showTip(event, 'fs42', 142)" class="id">v</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs56', 143)" onmouseover="showTip(event, 'fs56', 143)" class="id">v&#39;</span> <span class="k">then</span> <span class="k">true</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs56', 144)" onmouseover="showTip(event, 'fs56', 144)" class="id">v&#39;</span> <span class="k">else</span> <span onmouseout="hideTip(event, 'fs33', 145)" onmouseover="showTip(event, 'fs33', 145)" class="id">returned</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs56', 146)" onmouseover="showTip(event, 'fs56', 146)" class="id">v&#39;</span><span class="pn">)</span>
              <span class="k">return!</span> <span onmouseout="hideTip(event, 'fs43', 147)" onmouseover="showTip(event, 'fs43', 147)" class="fn">loop</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs31', 148)" onmouseover="showTip(event, 'fs31', 148)" class="m">Map</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs36', 149)" onmouseover="showTip(event, 'fs36', 149)" class="id">add</span> <span onmouseout="hideTip(event, 'fs30', 150)" onmouseover="showTip(event, 'fs30', 150)" class="id">k</span> <span class="pn">(</span><span class="k">true</span><span class="pn">,</span> <span class="id">ng</span><span class="pn">)</span> <span onmouseout="hideTip(event, 'fs23', 151)" onmouseover="showTip(event, 'fs23', 151)" class="id">groups</span><span class="pn">)</span>
              
      <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs9', 152)" onmouseover="showTip(event, 'fs9', 152)" class="uc">NextGroup</span> <span onmouseout="hideTip(event, 'fs57', 153)" onmouseover="showTip(event, 'fs57', 153)" class="id">repl</span> <span class="k">-&gt;</span>
          <span class="c">// Same logic as for fetching next value. See if we</span>
          <span class="c">// have unreturned group.</span>
          <span onmouseout="hideTip(event, 'fs29', 154)" onmouseover="showTip(event, 'fs29', 154)" class="fn">printfn</span> <span class="s">&quot;Next outer&quot;</span>
          <span class="k">let</span> <span onmouseout="hideTip(event, 'fs58', 155)" onmouseover="showTip(event, 'fs58', 155)" class="id">k</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 156)" onmouseover="showTip(event, 'fs23', 156)" class="id">groups</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs31', 157)" onmouseover="showTip(event, 'fs31', 157)" class="m">Map</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs59', 158)" onmouseover="showTip(event, 'fs59', 158)" class="id">tryFindKey</span> <span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs30', 159)" onmouseover="showTip(event, 'fs30', 159)" class="id">k</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs33', 160)" onmouseover="showTip(event, 'fs33', 160)" class="id">returned</span><span class="pn">,</span> <span class="id">_</span><span class="pn">)</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs51', 161)" onmouseover="showTip(event, 'fs51', 161)" class="fn">not</span> <span onmouseout="hideTip(event, 'fs33', 162)" onmouseover="showTip(event, 'fs33', 162)" class="id">returned</span><span class="pn">)</span>
          <span class="k">match</span> <span onmouseout="hideTip(event, 'fs58', 163)" onmouseover="showTip(event, 'fs58', 163)" class="id">k</span> <span class="k">with</span> 
          <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs37', 164)" onmouseover="showTip(event, 'fs37', 164)" class="uc">None</span> <span class="k">-&gt;</span>
              <span class="c">// If no, fetch next value. If there is none, return None,</span>
              <span class="c">// otherwise try again.</span>
              <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs52', 165)" onmouseover="showTip(event, 'fs52', 165)" class="id">groups</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs22', 166)" onmouseover="showTip(event, 'fs22', 166)" class="fn">fetchNext</span> <span onmouseout="hideTip(event, 'fs52', 167)" onmouseover="showTip(event, 'fs52', 167)" class="id">groups</span>
              <span class="k">match</span> <span onmouseout="hideTip(event, 'fs52', 168)" onmouseover="showTip(event, 'fs52', 168)" class="id">groups</span> <span class="k">with</span> 
              <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs37', 169)" onmouseover="showTip(event, 'fs37', 169)" class="uc">None</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs57', 170)" onmouseover="showTip(event, 'fs57', 170)" class="fn">repl</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs53', 171)" onmouseover="showTip(event, 'fs53', 171)" class="id">Reply</span> <span onmouseout="hideTip(event, 'fs37', 172)" onmouseover="showTip(event, 'fs37', 172)" class="uc">None</span>
              <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs27', 173)" onmouseover="showTip(event, 'fs27', 173)" class="uc">Some</span> <span onmouseout="hideTip(event, 'fs23', 174)" onmouseover="showTip(event, 'fs23', 174)" class="id">groups</span> <span class="k">-&gt;</span>
                  <span onmouseout="hideTip(event, 'fs17', 175)" onmouseover="showTip(event, 'fs17', 175)" class="fn">agent</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs54', 176)" onmouseover="showTip(event, 'fs54', 176)" class="id">Post</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs9', 177)" onmouseover="showTip(event, 'fs9', 177)" class="uc">NextGroup</span> <span onmouseout="hideTip(event, 'fs57', 178)" onmouseover="showTip(event, 'fs57', 178)" class="id">repl</span><span class="pn">)</span>
                  <span class="k">return!</span> <span onmouseout="hideTip(event, 'fs43', 179)" onmouseover="showTip(event, 'fs43', 179)" class="fn">loop</span> <span onmouseout="hideTip(event, 'fs23', 180)" onmouseover="showTip(event, 'fs23', 180)" class="id">groups</span>
          <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs27', 181)" onmouseover="showTip(event, 'fs27', 181)" class="uc">Some</span> <span onmouseout="hideTip(event, 'fs30', 182)" onmouseover="showTip(event, 'fs30', 182)" class="id">k</span> <span class="k">-&gt;</span> 
              <span class="c">// Mark group as returned</span>
              <span class="k">let</span> <span class="id">_</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs34', 183)" onmouseover="showTip(event, 'fs34', 183)" class="id">g</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs23', 184)" onmouseover="showTip(event, 'fs23', 184)" class="id">groups</span><span class="pn">.</span><span class="pn">[</span><span onmouseout="hideTip(event, 'fs30', 185)" onmouseover="showTip(event, 'fs30', 185)" class="id">k</span><span class="pn">]</span>
              <span onmouseout="hideTip(event, 'fs57', 186)" onmouseover="showTip(event, 'fs57', 186)" class="fn">repl</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs53', 187)" onmouseover="showTip(event, 'fs53', 187)" class="id">Reply</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs27', 188)" onmouseover="showTip(event, 'fs27', 188)" class="uc">Some</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs30', 189)" onmouseover="showTip(event, 'fs30', 189)" class="id">k</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs38', 190)" onmouseover="showTip(event, 'fs38', 190)" class="fn">groupSeq</span> <span onmouseout="hideTip(event, 'fs30', 191)" onmouseover="showTip(event, 'fs30', 191)" class="id">k</span><span class="pn">)</span><span class="pn">)</span>
              <span class="k">return!</span> <span onmouseout="hideTip(event, 'fs43', 192)" onmouseover="showTip(event, 'fs43', 192)" class="fn">loop</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs31', 193)" onmouseover="showTip(event, 'fs31', 193)" class="m">Map</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs36', 194)" onmouseover="showTip(event, 'fs36', 194)" class="id">add</span> <span onmouseout="hideTip(event, 'fs30', 195)" onmouseover="showTip(event, 'fs30', 195)" class="id">k</span> <span class="pn">(</span><span class="k">true</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs34', 196)" onmouseover="showTip(event, 'fs34', 196)" class="id">g</span><span class="pn">)</span> <span onmouseout="hideTip(event, 'fs23', 197)" onmouseover="showTip(event, 'fs23', 197)" class="id">groups</span><span class="pn">)</span>

      <span class="k">return!</span> <span onmouseout="hideTip(event, 'fs43', 198)" onmouseover="showTip(event, 'fs43', 198)" class="fn">loop</span> <span onmouseout="hideTip(event, 'fs23', 199)" onmouseover="showTip(event, 'fs23', 199)" class="id">groups</span> <span class="pn">}</span>
    <span onmouseout="hideTip(event, 'fs43', 200)" onmouseover="showTip(event, 'fs43', 200)" class="fn">loop</span> <span onmouseout="hideTip(event, 'fs31', 201)" onmouseover="showTip(event, 'fs31', 201)" class="m">Map</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs60', 202)" onmouseover="showTip(event, 'fs60', 202)" class="id">empty</span><span class="pn">)</span>
    
  <span class="k">let</span> <span class="k">rec</span> <span onmouseout="hideTip(event, 'fs61', 203)" onmouseover="showTip(event, 'fs61', 203)" class="fn">groups</span> <span class="pn">(</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 204)" onmouseover="showTip(event, 'fs4', 204)" class="k">asyncSeq</span> <span class="pn">{</span>
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs62', 205)" onmouseover="showTip(event, 'fs62', 205)" class="id">next</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs17', 206)" onmouseover="showTip(event, 'fs17', 206)" class="fn">agent</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs40', 207)" onmouseover="showTip(event, 'fs40', 207)" class="id">PostAndAsyncReply</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs9', 208)" onmouseover="showTip(event, 'fs9', 208)" class="uc">NextGroup</span><span class="pn">)</span>
    <span class="k">match</span> <span onmouseout="hideTip(event, 'fs62', 209)" onmouseover="showTip(event, 'fs62', 209)" class="id">next</span> <span class="k">with</span> 
    <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs37', 210)" onmouseover="showTip(event, 'fs37', 210)" class="uc">None</span> <span class="k">-&gt;</span> <span class="pn">(</span><span class="pn">)</span>
    <span class="pn">|</span> <span onmouseout="hideTip(event, 'fs27', 211)" onmouseover="showTip(event, 'fs27', 211)" class="uc">Some</span> <span onmouseout="hideTip(event, 'fs63', 212)" onmouseover="showTip(event, 'fs63', 212)" class="id">g</span> <span class="k">-&gt;</span> 
        <span class="k">yield</span> <span onmouseout="hideTip(event, 'fs63', 213)" onmouseover="showTip(event, 'fs63', 213)" class="id">g</span>
        <span class="k">yield!</span> <span onmouseout="hideTip(event, 'fs61', 214)" onmouseover="showTip(event, 'fs61', 214)" class="fn">groups</span> <span class="pn">(</span><span class="pn">)</span> <span class="pn">}</span>

  <span onmouseout="hideTip(event, 'fs61', 215)" onmouseover="showTip(event, 'fs61', 215)" class="fn">groups</span> <span class="pn">(</span><span class="pn">)</span>

<span onmouseout="hideTip(event, 'fs3', 216)" onmouseover="showTip(event, 'fs3', 216)" class="id">nums</span>
<span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs14', 217)" onmouseover="showTip(event, 'fs14', 217)" class="fn">groupBy</span> <span class="pn">(</span><span class="k">fun</span> <span onmouseout="hideTip(event, 'fs64', 218)" onmouseover="showTip(event, 'fs64', 218)" class="id">k</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs64', 219)" onmouseover="showTip(event, 'fs64', 219)" class="id">k</span><span class="o">%</span><span class="n">3</span><span class="pn">)</span>
<span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs12', 220)" onmouseover="showTip(event, 'fs12', 220)" class="m">AsyncSeq</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs65', 221)" onmouseover="showTip(event, 'fs65', 221)" class="id">map</span> <span class="pn">(</span><span class="k">fun</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs64', 222)" onmouseover="showTip(event, 'fs64', 222)" class="id">k</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs66', 223)" onmouseover="showTip(event, 'fs66', 223)" class="id">v</span><span class="pn">)</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs64', 224)" onmouseover="showTip(event, 'fs64', 224)" class="id">k</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs12', 225)" onmouseover="showTip(event, 'fs12', 225)" class="m">AsyncSeq</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs67', 226)" onmouseover="showTip(event, 'fs67', 226)" class="id">toArraySynchronously</span> <span onmouseout="hideTip(event, 'fs66', 227)" onmouseover="showTip(event, 'fs66', 227)" class="id">v</span><span class="pn">)</span>
<span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs12', 228)" onmouseover="showTip(event, 'fs12', 228)" class="m">AsyncSeq</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs67', 229)" onmouseover="showTip(event, 'fs67', 229)" class="id">toArraySynchronously</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">Multiple items<br />namespace FSharp<br /><br />--------------------<br />namespace Microsoft.FSharp</div>
<div class="tip" id="fs2">Multiple items<br />namespace FSharp.Control<br /><br />--------------------<br />namespace Microsoft.FSharp.Control</div>
<div class="tip" id="fs3">val nums : AsyncSeq&lt;int&gt;</div>
<div class="tip" id="fs4">val asyncSeq : AsyncSeq.AsyncSeqBuilder</div>
<div class="tip" id="fs5">val i : int</div>
<div class="tip" id="fs6">Multiple items<br />type Async =<br />&#160;&#160;static member AsBeginEnd : computation:(&#39;Arg -&gt; Async&lt;&#39;T&gt;) -&gt; (&#39;Arg * AsyncCallback * obj -&gt; IAsyncResult) * (IAsyncResult -&gt; &#39;T) * (IAsyncResult -&gt; unit)<br />&#160;&#160;static member AwaitEvent : event:IEvent&lt;&#39;Del,&#39;T&gt; * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt; (requires delegate and &#39;Del :&gt; Delegate)<br />&#160;&#160;static member AwaitIAsyncResult : iar:IAsyncResult * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />&#160;&#160;static member AwaitTask : task:Task -&gt; Async&lt;unit&gt;<br />&#160;&#160;static member AwaitTask : task:Task&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;<br />&#160;&#160;static member AwaitWaitHandle : waitHandle:WaitHandle * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />&#160;&#160;static member CancelDefaultToken : unit -&gt; unit<br />&#160;&#160;static member Catch : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;Choice&lt;&#39;T,exn&gt;&gt;<br />&#160;&#160;static member Choice : computations:seq&lt;Async&lt;&#39;T option&gt;&gt; -&gt; Async&lt;&#39;T option&gt;<br />&#160;&#160;static member FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />&#160;&#160;...<br /><br />--------------------<br />type Async&lt;&#39;T&gt; =</div>
<div class="tip" id="fs7">static member Async.Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;</div>
<div class="tip" id="fs8">type Message&lt;&#39;K,&#39;V&gt; =<br />&#160;&#160;| NextGroup of AsyncReplyChannel&lt;(&#39;K * AsyncSeq&lt;&#39;V&gt;) option&gt;<br />&#160;&#160;| NextValue of &#39;K * AsyncReplyChannel&lt;&#39;V option&gt;</div>
<div class="tip" id="fs9">union case Message.NextGroup: AsyncReplyChannel&lt;(&#39;K * AsyncSeq&lt;&#39;V&gt;) option&gt; -&gt; Message&lt;&#39;K,&#39;V&gt;</div>
<div class="tip" id="fs10">type AsyncReplyChannel&lt;&#39;Reply&gt; =<br />&#160;&#160;member Reply : value:&#39;Reply -&gt; unit</div>
<div class="tip" id="fs11">type &#39;T option = Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs12">Multiple items<br />module AsyncSeq<br /><br />from FSharp.Control<br /><br />--------------------<br />type AsyncSeq&lt;&#39;T&gt; = IAsyncEnumerable&lt;&#39;T&gt;</div>
<div class="tip" id="fs13">union case Message.NextValue: &#39;K * AsyncReplyChannel&lt;&#39;V option&gt; -&gt; Message&lt;&#39;K,&#39;V&gt;</div>
<div class="tip" id="fs14">val groupBy : f:(&#39;a -&gt; &#39;b) -&gt; asq:AsyncSeq&lt;&#39;a&gt; -&gt; AsyncSeq&lt;&#39;b * AsyncSeq&lt;&#39;a&gt;&gt; (requires equality and comparison)</div>
<div class="tip" id="fs15">val f : (&#39;a -&gt; &#39;b) (requires equality and comparison)</div>
<div class="tip" id="fs16">val asq : AsyncSeq&lt;&#39;a&gt; (requires equality)</div>
<div class="tip" id="fs17">val agent : MailboxProcessor&lt;Message&lt;&#39;b,&#39;a&gt;&gt; (requires comparison and equality)</div>
<div class="tip" id="fs18">Multiple items<br />type MailboxProcessor&lt;&#39;Msg&gt; =<br />&#160;&#160;interface IDisposable<br />&#160;&#160;new : body:(MailboxProcessor&lt;&#39;Msg&gt; -&gt; Async&lt;unit&gt;) * ?cancellationToken:CancellationToken -&gt; MailboxProcessor&lt;&#39;Msg&gt;<br />&#160;&#160;member Post : message:&#39;Msg -&gt; unit<br />&#160;&#160;member PostAndAsyncReply : buildMessage:(AsyncReplyChannel&lt;&#39;Reply&gt; -&gt; &#39;Msg) * ?timeout:int -&gt; Async&lt;&#39;Reply&gt;<br />&#160;&#160;member PostAndReply : buildMessage:(AsyncReplyChannel&lt;&#39;Reply&gt; -&gt; &#39;Msg) * ?timeout:int -&gt; &#39;Reply<br />&#160;&#160;member PostAndTryAsyncReply : buildMessage:(AsyncReplyChannel&lt;&#39;Reply&gt; -&gt; &#39;Msg) * ?timeout:int -&gt; Async&lt;&#39;Reply option&gt;<br />&#160;&#160;member Receive : ?timeout:int -&gt; Async&lt;&#39;Msg&gt;<br />&#160;&#160;member Scan : scanner:(&#39;Msg -&gt; Async&lt;&#39;T&gt; option) * ?timeout:int -&gt; Async&lt;&#39;T&gt;<br />&#160;&#160;member Start : unit -&gt; unit<br />&#160;&#160;member TryPostAndReply : buildMessage:(AsyncReplyChannel&lt;&#39;Reply&gt; -&gt; &#39;Msg) * ?timeout:int -&gt; &#39;Reply option<br />&#160;&#160;...<br /><br />--------------------<br />new : body:(MailboxProcessor&lt;&#39;Msg&gt; -&gt; Async&lt;unit&gt;) * ?cancellationToken:System.Threading.CancellationToken -&gt; MailboxProcessor&lt;&#39;Msg&gt;</div>
<div class="tip" id="fs19">static member MailboxProcessor.Start : body:(MailboxProcessor&lt;&#39;Msg&gt; -&gt; Async&lt;unit&gt;) * ?cancellationToken:System.Threading.CancellationToken -&gt; MailboxProcessor&lt;&#39;Msg&gt;</div>
<div class="tip" id="fs20">val en : IAsyncEnumerator&lt;&#39;a&gt; (requires equality)</div>
<div class="tip" id="fs21">abstract member IAsyncEnumerable.GetEnumerator : unit -&gt; IAsyncEnumerator&lt;&#39;T&gt;</div>
<div class="tip" id="fs22">val fetchNext : (Map&lt;&#39;b,(bool * (bool * &#39;a) list)&gt; -&gt; Async&lt;Map&lt;&#39;b,(bool * (bool * &#39;a) list)&gt; option&gt;) (requires comparison and equality)</div>
<div class="tip" id="fs23">val groups : Map&lt;&#39;b,(bool * (bool * &#39;a) list)&gt; (requires comparison and equality)</div>
<div class="tip" id="fs24">val async : AsyncBuilder</div>
<div class="tip" id="fs25">val next : &#39;a option (requires equality)</div>
<div class="tip" id="fs26">abstract member IAsyncEnumerator.MoveNext : unit -&gt; Async&lt;&#39;T option&gt;</div>
<div class="tip" id="fs27">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs28">val n : &#39;a (requires equality)</div>
<div class="tip" id="fs29">val printfn : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T</div>
<div class="tip" id="fs30">val k : &#39;b (requires comparison)</div>
<div class="tip" id="fs31">Multiple items<br />module Map<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Map&lt;&#39;Key,&#39;Value (requires comparison)&gt; =<br />&#160;&#160;interface IReadOnlyDictionary&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;interface IReadOnlyCollection&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface ICollection&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface IDictionary&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member Add : key:&#39;Key * value:&#39;Value -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member ContainsKey : key:&#39;Key -&gt; bool<br />&#160;&#160;...<br /><br />--------------------<br />new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;</div>
<div class="tip" id="fs32">val containsKey : key:&#39;Key -&gt; table:Map&lt;&#39;Key,&#39;T&gt; -&gt; bool (requires comparison)</div>
<div class="tip" id="fs33">val returned : bool</div>
<div class="tip" id="fs34">val g : (bool * &#39;a) list (requires equality)</div>
<div class="tip" id="fs35">val ng : (bool * &#39;a) list (requires equality)</div>
<div class="tip" id="fs36">val add : key:&#39;Key -&gt; value:&#39;T -&gt; table:Map&lt;&#39;Key,&#39;T&gt; -&gt; Map&lt;&#39;Key,&#39;T&gt; (requires comparison)</div>
<div class="tip" id="fs37">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs38">val groupSeq : (&#39;b -&gt; AsyncSeq&lt;&#39;a&gt;) (requires comparison and equality)</div>
<div class="tip" id="fs39">val res : &#39;a option (requires equality)</div>
<div class="tip" id="fs40">member MailboxProcessor.PostAndAsyncReply : buildMessage:(AsyncReplyChannel&lt;&#39;Reply&gt; -&gt; &#39;Msg) * ?timeout:int -&gt; Async&lt;&#39;Reply&gt;</div>
<div class="tip" id="fs41">val r : AsyncReplyChannel&lt;&#39;a option&gt; (requires equality)</div>
<div class="tip" id="fs42">val v : &#39;a (requires equality)</div>
<div class="tip" id="fs43">val loop : (Map&lt;&#39;b,(bool * (bool * &#39;a) list)&gt; -&gt; Async&lt;unit&gt;) (requires comparison and equality)</div>
<div class="tip" id="fs44">val msg : Message&lt;&#39;b,&#39;a&gt; (requires comparison and equality)</div>
<div class="tip" id="fs45">member MailboxProcessor.Receive : ?timeout:int -&gt; Async&lt;&#39;Msg&gt;</div>
<div class="tip" id="fs46">val repl : AsyncReplyChannel&lt;&#39;a option&gt; (requires equality)</div>
<div class="tip" id="fs47">val find : key:&#39;Key -&gt; table:Map&lt;&#39;Key,&#39;T&gt; -&gt; &#39;T (requires comparison)</div>
<div class="tip" id="fs48">val v : (bool * &#39;a) option (requires equality)</div>
<div class="tip" id="fs49">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;&#160;&#160;interface IReadOnlyList&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;interface IReadOnlyCollection&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;interface IEnumerable<br />&#160;&#160;&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;member GetReverseIndex : rank:int * offset:int -&gt; int<br />&#160;&#160;&#160;&#160;member GetSlice : startIndex:int option * endIndex:int option -&gt; &#39;T list<br />&#160;&#160;&#160;&#160;member Head : &#39;T<br />&#160;&#160;&#160;&#160;member IsEmpty : bool<br />&#160;&#160;&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;&#160;&#160;member Length : int<br />&#160;&#160;&#160;&#160;...</div>
<div class="tip" id="fs50">val tryFind : predicate:(&#39;T -&gt; bool) -&gt; list:&#39;T list -&gt; &#39;T option</div>
<div class="tip" id="fs51">val not : value:bool -&gt; bool</div>
<div class="tip" id="fs52">val groups : Map&lt;&#39;b,(bool * (bool * &#39;a) list)&gt; option (requires comparison and equality)</div>
<div class="tip" id="fs53">member AsyncReplyChannel.Reply : value:&#39;Reply -&gt; unit</div>
<div class="tip" id="fs54">member MailboxProcessor.Post : message:&#39;Msg -&gt; unit</div>
<div class="tip" id="fs55">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list</div>
<div class="tip" id="fs56">val v&#39; : &#39;a (requires equality)</div>
<div class="tip" id="fs57">val repl : AsyncReplyChannel&lt;(&#39;b * AsyncSeq&lt;&#39;a&gt;) option&gt; (requires comparison and equality)</div>
<div class="tip" id="fs58">val k : &#39;b option (requires comparison)</div>
<div class="tip" id="fs59">val tryFindKey : predicate:(&#39;Key -&gt; &#39;T -&gt; bool) -&gt; table:Map&lt;&#39;Key,&#39;T&gt; -&gt; &#39;Key option (requires comparison)</div>
<div class="tip" id="fs60">val empty&lt;&#39;Key,&#39;T (requires comparison)&gt; : Map&lt;&#39;Key,&#39;T&gt; (requires comparison)</div>
<div class="tip" id="fs61">val groups : (unit -&gt; AsyncSeq&lt;&#39;b * AsyncSeq&lt;&#39;a&gt;&gt;) (requires comparison and equality)</div>
<div class="tip" id="fs62">val next : (&#39;b * AsyncSeq&lt;&#39;a&gt;) option (requires comparison and equality)</div>
<div class="tip" id="fs63">val g : &#39;b * AsyncSeq&lt;&#39;a&gt; (requires comparison and equality)</div>
<div class="tip" id="fs64">val k : int</div>
<div class="tip" id="fs65">val map : folder:(&#39;T -&gt; &#39;U) -&gt; source:AsyncSeq&lt;&#39;T&gt; -&gt; AsyncSeq&lt;&#39;U&gt;</div>
<div class="tip" id="fs66">val v : AsyncSeq&lt;int&gt;</div>
<div class="tip" id="fs67">val toArraySynchronously : source:AsyncSeq&lt;&#39;T&gt; -&gt; &#39;T []</div>

