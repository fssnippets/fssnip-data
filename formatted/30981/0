<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l">  1: </span>
<span class="l">  2: </span>
<span class="l">  3: </span>
<span class="l">  4: </span>
<span class="l">  5: </span>
<span class="l">  6: </span>
<span class="l">  7: </span>
<span class="l">  8: </span>
<span class="l">  9: </span>
<span class="l"> 10: </span>
<span class="l"> 11: </span>
<span class="l"> 12: </span>
<span class="l"> 13: </span>
<span class="l"> 14: </span>
<span class="l"> 15: </span>
<span class="l"> 16: </span>
<span class="l"> 17: </span>
<span class="l"> 18: </span>
<span class="l"> 19: </span>
<span class="l"> 20: </span>
<span class="l"> 21: </span>
<span class="l"> 22: </span>
<span class="l"> 23: </span>
<span class="l"> 24: </span>
<span class="l"> 25: </span>
<span class="l"> 26: </span>
<span class="l"> 27: </span>
<span class="l"> 28: </span>
<span class="l"> 29: </span>
<span class="l"> 30: </span>
<span class="l"> 31: </span>
<span class="l"> 32: </span>
<span class="l"> 33: </span>
<span class="l"> 34: </span>
<span class="l"> 35: </span>
<span class="l"> 36: </span>
<span class="l"> 37: </span>
<span class="l"> 38: </span>
<span class="l"> 39: </span>
<span class="l"> 40: </span>
<span class="l"> 41: </span>
<span class="l"> 42: </span>
<span class="l"> 43: </span>
<span class="l"> 44: </span>
<span class="l"> 45: </span>
<span class="l"> 46: </span>
<span class="l"> 47: </span>
<span class="l"> 48: </span>
<span class="l"> 49: </span>
<span class="l"> 50: </span>
<span class="l"> 51: </span>
<span class="l"> 52: </span>
<span class="l"> 53: </span>
<span class="l"> 54: </span>
<span class="l"> 55: </span>
<span class="l"> 56: </span>
<span class="l"> 57: </span>
<span class="l"> 58: </span>
<span class="l"> 59: </span>
<span class="l"> 60: </span>
<span class="l"> 61: </span>
<span class="l"> 62: </span>
<span class="l"> 63: </span>
<span class="l"> 64: </span>
<span class="l"> 65: </span>
<span class="l"> 66: </span>
<span class="l"> 67: </span>
<span class="l"> 68: </span>
<span class="l"> 69: </span>
<span class="l"> 70: </span>
<span class="l"> 71: </span>
<span class="l"> 72: </span>
<span class="l"> 73: </span>
<span class="l"> 74: </span>
<span class="l"> 75: </span>
<span class="l"> 76: </span>
<span class="l"> 77: </span>
<span class="l"> 78: </span>
<span class="l"> 79: </span>
<span class="l"> 80: </span>
<span class="l"> 81: </span>
<span class="l"> 82: </span>
<span class="l"> 83: </span>
<span class="l"> 84: </span>
<span class="l"> 85: </span>
<span class="l"> 86: </span>
<span class="l"> 87: </span>
<span class="l"> 88: </span>
<span class="l"> 89: </span>
<span class="l"> 90: </span>
<span class="l"> 91: </span>
<span class="l"> 92: </span>
<span class="l"> 93: </span>
<span class="l"> 94: </span>
<span class="l"> 95: </span>
<span class="l"> 96: </span>
<span class="l"> 97: </span>
<span class="l"> 98: </span>
<span class="l"> 99: </span>
<span class="l">100: </span>
<span class="l">101: </span>
<span class="l">102: </span>
<span class="l">103: </span>
<span class="l">104: </span>
<span class="l">105: </span>
<span class="l">106: </span>
<span class="l">107: </span>
<span class="l">108: </span>
<span class="l">109: </span>
<span class="l">110: </span>
<span class="l">111: </span>
<span class="l">112: </span>
<span class="l">113: </span>
<span class="l">114: </span>
<span class="l">115: </span>
<span class="l">116: </span>
<span class="l">117: </span>
<span class="l">118: </span>
<span class="l">119: </span>
<span class="l">120: </span>
<span class="l">121: </span>
<span class="l">122: </span>
<span class="l">123: </span>
<span class="l">124: </span>
<span class="l">125: </span>
<span class="l">126: </span>
<span class="l">127: </span>
<span class="l">128: </span>
<span class="l">129: </span>
<span class="l">130: </span>
<span class="l">131: </span>
<span class="l">132: </span>
<span class="l">133: </span>
<span class="l">134: </span>
<span class="l">135: </span>
<span class="l">136: </span>
<span class="l">137: </span>
<span class="l">138: </span>
<span class="l">139: </span>
<span class="l">140: </span>
<span class="l">141: </span>
<span class="l">142: </span>
<span class="l">143: </span>
<span class="l">144: </span>
<span class="l">145: </span>
<span class="l">146: </span>
<span class="l">147: </span>
<span class="l">148: </span>
<span class="l">149: </span>
<span class="l">150: </span>
<span class="l">151: </span>
<span class="l">152: </span>
<span class="l">153: </span>
<span class="l">154: </span>
<span class="l">155: </span>
<span class="l">156: </span>
<span class="l">157: </span>
<span class="l">158: </span>
<span class="l">159: </span>
<span class="l">160: </span>
<span class="l">161: </span>
<span class="l">162: </span>
<span class="l">163: </span>
<span class="l">164: </span>
<span class="l">165: </span>
<span class="l">166: </span>
<span class="l">167: </span>
<span class="l">168: </span>
<span class="l">169: </span>
<span class="l">170: </span>
<span class="l">171: </span>
<span class="l">172: </span>
<span class="l">173: </span>
<span class="l">174: </span>
<span class="l">175: </span>
<span class="l">176: </span>
<span class="l">177: </span>
<span class="l">178: </span>
<span class="l">179: </span>
<span class="l">180: </span>
<span class="l">181: </span>
<span class="l">182: </span>
<span class="l">183: </span>
<span class="l">184: </span>
<span class="l">185: </span>
<span class="l">186: </span>
<span class="l">187: </span>
<span class="l">188: </span>
<span class="l">189: </span>
<span class="l">190: </span>
<span class="l">191: </span>
<span class="l">192: </span>
<span class="l">193: </span>
<span class="l">194: </span>
<span class="l">195: </span>
<span class="l">196: </span>
<span class="l">197: </span>
<span class="l">198: </span>
<span class="l">199: </span>
<span class="l">200: </span>
<span class="l">201: </span>
<span class="l">202: </span>
<span class="l">203: </span>
<span class="l">204: </span>
<span class="l">205: </span>
<span class="l">206: </span>
<span class="l">207: </span>
<span class="l">208: </span>
<span class="l">209: </span>
<span class="l">210: </span>
<span class="l">211: </span>
<span class="l">212: </span>
<span class="l">213: </span>
<span class="l">214: </span>
<span class="l">215: </span>
<span class="l">216: </span>
<span class="l">217: </span>
<span class="l">218: </span>
<span class="l">219: </span>
<span class="l">220: </span>
<span class="l">221: </span>
<span class="l">222: </span>
<span class="l">223: </span>
<span class="l">224: </span>
<span class="l">225: </span>
<span class="l">226: </span>
<span class="l">227: </span>
<span class="l">228: </span>
<span class="l">229: </span>
<span class="l">230: </span>
<span class="l">231: </span>
<span class="l">232: </span>
<span class="l">233: </span>
<span class="l">234: </span>
<span class="l">235: </span>
<span class="l">236: </span>
<span class="l">237: </span>
<span class="l">238: </span>
<span class="l">239: </span>
<span class="l">240: </span>
<span class="l">241: </span>
<span class="l">242: </span>
<span class="l">243: </span>
<span class="l">244: </span>
<span class="l">245: </span>
<span class="l">246: </span>
<span class="l">247: </span>
<span class="l">248: </span>
<span class="l">249: </span>
<span class="l">250: </span>
<span class="l">251: </span>
<span class="l">252: </span>
<span class="l">253: </span>
<span class="l">254: </span>
<span class="l">255: </span>
<span class="l">256: </span>
<span class="l">257: </span>
<span class="l">258: </span>
<span class="l">259: </span>
<span class="l">260: </span>
<span class="l">261: </span>
<span class="l">262: </span>
<span class="l">263: </span>
<span class="l">264: </span>
<span class="l">265: </span>
<span class="l">266: </span>
<span class="l">267: </span>
<span class="l">268: </span>
<span class="l">269: </span>
<span class="l">270: </span>
<span class="l">271: </span>
<span class="l">272: </span>
<span class="l">273: </span>
<span class="l">274: </span>
<span class="l">275: </span>
<span class="l">276: </span>
<span class="l">277: </span>
<span class="l">278: </span>
<span class="l">279: </span>
<span class="l">280: </span>
<span class="l">281: </span>
<span class="l">282: </span>
<span class="l">283: </span>
<span class="l">284: </span>
<span class="l">285: </span>
<span class="l">286: </span>
<span class="l">287: </span>
<span class="l">288: </span>
<span class="l">289: </span>
<span class="l">290: </span>
<span class="l">291: </span>
<span class="l">292: </span>
<span class="l">293: </span>
<span class="l">294: </span>
<span class="l">295: </span>
<span class="l">296: </span>
<span class="l">297: </span>
<span class="l">298: </span>
<span class="l">299: </span>
<span class="l">300: </span>
<span class="l">301: </span>
<span class="l">302: </span>
<span class="l">303: </span>
<span class="l">304: </span>
<span class="l">305: </span>
<span class="l">306: </span>
<span class="l">307: </span>
<span class="l">308: </span>
<span class="l">309: </span>
<span class="l">310: </span>
<span class="l">311: </span>
<span class="l">312: </span>
<span class="l">313: </span>
<span class="l">314: </span>
<span class="l">315: </span>
<span class="l">316: </span>
<span class="l">317: </span>
<span class="l">318: </span>
<span class="l">319: </span>
<span class="l">320: </span>
<span class="l">321: </span>
<span class="l">322: </span>
<span class="l">323: </span>
<span class="l">324: </span>
<span class="l">325: </span>
<span class="l">326: </span>
<span class="l">327: </span>
<span class="l">328: </span>
<span class="l">329: </span>
<span class="l">330: </span>
<span class="l">331: </span>
<span class="l">332: </span>
<span class="l">333: </span>
<span class="l">334: </span>
<span class="l">335: </span>
<span class="l">336: </span>
<span class="l">337: </span>
<span class="l">338: </span>
<span class="l">339: </span>
<span class="l">340: </span>
<span class="l">341: </span>
<span class="l">342: </span>
<span class="l">343: </span>
<span class="l">344: </span>
<span class="l">345: </span>
<span class="l">346: </span>
<span class="l">347: </span>
<span class="l">348: </span>
<span class="l">349: </span>
<span class="l">350: </span>
<span class="l">351: </span>
<span class="l">352: </span>
<span class="l">353: </span>
<span class="l">354: </span>
<span class="l">355: </span>
<span class="l">356: </span>
<span class="l">357: </span>
<span class="l">358: </span>
<span class="l">359: </span>
<span class="l">360: </span>
<span class="l">361: </span>
<span class="l">362: </span>
<span class="l">363: </span>
<span class="l">364: </span>
<span class="l">365: </span>
<span class="l">366: </span>
<span class="l">367: </span>
<span class="l">368: </span>
<span class="l">369: </span>
<span class="l">370: </span>
<span class="l">371: </span>
<span class="l">372: </span>
<span class="l">373: </span>
<span class="l">374: </span>
<span class="l">375: </span>
<span class="l">376: </span>
<span class="l">377: </span>
<span class="l">378: </span>
<span class="l">379: </span>
<span class="l">380: </span>
<span class="l">381: </span>
<span class="l">382: </span>
<span class="l">383: </span>
<span class="l">384: </span>
<span class="l">385: </span>
<span class="l">386: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="m">#r</span> <span class="s">&quot;nuget: Deedle&quot;</span>
<span class="pp">#r</span> <span class="s">&quot;nuget: NodaTime&quot;</span>

<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="id">System</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 2)" onmouseover="showTip(event, 'fs1', 2)" class="id">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs2', 3)" onmouseover="showTip(event, 'fs2', 3)" class="id">IO</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 4)" onmouseover="showTip(event, 'fs1', 4)" class="id">System</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="id">Globalization</span>
<span class="k">open</span> <span class="id">Deedle</span>
<span class="k">open</span> <span class="id">NodaTime</span>
<span class="k">open</span> <span class="id">NodaTime</span><span class="pn">.</span><span class="id">Text</span>

<span class="k">type</span> <span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="rt">Report</span> <span class="o">=</span>
    <span class="pn">{</span> <span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="id">Start</span><span class="pn">:</span> <span class="id">LocalDateTime</span>
      <span onmouseout="hideTip(event, 'fs6', 8)" onmouseover="showTip(event, 'fs6', 8)" class="id">End</span><span class="pn">:</span> <span class="id">LocalDateTime</span>
      <span onmouseout="hideTip(event, 'fs7', 9)" onmouseover="showTip(event, 'fs7', 9)" class="id">TotalReviews</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs8', 10)" onmouseover="showTip(event, 'fs8', 10)" class="vt">int</span>
      <span onmouseout="hideTip(event, 'fs9', 11)" onmouseover="showTip(event, 'fs9', 11)" class="id">General</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs10', 12)" onmouseover="showTip(event, 'fs10', 12)" class="rt">Map</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs11', 13)" onmouseover="showTip(event, 'fs11', 13)" class="rt">string</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs8', 14)" onmouseover="showTip(event, 'fs8', 14)" class="vt">int</span><span class="pn">&gt;</span>
      <span onmouseout="hideTip(event, 'fs12', 15)" onmouseover="showTip(event, 'fs12', 15)" class="id">Tdd</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs10', 16)" onmouseover="showTip(event, 'fs10', 16)" class="rt">Map</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs11', 17)" onmouseover="showTip(event, 'fs11', 17)" class="rt">string</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs8', 18)" onmouseover="showTip(event, 'fs8', 18)" class="vt">int</span><span class="pn">&gt;</span>
      <span onmouseout="hideTip(event, 'fs13', 19)" onmouseover="showTip(event, 'fs13', 19)" class="id">RequirementsGathering</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs10', 20)" onmouseover="showTip(event, 'fs10', 20)" class="rt">Map</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs11', 21)" onmouseover="showTip(event, 'fs11', 21)" class="rt">string</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs8', 22)" onmouseover="showTip(event, 'fs8', 22)" class="vt">int</span><span class="pn">&gt;</span>
      <span onmouseout="hideTip(event, 'fs14', 23)" onmouseover="showTip(event, 'fs14', 23)" class="id">Debugging</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs10', 24)" onmouseover="showTip(event, 'fs10', 24)" class="rt">Map</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs11', 25)" onmouseover="showTip(event, 'fs11', 25)" class="rt">string</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs8', 26)" onmouseover="showTip(event, 'fs8', 26)" class="vt">int</span><span class="pn">&gt;</span>
      <span onmouseout="hideTip(event, 'fs15', 27)" onmouseover="showTip(event, 'fs15', 27)" class="id">Weeks</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs10', 28)" onmouseover="showTip(event, 'fs10', 28)" class="rt">Map</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs11', 29)" onmouseover="showTip(event, 'fs11', 29)" class="rt">string</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs8', 30)" onmouseover="showTip(event, 'fs8', 30)" class="vt">int</span><span class="pn">&gt;</span>
      <span onmouseout="hideTip(event, 'fs16', 31)" onmouseover="showTip(event, 'fs16', 31)" class="id">Surprises</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs17', 32)" onmouseover="showTip(event, 'fs17', 32)" class="if">seq</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs11', 33)" onmouseover="showTip(event, 'fs11', 33)" class="rt">string</span><span class="pn">&gt;</span>
      <span onmouseout="hideTip(event, 'fs18', 34)" onmouseover="showTip(event, 'fs18', 34)" class="id">Flags</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs17', 35)" onmouseover="showTip(event, 'fs17', 35)" class="if">seq</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs11', 36)" onmouseover="showTip(event, 'fs11', 36)" class="rt">string</span><span class="pn">&gt;</span> <span class="pn">}</span>

<span class="k">module</span> <span onmouseout="hideTip(event, 'fs19', 37)" onmouseover="showTip(event, 'fs19', 37)" class="m">Format</span> <span class="o">=</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs20', 38)" onmouseover="showTip(event, 'fs20', 38)" class="id">culture</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs21', 39)" onmouseover="showTip(event, 'fs21', 39)" class="rt">CultureInfo</span> <span class="s">&quot;en-GB&quot;</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs22', 40)" onmouseover="showTip(event, 'fs22', 40)" class="id">date</span> <span class="o">=</span> <span class="s">&quot;d/M/yyyy&quot;</span>

    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs23', 41)" onmouseover="showTip(event, 'fs23', 41)" class="id">dateTime</span> <span class="o">=</span> $&quot;<span class="pn">{</span><span onmouseout="hideTip(event, 'fs22', 42)" onmouseover="showTip(event, 'fs22', 42)" class="id">date</span><span class="pn">}</span> <span class="id">h</span><span class="pn">:</span><span class="id">mmtt</span><span class="s">&quot;</span>

<span class="s">    let longDate = &quot;</span><span class="id">d</span> <span class="id">MMM</span> <span class="id">yyyy</span><span class="s">&quot;</span>

<span class="s">module Column =</span>

<span class="s">    let date = &quot;</span><span class="id">Date</span><span class="s">&quot;</span>

<span class="s">    let uuid = &quot;</span><span class="id">Review</span><span class="s">&quot;</span>

<span class="s">    let general = &quot;</span><span class="id">General</span> <span class="id">aspects</span> <span class="id">about</span> <span class="id">the</span> <span class="id">review</span><span class="s">&quot;</span>

<span class="s">    let surprises = &quot;</span><span class="id">New</span> <span class="id">trend</span> <span class="k">or</span> <span class="id">surprising</span> <span class="id">behaviour</span><span class="s">&quot;</span>

<span class="s">    let tdd = &quot;</span><span class="id">TDD</span> <span class="id">process</span><span class="s">&quot;</span>

<span class="s">    let requirements = &quot;</span><span class="id">Requirements</span><span class="o">-</span><span class="id">gathering</span> <span class="id">process</span><span class="s">&quot;</span>

<span class="s">    let debugging = &quot;</span><span class="id">Debugging</span> <span class="id">process</span><span class="s">&quot;</span>

<span class="s">    let week = &quot;</span><span class="id">Week</span> <span class="pn">(</span><span class="id">from</span> <span class="id">Review</span><span class="pn">)</span><span class="s">&quot;</span>

<span class="s">    let trends column = $&quot;</span><span class="id">Trends</span> <span class="o">-</span> <span class="pn">{</span><span class="pn">(</span><span class="id">column</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs11', 43)" onmouseover="showTip(event, 'fs11', 43)" class="id">string</span><span class="pn">)</span><span class="pn">}</span><span class="s">&quot;</span>

<span class="s">module Header =</span>

<span class="s">    let frequency = &quot;</span><span class="id">Trends</span> <span class="id">frequency</span><span class="s">&quot;</span>

<span class="s">    let general = &quot;</span><span class="id">General</span><span class="s">&quot;</span>

<span class="s">    let tdd = Column.tdd</span>

<span class="s">    let debugging = Column.debugging</span>

<span class="s">    let requirements = Column.requirements</span>

<span class="s">    let week = &quot;</span><span class="id">Review</span> <span class="id">weeks</span><span class="s">&quot;</span>

<span class="s">    let surprises = &quot;</span><span class="id">Surprising</span> <span class="id">behaviour</span><span class="s">&quot;</span>

<span class="s">    let flags = &quot;</span><span class="id">Devs</span> <span class="id">flagged</span> <span class="k">for</span> <span class="id">attention</span> <span class="pn">(</span><span class="k">with</span> <span class="id">at</span> <span class="id">least</span> <span class="n">4</span> <span class="id">negative</span> <span class="id">trends</span> 
        <span class="k">and</span> <span class="id">no</span> <span class="id">notable</span> <span class="id">improvement</span><span class="pn">)</span><span class="s">&quot;</span>

<span class="s">module Trend =</span>

<span class="s">    let cancellations = &quot;</span><span class="id">Cancellations</span><span class="s">&quot;</span>

<span class="s">    let positive = &quot;</span><span class="id">Notable</span> <span class="id">improvement</span> <span class="id">between</span> <span class="id">sessions</span><span class="s">&quot;</span>

<span class="s">    let reviewTotal = &quot;</span><span class="id">Total</span> <span class="id">reviews</span> <span class="id">during</span> <span class="id">this</span> <span class="id">period</span><span class="s">&quot;</span>

<span class="s">    let exclusions =</span>
<span class="s">        [ &quot;</span><span class="id">No</span><span class="o">-</span><span class="id">show</span><span class="s">&quot;</span>
<span class="s">          &quot;</span><span class="id">No</span> <span class="id">UUID</span> <span class="id">provided</span><span class="s">&quot;</span>
<span class="s">          positive</span>
<span class="s">          &quot;</span><span class="id">UUID</span> <span class="id">error</span><span class="s">&quot; ]</span>

<span class="s">    let containers =</span>
<span class="s">        [ Column.tdd</span>
<span class="s">          Column.requirements</span>
<span class="s">          Column.debugging</span>
<span class="s">          Column.general ]</span>

<span class="s">    let week =</span>
<span class="s">        {| Invalid = &quot;</span><span class="id">NaN</span><span class="s">&quot;</span>
<span class="s">           Before = &quot;B</span><span class="id">efore</span> <span class="id">Week</span> <span class="n">12</span><span class="s">&quot;</span>
<span class="s">           After = &quot;</span><span class="id">After</span> <span class="id">Week</span> <span class="n">12</span><span class="s">&quot; |}</span>

<span class="s">module Read =</span>

<span class="s">    module private Message =</span>

<span class="s">        let start = &quot;</span><span class="id">Start</span> <span onmouseout="hideTip(event, 'fs22', 44)" onmouseover="showTip(event, 'fs22', 44)" class="id">date</span><span class="pn">:</span> <span class="s">&quot;</span>

<span class="s">        let end&#39; = &quot;</span><span class="id">End</span> <span onmouseout="hideTip(event, 'fs22', 45)" onmouseover="showTip(event, 'fs22', 45)" class="id">date</span><span class="pn">:</span> <span class="s">&quot;</span>

<span class="s">        let csvPath = &quot;</span><span class="id">Reviews</span> <span class="id">CSV</span> <span class="id">path</span><span class="pn">:</span> <span class="s">&quot;</span>

<span class="s">        let cancellations =</span>
<span class="s">            &quot;</span><span class="id">Number</span> <span class="k">of</span> <span class="id">cancellations</span> <span class="k">in</span> <span class="id">the</span> <span class="id">period</span><span class="pn">:</span> <span class="s">&quot;</span>

<span class="s">        let acceptFlags = &quot;</span><span class="id">Y</span><span class="o">/</span><span class="id">n</span> <span class="k">to</span> <span class="id">accept</span> <span class="k">or</span> <span class="id">reject</span> <span class="id">these</span> <span class="id">flags</span><span class="pn">:</span><span class="s">&quot;</span>

<span class="s">        let reportPath = &quot;</span><span class="id">Target</span> <span class="id">report</span> <span class="id">path</span><span class="pn">:</span> <span class="s">&quot;</span>

<span class="s">    let private input message =</span>
<span class="s">        printf &quot;</span><span class="o">%</span><span class="id">s</span><span class="s">&quot; message</span>
<span class="s">        Console.ReadLine()</span>

<span class="s">    let private parseDate schema message =</span>
<span class="s">        let pattern =</span>
<span class="s">            LocalDateTimePattern.Create(schema, Format.culture)</span>

<span class="s">        let result = pattern.Parse message</span>

<span class="s">        if result.Success then</span>
<span class="s">            Some result.Value</span>
<span class="s">        else</span>
<span class="s">            None</span>

<span class="s">    let rec private userDate message () =</span>
<span class="s">        match message |&gt; input |&gt; parseDate Format.date with</span>
<span class="s">        | Some date -&gt; date</span>
<span class="s">        | None -&gt; userDate message ()</span>

<span class="s">    let private startDate = userDate Message.start</span>

<span class="s">    let private endDate = userDate Message.end&#39;</span>

<span class="s">    let private csvDate value = parseDate Format.dateTime value</span>

<span class="s">    let rec private archive () =</span>
<span class="s">        try</span>
<span class="s">            input Message.csvPath</span>
<span class="s">            |&gt; Frame.ReadCsv</span>
<span class="s">            |&gt; Frame.rows</span>
<span class="s">        with :? FileNotFoundException -&gt; archive ()</span>

<span class="s">    let private reviewInRange start end&#39; (row: ObjectSeries&lt;string&gt;) =</span>
<span class="s">        let date = row.GetAs&lt;string&gt; Column.date |&gt; csvDate</span>
<span class="s">        date &gt;= start &amp;&amp; date &lt; end&#39;</span>

<span class="s">    let rec private reviews archive start end&#39; =</span>
<span class="s">        (archive: Series&lt;int, ObjectSeries&lt;string&gt;&gt;)</span>
<span class="s">        |&gt; Series.filterValues (reviewInRange start end&#39;)</span>

<span class="s">    let rec cancellations () =</span>
<span class="s">        let userInput = input Message.cancellations</span>

<span class="s">        try</span>
<span class="s">            Int32.Parse userInput</span>
<span class="s">        with :? FormatException -&gt; cancellations ()</span>

<span class="s">    let acceptFlags names =</span>
<span class="s">        printfn &quot;</span><span class="o">%</span><span class="id">s</span><span class="s">&quot; Message.acceptFlags</span>

<span class="s">        let rec predicate name =</span>
<span class="s">            match input $&quot;</span><span class="pn">{</span><span class="id">name</span><span class="pn">}</span><span class="pn">:</span> <span class="s">&quot; |&gt; fun s -&gt; s.ToLower() with</span>
<span class="s">            | &quot;</span><span class="id">y</span><span class="s">&quot;</span>
<span class="s">            | &quot;</span><span class="id">yes</span><span class="s">&quot; -&gt; true</span>
<span class="s">            | &quot;</span><span class="id">n</span><span class="s">&quot;</span>
<span class="s">            | &quot;</span><span class="id">no</span><span class="s">&quot; -&gt; false</span>
<span class="s">            | _ -&gt; predicate name</span>

<span class="s">        Seq.filter predicate names</span>

<span class="s">    let target () = input Message.reportPath</span>

<span class="s">    let report () =</span>
<span class="s">        let start = startDate ()</span>
<span class="s">        let end&#39; = endDate ()</span>
<span class="s">        let archive = archive ()</span>

<span class="s">        {| StartDate = start</span>
<span class="s">           EndDate = end&#39;</span>
<span class="s">           Reviews = reviews archive (Some start) (Some end&#39;)</span>
<span class="s">           Archive = archive |}</span>

<span class="s">module Evaluate =</span>

<span class="s">    let private reviewCount rows = Series.countValues rows</span>

<span class="s">    let private hasTrend (trend: string) (value: string) = value.Contains trend</span>

<span class="s">    let private trendFilter column trend row =</span>
<span class="s">        (row: ObjectSeries&lt;string&gt;).GetAs&lt;string&gt; column</span>
<span class="s">        |&gt; hasTrend trend</span>

<span class="s">    let private trend column label rows =</span>
<span class="s">        let column = Column.trends column</span>

<span class="s">        Series.filterValues (trendFilter column label) rows</span>
<span class="s">        |&gt; Series.countValues</span>
<span class="s">        |&gt; fun count -&gt; label, count</span>

<span class="s">    let private category label trends rows =</span>
<span class="s">        Seq.map (fun t -&gt; trend label t rows) trends</span>

<span class="s">    let private isNonEmpty = String.IsNullOrWhiteSpace &gt;&gt; not</span>

<span class="s">    let private cellIsNonEmpty (column: string) (row: ObjectSeries&lt;string&gt;) = row.GetAs&lt;string&gt; column |&gt; isNonEmpty</span>

<span class="s">    let cell column (row: ObjectSeries&lt;string&gt;) = row.GetAs&lt;string&gt; column</span>

<span class="s">    let private surprisingTrends rows =</span>
<span class="s">        let column = Column.trends Column.surprises</span>

<span class="s">        Series.filterValues (cellIsNonEmpty column) rows</span>
<span class="s">        |&gt; Series.mapValues (cell column)</span>
<span class="s">        |&gt; Series.values</span>

<span class="s">    let private countFolder counts trend =</span>
<span class="s">        let count =</span>
<span class="s">            match Map.tryFind trend counts with</span>
<span class="s">            | None -&gt; 1</span>
<span class="s">            | Some count -&gt; count + 1</span>

<span class="s">        Map.add trend count counts</span>

<span class="s">    let private trendValues (s: string) = s.Split &quot;</span><span class="pn">,</span><span class="s">&quot; |&gt; Array.filter isNonEmpty</span>

<span class="s">    let private countTrend column rows =</span>
<span class="s">        (rows: Series&lt;&#39;a, ObjectSeries&lt;string&gt;&gt;)</span>
<span class="s">        |&gt; Series.mapValues (cell &lt;| Column.trends column)</span>
<span class="s">        |&gt; Series.values</span>
<span class="s">        |&gt; Seq.collect trendValues</span>
<span class="s">        |&gt; Seq.fold countFolder Map.empty</span>

<span class="s">    let private excludeTrend trends excludedTrend = Map.remove excludedTrend trends</span>

<span class="s">    let private countNegativeTrend container rows =</span>
<span class="s">        let trends = countTrend container rows</span>
<span class="s">        Seq.fold excludeTrend trends Trend.exclusions</span>

<span class="s">    let private getUuid (row: ObjectSeries&lt;string&gt;) = row.GetAs&lt;string&gt; Column.uuid</span>

<span class="s">    let private uuidFilter uuid (row: ObjectSeries&lt;string&gt;) = getUuid row = uuid</span>

<span class="s">    let private hasPositive (s: string) = s.Contains Trend.positive</span>

<span class="s">    let private lastImproved uuid rows =</span>
<span class="s">        rows</span>
<span class="s">        |&gt; Series.filterValues (uuidFilter uuid)</span>
<span class="s">        |&gt; Series.lastValue</span>
<span class="s">        |&gt; (Column.trends Column.general |&gt; cell)</span>
<span class="s">        |&gt; hasPositive</span>

<span class="s">    let private hadMultipleReviews archive uuid =</span>
<span class="s">        archive</span>
<span class="s">        |&gt; Series.filterValues (uuidFilter uuid)</span>
<span class="s">        |&gt; Series.countValues</span>
<span class="s">        |&gt; (&lt;&gt;) 1</span>

<span class="s">    let private negativeTrends row container =</span>
<span class="s">        countNegativeTrend container ([ row ] |&gt; Series.ofValues)</span>

<span class="s">    let private countSingleNegatives count trends = Map.count trends + count</span>

<span class="s">    let private hasAtLeast4NegativeTrends (row: ObjectSeries&lt;string&gt;) =</span>
<span class="s">        Trend.containers</span>
<span class="s">        |&gt; Seq.map (negativeTrends row)</span>
<span class="s">        |&gt; Seq.fold countSingleNegatives 0</span>
<span class="s">        |&gt; (fun count -&gt; count &gt;= 4)</span>

<span class="s">    let private didNotImprove rows row =</span>
<span class="s">        getUuid row</span>
<span class="s">        |&gt; fun name -&gt; lastImproved name rows |&gt; not</span>

<span class="s">    let private underperformed rows row =</span>
<span class="s">        hasAtLeast4NegativeTrends row</span>
<span class="s">        &amp;&amp; didNotImprove rows row</span>

<span class="s">    let private devFlagFolder archive rows uuids row =</span>
<span class="s">        let uuid = getUuid row</span>

<span class="s">        if underperformed rows row</span>
<span class="s">           &amp;&amp; hadMultipleReviews archive uuid then</span>
<span class="s">            Set.add uuid uuids</span>
<span class="s">        else</span>
<span class="s">            uuids</span>

<span class="s">    let private flag archive acceptFlags rows =</span>
<span class="s">        Series.foldValues (devFlagFolder archive rows) Set.empty rows</span>
<span class="s">        |&gt; acceptFlags</span>

<span class="s">    let private weekFolder counts row =</span>
<span class="s">        let week = cell Column.week row</span>

<span class="s">        let add trend = countFolder counts trend</span>

<span class="s">        try</span>
<span class="s">            let week = int week</span>

<span class="s">            if week &lt; 12 &amp;&amp; week &gt; 0 then</span>
<span class="s">                add Trend.week.Before</span>
<span class="s">            else if week &gt; 12 then</span>
<span class="s">                add Trend.week.After</span>
<span class="s">            else</span>
<span class="s">                add Trend.week.Invalid</span>
<span class="s">        // FormatException is thrown when the int function fails to parse</span>
<span class="s">        with :? FormatException -&gt; add Trend.week.Invalid</span>

<span class="s">    let private weekCount rows =</span>
<span class="s">        Series.foldValues weekFolder Map.empty rows</span>

<span class="s">    let private tdd rows = countTrend Column.tdd rows</span>

<span class="s">    let private general cancellations rows =</span>
<span class="s">        let counts = countTrend Column.general rows</span>
<span class="s">        Map.add Trend.cancellations (cancellations ()) counts</span>

<span class="s">    let private requirementsGathering rows = countTrend Column.requirements rows</span>

<span class="s">    let private debugging rows = countTrend Column.debugging rows</span>

<span class="s">    let report archive start end&#39; cancellations acceptFlags reviews =</span>
<span class="s">        { Start = start</span>
<span class="s">          End = end&#39;</span>
<span class="s">          TotalReviews = reviewCount reviews</span>
<span class="s">          General = general cancellations reviews</span>
<span class="s">          Tdd = tdd reviews</span>
<span class="s">          RequirementsGathering = requirementsGathering reviews</span>
<span class="s">          Debugging = debugging reviews</span>
<span class="s">          Weeks = weekCount reviews</span>
<span class="s">          Surprises = surprisingTrends reviews</span>
<span class="s">          Flags = flag archive acceptFlags reviews }</span>

<span class="s">module Print =</span>

<span class="s">    let private title startDate endDate =</span>
<span class="s">        let pattern =</span>
<span class="s">            LocalDateTimePattern.Create(Format.longDate, Format.culture)</span>

<span class="s">        $&quot;</span><span class="id">Trend</span> <span class="id">report</span> <span class="k">for</span> <span class="id">period</span><span class="pn">:</span> <span class="pn">{</span><span class="id">pattern</span><span class="pn">.</span><span class="id">Format</span> <span class="id">startDate</span><span class="pn">}</span> <span class="o">-</span> 
         <span class="pn">{</span><span class="id">pattern</span><span class="pn">.</span><span class="id">Format</span> <span class="id">endDate</span><span class="pn">}</span>

    <span class="k">let</span> <span class="k">private</span> <span class="id">frequency</span> <span class="id">label</span> <span class="id">count</span> <span class="o">=</span> $&quot;<span class="pn">{</span><span class="id">label</span><span class="pn">}</span><span class="pn">:</span> <span class="pn">{</span><span class="id">count</span><span class="pn">}</span>

    <span class="k">let</span> <span class="k">private</span> <span class="id">reviewTotal</span> <span class="id">total</span> <span class="o">=</span> <span class="id">frequency</span> <span class="id">Trend</span><span class="pn">.</span><span class="id">reviewTotal</span> <span class="id">total</span>

    <span class="k">let</span> <span class="k">private</span> <span class="id">category</span> <span class="id">folder</span> <span class="id">label</span> <span class="id">values</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs24', 46)" onmouseover="showTip(event, 'fs24', 46)" class="id">Seq</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs25', 47)" onmouseover="showTip(event, 'fs25', 47)" class="id">fold</span> <span class="id">folder</span> $&quot;<span class="pn">{</span><span class="id">label</span><span class="pn">}</span><span class="pn">:</span>

    <span class="k">let</span> <span class="k">private</span> <span class="id">table</span> <span class="id">label</span> <span class="pn">(</span><span class="id">frequencies</span><span class="pn">:</span> <span onmouseout="hideTip(event, 'fs10', 48)" onmouseover="showTip(event, 'fs10', 48)" class="id">Map</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs11', 49)" onmouseover="showTip(event, 'fs11', 49)" class="id">string</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs8', 50)" onmouseover="showTip(event, 'fs8', 50)" class="id">int</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="o">=</span>
        <span class="k">let</span> <span class="id">folder</span> <span class="id">state</span> <span class="pn">(</span><span class="id">key</span><span class="pn">,</span> <span class="id">value</span><span class="pn">)</span> <span class="o">=</span> <span class="id">state</span> <span class="o">+</span> <span class="id">frequency</span> <span class="id">key</span> <span class="id">value</span>

        <span class="id">category</span> <span class="id">folder</span> <span class="id">label</span> <span class="o">&lt;|</span> <span onmouseout="hideTip(event, 'fs10', 51)" onmouseover="showTip(event, 'fs10', 51)" class="id">Map</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs26', 52)" onmouseover="showTip(event, 'fs26', 52)" class="id">toList</span> <span class="id">frequencies</span>

    <span class="k">let</span> <span class="k">private</span> <span class="id">listing</span> <span class="id">label</span> <span class="id">entries</span> <span class="o">=</span>
        <span class="id">category</span> <span class="pn">(</span><span class="k">fun</span> <span class="id">state</span> <span class="id">e</span> <span class="k">-&gt;</span> $&quot;<span class="pn">{</span><span class="id">state</span><span class="pn">}</span><span class="pn">{</span><span class="id">e</span><span class="pn">}</span>

    <span class="k">let</span> <span class="k">private</span> <span class="pn">(</span><span class="pn">.</span><span class="o">+.</span><span class="pn">)</span> <span class="id">report</span> <span class="id">update</span> <span class="o">=</span> <span class="id">report</span> <span class="o">+</span> <span class="s">&quot;\n&quot;</span> <span class="o">+</span> <span class="id">update</span>

    <span class="k">let</span> <span class="k">private</span> <span class="id">write</span> <span class="id">target</span> <span class="id">s</span> <span class="o">=</span>
        <span class="k">use</span> <span class="id">writer</span> <span class="o">=</span> <span class="id">target</span> <span class="pn">(</span><span class="pn">)</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs27', 53)" onmouseover="showTip(event, 'fs27', 53)" class="id">File</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs28', 54)" onmouseover="showTip(event, 'fs28', 54)" class="id">CreateText</span>
        <span onmouseout="hideTip(event, 'fs29', 55)" onmouseover="showTip(event, 'fs29', 55)" class="id">fprintfn</span> <span class="id">writer</span> <span class="s">&quot;%s&quot;</span> <span class="id">s</span>

    <span class="k">let</span> <span class="id">report</span> <span class="id">target</span> <span class="id">value</span> <span class="o">=</span>
        <span class="id">title</span> <span class="id">value</span><span class="pn">.</span><span class="id">Start</span> <span class="id">value</span><span class="pn">.</span><span class="id">End</span>
        <span class="pn">.</span><span class="o">+.</span> <span class="id">reviewTotal</span> <span class="id">value</span><span class="pn">.</span><span class="id">TotalReviews</span>
        <span class="pn">.</span><span class="o">+.</span> $&quot;<span class="pn">{</span><span class="id">Header</span><span class="pn">.</span><span class="id">frequency</span><span class="pn">}</span><span class="pn">:</span>
        <span class="pn">.</span><span class="o">+.</span> <span class="id">table</span> <span class="id">Header</span><span class="pn">.</span><span class="id">general</span> <span class="id">value</span><span class="pn">.</span><span class="id">General</span>
        <span class="pn">.</span><span class="o">+.</span> <span class="id">table</span> <span class="id">Header</span><span class="pn">.</span><span class="id">tdd</span> <span class="id">value</span><span class="pn">.</span><span class="id">Tdd</span>
        <span class="pn">.</span><span class="o">+.</span> <span class="id">table</span> <span class="id">Header</span><span class="pn">.</span><span class="id">requirements</span> <span class="id">value</span><span class="pn">.</span><span class="id">RequirementsGathering</span>
        <span class="pn">.</span><span class="o">+.</span> <span class="id">table</span> <span class="id">Header</span><span class="pn">.</span><span class="id">debugging</span> <span class="id">value</span><span class="pn">.</span><span class="id">Debugging</span>
        <span class="pn">.</span><span class="o">+.</span> <span class="id">table</span> <span class="id">Header</span><span class="pn">.</span><span class="id">week</span> <span class="id">value</span><span class="pn">.</span><span class="id">Weeks</span>
        <span class="pn">.</span><span class="o">+.</span> <span class="id">listing</span> <span class="id">Header</span><span class="pn">.</span><span class="id">surprises</span> <span class="id">value</span><span class="pn">.</span><span class="id">Surprises</span>
        <span class="pn">.</span><span class="o">+.</span> <span class="id">listing</span> <span class="id">Header</span><span class="pn">.</span><span class="id">flags</span> <span class="id">value</span><span class="pn">.</span><span class="id">Flags</span>
        <span class="o">|&gt;</span> <span class="id">write</span> <span class="id">target</span>

<span class="k">let</span> <span class="id">generateReport</span> <span class="pn">(</span><span class="pn">)</span> <span class="o">=</span>
    <span class="k">let</span> <span class="id">data</span> <span class="o">=</span> <span class="id">Read</span><span class="pn">.</span><span class="id">report</span> <span class="pn">(</span><span class="pn">)</span>

    <span class="k">let</span> <span class="id">value</span> <span class="o">=</span>
        <span class="id">Evaluate</span><span class="pn">.</span><span class="id">report</span> <span class="id">data</span><span class="pn">.</span><span class="id">Archive</span> <span class="id">data</span><span class="pn">.</span><span class="id">StartDate</span> <span class="id">data</span><span class="pn">.</span><span class="id">EndDate</span> <span class="id">Read</span><span class="pn">.</span><span class="id">cancellations</span> <span class="id">Read</span><span class="pn">.</span><span class="id">acceptFlags</span> <span class="id">data</span><span class="pn">.</span><span class="id">Reviews</span>

    <span class="id">Print</span><span class="pn">.</span><span class="id">report</span> <span class="id">Read</span><span class="pn">.</span><span class="id">target</span> <span class="id">value</span>

<span class="id">generateReport</span> <span class="pn">(</span><span class="pn">)</span> <span class="c">// Entry point</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace System</div>
<div class="tip" id="fs2">namespace System.IO</div>
<div class="tip" id="fs3">namespace System.Globalization</div>
<div class="tip" id="fs4">type Report =<br />&#160;&#160;{ Start: obj<br />&#160;&#160;&#160;&#160;End: obj<br />&#160;&#160;&#160;&#160;TotalReviews: int<br />&#160;&#160;&#160;&#160;General: Map&lt;string,int&gt;<br />&#160;&#160;&#160;&#160;Tdd: Map&lt;string,int&gt;<br />&#160;&#160;&#160;&#160;RequirementsGathering: Map&lt;string,int&gt;<br />&#160;&#160;&#160;&#160;Debugging: Map&lt;string,int&gt;<br />&#160;&#160;&#160;&#160;Weeks: Map&lt;string,int&gt;<br />&#160;&#160;&#160;&#160;Surprises: seq&lt;string&gt;<br />&#160;&#160;&#160;&#160;Flags: seq&lt;string&gt; }</div>
<div class="tip" id="fs5">Report.Start: obj</div>
<div class="tip" id="fs6">Report.End: obj</div>
<div class="tip" id="fs7">Report.TotalReviews: int</div>
<div class="tip" id="fs8">Multiple items<br />val int : value:&#39;T -&gt; int (requires member op_Explicit)<br /><br />--------------------<br />type int = int32<br /><br />--------------------<br />type int&lt;&#39;Measure&gt; = int</div>
<div class="tip" id="fs9">Report.General: Map&lt;string,int&gt;</div>
<div class="tip" id="fs10">Multiple items<br />module Map<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type Map&lt;&#39;Key,&#39;Value (requires comparison)&gt; =<br />&#160;&#160;interface IReadOnlyDictionary&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;interface IReadOnlyCollection&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface IEnumerable<br />&#160;&#160;interface IComparable<br />&#160;&#160;interface IEnumerable&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface ICollection&lt;KeyValuePair&lt;&#39;Key,&#39;Value&gt;&gt;<br />&#160;&#160;interface IDictionary&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member Add : key:&#39;Key * value:&#39;Value -&gt; Map&lt;&#39;Key,&#39;Value&gt;<br />&#160;&#160;member ContainsKey : key:&#39;Key -&gt; bool<br />&#160;&#160;...<br /><br />--------------------<br />new : elements:seq&lt;&#39;Key * &#39;Value&gt; -&gt; Map&lt;&#39;Key,&#39;Value&gt;</div>
<div class="tip" id="fs11">Multiple items<br />val string : value:&#39;T -&gt; string<br /><br />--------------------<br />type string = String</div>
<div class="tip" id="fs12">Report.Tdd: Map&lt;string,int&gt;</div>
<div class="tip" id="fs13">Report.RequirementsGathering: Map&lt;string,int&gt;</div>
<div class="tip" id="fs14">Report.Debugging: Map&lt;string,int&gt;</div>
<div class="tip" id="fs15">Report.Weeks: Map&lt;string,int&gt;</div>
<div class="tip" id="fs16">Report.Surprises: seq&lt;string&gt;</div>
<div class="tip" id="fs17">Multiple items<br />val seq : sequence:seq&lt;&#39;T&gt; -&gt; seq&lt;&#39;T&gt;<br /><br />--------------------<br />type seq&lt;&#39;T&gt; = Collections.Generic.IEnumerable&lt;&#39;T&gt;</div>
<div class="tip" id="fs18">Multiple items<br />Report.Flags: seq&lt;string&gt;<br /><br />--------------------<br />type FlagsAttribute =<br />&#160;&#160;inherit Attribute<br />&#160;&#160;new : unit -&gt; FlagsAttribute<br /><br />--------------------<br />FlagsAttribute() : FlagsAttribute</div>
<div class="tip" id="fs19">Multiple items<br />module Format<br /><br />from Script<br /><br />--------------------<br />type Format&lt;&#39;Printer,&#39;State,&#39;Residue,&#39;Result&gt; = PrintfFormat&lt;&#39;Printer,&#39;State,&#39;Residue,&#39;Result&gt;<br /><br />--------------------<br />type Format&lt;&#39;Printer,&#39;State,&#39;Residue,&#39;Result,&#39;Tuple&gt; = PrintfFormat&lt;&#39;Printer,&#39;State,&#39;Residue,&#39;Result,&#39;Tuple&gt;</div>
<div class="tip" id="fs20">val culture : CultureInfo</div>
<div class="tip" id="fs21">Multiple items<br />type CultureInfo =<br />&#160;&#160;new : name:string -&gt; CultureInfo + 3 overloads<br />&#160;&#160;member Calendar : Calendar<br />&#160;&#160;member ClearCachedData : unit -&gt; unit<br />&#160;&#160;member Clone : unit -&gt; obj<br />&#160;&#160;member CompareInfo : CompareInfo<br />&#160;&#160;member CultureTypes : CultureTypes<br />&#160;&#160;member DateTimeFormat : DateTimeFormatInfo with get, set<br />&#160;&#160;member DisplayName : string<br />&#160;&#160;member EnglishName : string<br />&#160;&#160;member Equals : value:obj -&gt; bool<br />&#160;&#160;...<br /><br />--------------------<br />CultureInfo(name: string) : CultureInfo<br />CultureInfo(culture: int) : CultureInfo<br />CultureInfo(name: string, useUserOverride: bool) : CultureInfo<br />CultureInfo(culture: int, useUserOverride: bool) : CultureInfo</div>
<div class="tip" id="fs22">val date : string</div>
<div class="tip" id="fs23">val dateTime : &#39;a</div>
<div class="tip" id="fs24">module Seq<br /><br />from Microsoft.FSharp.Collections</div>
<div class="tip" id="fs25">val fold : folder:(&#39;State -&gt; &#39;T -&gt; &#39;State) -&gt; state:&#39;State -&gt; source:seq&lt;&#39;T&gt; -&gt; &#39;State</div>
<div class="tip" id="fs26">val toList : table:Map&lt;&#39;Key,&#39;T&gt; -&gt; (&#39;Key * &#39;T) list (requires comparison)</div>
<div class="tip" id="fs27">type File =<br />&#160;&#160;static member AppendAllLines : path:string * contents:IEnumerable&lt;string&gt; -&gt; unit + 1 overload<br />&#160;&#160;static member AppendAllLinesAsync : path:string * contents:IEnumerable&lt;string&gt; * ?cancellationToken:CancellationToken -&gt; Task + 1 overload<br />&#160;&#160;static member AppendAllText : path:string * contents:string -&gt; unit + 1 overload<br />&#160;&#160;static member AppendAllTextAsync : path:string * contents:string * ?cancellationToken:CancellationToken -&gt; Task + 1 overload<br />&#160;&#160;static member AppendText : path:string -&gt; StreamWriter<br />&#160;&#160;static member Copy : sourceFileName:string * destFileName:string -&gt; unit + 1 overload<br />&#160;&#160;static member Create : path:string -&gt; FileStream + 2 overloads<br />&#160;&#160;static member CreateText : path:string -&gt; StreamWriter<br />&#160;&#160;static member Decrypt : path:string -&gt; unit<br />&#160;&#160;static member Delete : path:string -&gt; unit<br />&#160;&#160;...</div>
<div class="tip" id="fs28">File.CreateText(path: string) : StreamWriter</div>
<div class="tip" id="fs29">val fprintfn : textWriter:TextWriter -&gt; format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T</div>

