<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="id">FSharp</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="id">Quotations</span>
<span class="k">open</span> <span onmouseout="hideTip(event, 'fs1', 3)" onmouseover="showTip(event, 'fs1', 3)" class="id">FSharp</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs2', 4)" onmouseover="showTip(event, 'fs2', 4)" class="id">Quotations</span><span class="pn">.</span><span class="id">Patters</span>

<span class="k">let</span> <span class="k">rec</span> <span class="pn">(</span><span class="fn">|</span><span onmouseout="hideTip(event, 'fs3', 5)" onmouseover="showTip(event, 'fs3', 5)" class="uc">List</span><span class="pn">|</span><span class="id">_</span><span class="pn">|</span><span class="pn">)</span> <span class="o">=</span>
        <span class="k">let</span> <span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="fn">isListType</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs5', 7)" onmouseover="showTip(event, 'fs5', 7)" class="id">u</span><span class="pn">:</span><span class="id">UnionCaseInfo</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 8)" onmouseover="showTip(event, 'fs5', 8)" class="id">u</span><span class="pn">.</span><span class="id">DeclaringType</span><span class="pn">.</span><span class="id">IsGenericType</span> <span class="o">&amp;&amp;</span> <span onmouseout="hideTip(event, 'fs5', 9)" onmouseover="showTip(event, 'fs5', 9)" class="id">u</span><span class="pn">.</span><span class="id">DeclaringType</span><span class="pn">.</span><span class="id">GetGenericTypeDefinition</span><span class="pn">(</span><span class="pn">)</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 10)" onmouseover="showTip(event, 'fs6', 10)" class="k">typedefof</span><span class="pn">&lt;</span><span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="rt">list</span><span class="pn">&lt;</span><span class="id">_</span><span class="pn">&gt;</span><span class="pn">&gt;</span>
        <span class="k">function</span>
        <span class="pn">|</span> <span class="id">NewUnionCase</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs8', 12)" onmouseover="showTip(event, 'fs8', 12)" class="id">uci</span><span class="pn">,</span> <span class="pn">[</span><span class="pn">]</span><span class="pn">)</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs4', 13)" onmouseover="showTip(event, 'fs4', 13)" class="fn">isListType</span> <span onmouseout="hideTip(event, 'fs8', 14)" onmouseover="showTip(event, 'fs8', 14)" class="id">uci</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="uc">Some</span> <span class="pn">[</span><span class="pn">]</span>
        <span class="pn">|</span> <span class="id">NewUnionCase</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs8', 16)" onmouseover="showTip(event, 'fs8', 16)" class="id">uci</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs10', 17)" onmouseover="showTip(event, 'fs10', 17)" class="id">lhs</span><span class="uc">::</span><span class="pn">(</span><span class="id">NewUnionCase</span><span class="pn">(</span><span class="id">_</span><span class="pn">,</span> <span class="pn">[</span><span class="pn">]</span><span class="pn">)</span><span class="pn">)</span><span class="uc">::</span><span class="pn">[</span><span class="pn">]</span><span class="pn">)</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs4', 18)" onmouseover="showTip(event, 'fs4', 18)" class="fn">isListType</span> <span onmouseout="hideTip(event, 'fs8', 19)" onmouseover="showTip(event, 'fs8', 19)" class="id">uci</span>  <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs9', 20)" onmouseover="showTip(event, 'fs9', 20)" class="uc">Some</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs10', 21)" onmouseover="showTip(event, 'fs10', 21)" class="id">lhs</span><span class="uc">::</span><span class="pn">[</span><span class="pn">]</span><span class="pn">)</span>
        <span class="pn">|</span> <span class="id">NewUnionCase</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs8', 22)" onmouseover="showTip(event, 'fs8', 22)" class="id">uci</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs10', 23)" onmouseover="showTip(event, 'fs10', 23)" class="id">lhs</span><span class="uc">::</span><span onmouseout="hideTip(event, 'fs11', 24)" onmouseover="showTip(event, 'fs11', 24)" class="uc">List</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs12', 25)" onmouseover="showTip(event, 'fs12', 25)" class="id">rhs</span><span class="pn">)</span><span class="uc">::</span><span class="pn">[</span><span class="pn">]</span><span class="pn">)</span> <span class="k">when</span> <span onmouseout="hideTip(event, 'fs4', 26)" onmouseover="showTip(event, 'fs4', 26)" class="fn">isListType</span> <span onmouseout="hideTip(event, 'fs8', 27)" onmouseover="showTip(event, 'fs8', 27)" class="id">uci</span>  <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs9', 28)" onmouseover="showTip(event, 'fs9', 28)" class="uc">Some</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs10', 29)" onmouseover="showTip(event, 'fs10', 29)" class="id">lhs</span><span class="uc">::</span><span onmouseout="hideTip(event, 'fs12', 30)" onmouseover="showTip(event, 'fs12', 30)" class="id">rhs</span><span class="pn">)</span>
        <span class="pn">|</span> <span class="id">_</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs13', 31)" onmouseover="showTip(event, 'fs13', 31)" class="uc">None</span>

<span class="c">// Usage</span>
<span class="k">match</span> <span class="pn">&lt;@</span><span class="pn">[</span><span class="n">5.</span><span class="pn">;</span><span class="n">6.</span><span class="pn">;</span><span class="n">7.</span><span class="pn">;</span><span class="n">8.</span><span class="pn">]</span><span class="pn">@&gt;</span> <span class="k">with</span>
<span class="pn">|</span> <span onmouseout="hideTip(event, 'fs11', 32)" onmouseover="showTip(event, 'fs11', 32)" class="uc">List</span> <span onmouseout="hideTip(event, 'fs14', 33)" onmouseover="showTip(event, 'fs14', 33)" class="id">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs15', 34)" onmouseover="showTip(event, 'fs15', 34)" class="fn">printf</span> <span class="s">&quot;</span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs14', 35)" onmouseover="showTip(event, 'fs14', 35)" class="id">e</span>
<span class="pn">|</span> <span class="id">_</span> <span class="k">-&gt;</span> <span class="pn">(</span><span class="pn">)</span>

<span class="k">match</span> <span class="pn">&lt;@</span><span class="pn">[</span><span class="pn">[</span><span class="n">5.</span><span class="pn">;</span><span class="n">6.</span><span class="pn">;</span><span class="n">7.</span><span class="pn">]</span><span class="pn">;</span><span class="pn">[</span><span class="n">8.</span><span class="pn">]</span><span class="pn">]</span><span class="pn">@&gt;</span> <span class="k">with</span>
<span class="pn">|</span> <span onmouseout="hideTip(event, 'fs11', 36)" onmouseover="showTip(event, 'fs11', 36)" class="uc">List</span> <span onmouseout="hideTip(event, 'fs16', 37)" onmouseover="showTip(event, 'fs16', 37)" class="id">e</span> <span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs16', 38)" onmouseover="showTip(event, 'fs16', 38)" class="id">e</span> <span class="o">|&gt;</span> <span onmouseout="hideTip(event, 'fs11', 39)" onmouseover="showTip(event, 'fs11', 39)" class="m">List</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs17', 40)" onmouseover="showTip(event, 'fs17', 40)" class="id">map</span> <span class="pn">(</span><span class="k">function</span> <span class="pn">|</span><span onmouseout="hideTip(event, 'fs11', 41)" onmouseover="showTip(event, 'fs11', 41)" class="uc">List</span> <span onmouseout="hideTip(event, 'fs18', 42)" onmouseover="showTip(event, 'fs18', 42)" class="id">ee</span><span class="k">-&gt;</span> <span onmouseout="hideTip(event, 'fs15', 43)" onmouseover="showTip(event, 'fs15', 43)" class="fn">printf</span> <span class="s">&quot;</span><span class="pf">%A</span><span class="s">&quot;</span> <span onmouseout="hideTip(event, 'fs18', 44)" onmouseover="showTip(event, 'fs18', 44)" class="id">ee</span> <span class="pn">|</span> <span class="id">_</span> <span class="k">-&gt;</span><span class="pn">(</span><span class="pn">)</span><span class="pn">)</span>
<span class="pn">|</span> <span class="id">_</span> <span class="k">-&gt;</span> <span class="pn">[</span><span class="pn">]</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">namespace Microsoft.FSharp</div>
<div class="tip" id="fs2">namespace Microsoft.FSharp.Quotations</div>
<div class="tip" id="fs3">Multiple items<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;&#160;&#160;interface IReadOnlyList&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;interface IReadOnlyCollection&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;interface IEnumerable<br />&#160;&#160;&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;member GetReverseIndex : rank:int * offset:int -&gt; int<br />&#160;&#160;&#160;&#160;member GetSlice : startIndex:int option * endIndex:int option -&gt; &#39;T list<br />&#160;&#160;&#160;&#160;member Head : &#39;T<br />&#160;&#160;&#160;&#160;member IsEmpty : bool<br />&#160;&#160;&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;&#160;&#160;member Length : int<br />&#160;&#160;&#160;&#160;...</div>
<div class="tip" id="fs4">val isListType : (&#39;b -&gt; bool)</div>
<div class="tip" id="fs5">val u : &#39;b</div>
<div class="tip" id="fs6">val typedefof&lt;&#39;T&gt; : System.Type</div>
<div class="tip" id="fs7">type &#39;T list = List&lt;&#39;T&gt;</div>
<div class="tip" id="fs8">val uci : obj</div>
<div class="tip" id="fs9">union case Option.Some: Value: &#39;T -&gt; Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs10">val lhs : &#39;a</div>
<div class="tip" id="fs11">Multiple items<br />active recognizer List: &#39;a -&gt; &#39;a list option<br /><br />--------------------<br />module List<br /><br />from Microsoft.FSharp.Collections<br /><br />--------------------<br />type List&lt;&#39;T&gt; =<br />&#160;&#160;| ( [] )<br />&#160;&#160;| ( :: ) of Head: &#39;T * Tail: &#39;T list<br />&#160;&#160;&#160;&#160;interface IReadOnlyList&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;interface IReadOnlyCollection&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;interface IEnumerable<br />&#160;&#160;&#160;&#160;interface IEnumerable&lt;&#39;T&gt;<br />&#160;&#160;&#160;&#160;member GetReverseIndex : rank:int * offset:int -&gt; int<br />&#160;&#160;&#160;&#160;member GetSlice : startIndex:int option * endIndex:int option -&gt; &#39;T list<br />&#160;&#160;&#160;&#160;member Head : &#39;T<br />&#160;&#160;&#160;&#160;member IsEmpty : bool<br />&#160;&#160;&#160;&#160;member Item : index:int -&gt; &#39;T with get<br />&#160;&#160;&#160;&#160;member Length : int<br />&#160;&#160;&#160;&#160;...</div>
<div class="tip" id="fs12">val rhs : &#39;a list</div>
<div class="tip" id="fs13">union case Option.None: Option&lt;&#39;T&gt;</div>
<div class="tip" id="fs14">val e : Expr&lt;float list&gt; list</div>
<div class="tip" id="fs15">val printf : format:Printf.TextWriterFormat&lt;&#39;T&gt; -&gt; &#39;T</div>
<div class="tip" id="fs16">val e : Expr&lt;float list list&gt; list</div>
<div class="tip" id="fs17">val map : mapping:(&#39;T -&gt; &#39;U) -&gt; list:&#39;T list -&gt; &#39;U list</div>
<div class="tip" id="fs18">val ee : Expr&lt;float list list&gt; list</div>

