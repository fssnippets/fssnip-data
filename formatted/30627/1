<table class="pre"><tr><td class="lines"><pre class="fssnip"><span class="l"> 1: </span>
<span class="l"> 2: </span>
<span class="l"> 3: </span>
<span class="l"> 4: </span>
<span class="l"> 5: </span>
<span class="l"> 6: </span>
<span class="l"> 7: </span>
<span class="l"> 8: </span>
<span class="l"> 9: </span>
<span class="l">10: </span>
<span class="l">11: </span>
<span class="l">12: </span>
<span class="l">13: </span>
<span class="l">14: </span>
<span class="l">15: </span>
<span class="l">16: </span>
<span class="l">17: </span>
<span class="l">18: </span>
<span class="l">19: </span>
<span class="l">20: </span>
</pre></td>
<td class="snippet"><pre class="fssnip highlighted"><code lang="fsharp"><span class="k">type</span> <span onmouseout="hideTip(event, 'fs1', 1)" onmouseover="showTip(event, 'fs1', 1)" class="rt">AsyncBuilder</span> <span class="k">with</span>
    <span class="k">member</span> <span onmouseout="hideTip(event, 'fs2', 2)" onmouseover="showTip(event, 'fs2', 2)" class="id">async</span><span class="pn">.</span><span class="fn">MergeSources</span><span class="pn">(</span><span onmouseout="hideTip(event, 'fs3', 3)" onmouseover="showTip(event, 'fs3', 3)" class="id">left</span> <span class="pn">:</span> <span onmouseout="hideTip(event, 'fs4', 4)" onmouseover="showTip(event, 'fs4', 4)" class="rt">Async</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">T</span><span class="pn">&gt;</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs5', 5)" onmouseover="showTip(event, 'fs5', 5)" class="id">right</span> <span class="pn">:</span> <span onmouseout="hideTip(event, 'fs4', 6)" onmouseover="showTip(event, 'fs4', 6)" class="rt">Async</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">S</span><span class="pn">&gt;</span><span class="pn">)</span> <span class="pn">:</span> <span onmouseout="hideTip(event, 'fs4', 7)" onmouseover="showTip(event, 'fs4', 7)" class="rt">Async</span><span class="pn">&lt;</span><span class="ta">&#39;</span><span class="id">T</span> <span class="pn">*</span> <span class="ta">&#39;</span><span class="id">S</span><span class="pn">&gt;</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 8)" onmouseover="showTip(event, 'fs2', 8)" class="k">async</span> <span class="pn">{</span>
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs6', 9)" onmouseover="showTip(event, 'fs6', 9)" class="id">leftTask</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 10)" onmouseover="showTip(event, 'fs4', 10)" class="rt">Async</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs7', 11)" onmouseover="showTip(event, 'fs7', 11)" class="id">StartChild</span> <span onmouseout="hideTip(event, 'fs3', 12)" onmouseover="showTip(event, 'fs3', 12)" class="id">left</span> <span class="k">in</span>
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs8', 13)" onmouseover="showTip(event, 'fs8', 13)" class="id">rightResult</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs5', 14)" onmouseover="showTip(event, 'fs5', 14)" class="id">right</span> <span class="k">in</span>
        <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs9', 15)" onmouseover="showTip(event, 'fs9', 15)" class="id">leftResult</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs6', 16)" onmouseover="showTip(event, 'fs6', 16)" class="id">leftTask</span> <span class="k">in</span>
        <span class="k">return</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs9', 17)" onmouseover="showTip(event, 'fs9', 17)" class="id">leftResult</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs8', 18)" onmouseover="showTip(event, 'fs8', 18)" class="id">rightResult</span><span class="pn">)</span>
    <span class="pn">}</span>

<span class="k">let</span> <span onmouseout="hideTip(event, 'fs10', 19)" onmouseover="showTip(event, 'fs10', 19)" class="id">test</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 20)" onmouseover="showTip(event, 'fs2', 20)" class="k">async</span> <span class="pn">{</span>
    <span class="k">let</span> <span onmouseout="hideTip(event, 'fs11', 21)" onmouseover="showTip(event, 'fs11', 21)" class="fn">f</span> <span onmouseout="hideTip(event, 'fs12', 22)" onmouseover="showTip(event, 'fs12', 22)" class="id">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs2', 23)" onmouseover="showTip(event, 'fs2', 23)" class="k">async</span> <span class="pn">{</span> <span class="k">let!</span> <span class="id">_</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs4', 24)" onmouseover="showTip(event, 'fs4', 24)" class="rt">Async</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs13', 25)" onmouseover="showTip(event, 'fs13', 25)" class="id">Sleep</span> <span class="n">10_000</span> <span class="k">in</span> <span class="k">return</span> <span onmouseout="hideTip(event, 'fs12', 26)" onmouseover="showTip(event, 'fs12', 26)" class="id">x</span> <span class="pn">}</span>
    <span class="k">let!</span> <span onmouseout="hideTip(event, 'fs14', 27)" onmouseover="showTip(event, 'fs14', 27)" class="id">x</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 28)" onmouseover="showTip(event, 'fs11', 28)" class="fn">f</span> <span class="k">false</span>
    <span class="k">and!</span> <span onmouseout="hideTip(event, 'fs15', 29)" onmouseover="showTip(event, 'fs15', 29)" class="id">y</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 30)" onmouseover="showTip(event, 'fs11', 30)" class="fn">f</span> <span class="n">42</span>
    <span class="k">and!</span> <span onmouseout="hideTip(event, 'fs16', 31)" onmouseover="showTip(event, 'fs16', 31)" class="id">z</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fs11', 32)" onmouseover="showTip(event, 'fs11', 32)" class="fn">f</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs17', 33)" onmouseover="showTip(event, 'fs17', 33)" class="k">nameof</span> <span onmouseout="hideTip(event, 'fs11', 34)" onmouseover="showTip(event, 'fs11', 34)" class="fn">f</span><span class="pn">)</span>
    <span class="k">return</span> <span class="pn">(</span><span onmouseout="hideTip(event, 'fs14', 35)" onmouseover="showTip(event, 'fs14', 35)" class="id">x</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs15', 36)" onmouseover="showTip(event, 'fs15', 36)" class="id">y</span><span class="pn">,</span> <span onmouseout="hideTip(event, 'fs16', 37)" onmouseover="showTip(event, 'fs16', 37)" class="id">z</span><span class="pn">)</span>
<span class="pn">}</span>

<span class="pp">#time</span> <span class="s">&quot;on&quot;</span>
<span onmouseout="hideTip(event, 'fs4', 38)" onmouseover="showTip(event, 'fs4', 38)" class="rt">Async</span><span class="pn">.</span><span onmouseout="hideTip(event, 'fs18', 39)" onmouseover="showTip(event, 'fs18', 39)" class="id">RunSynchronously</span> <span onmouseout="hideTip(event, 'fs10', 40)" onmouseover="showTip(event, 'fs10', 40)" class="id">test</span>
<span class="c">// Real: 00:00:10.022, CPU: 00:00:00.000, GC gen0: 3, gen1: 3, gen2: 0</span>
<span class="c">// val it : bool * int * string = (false, 42, &quot;f&quot;)</span>
</code></pre></td>
</tr>
</table>
<div class="tip" id="fs1">type AsyncBuilder =<br />&#160;&#160;private new : unit -&gt; AsyncBuilder<br />&#160;&#160;member Bind : computation:Async&lt;&#39;T&gt; * binder:(&#39;T -&gt; Async&lt;&#39;U&gt;) -&gt; Async&lt;&#39;U&gt;<br />&#160;&#160;member Combine : computation1:Async&lt;unit&gt; * computation2:Async&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;<br />&#160;&#160;member Delay : generator:(unit -&gt; Async&lt;&#39;T&gt;) -&gt; Async&lt;&#39;T&gt;<br />&#160;&#160;member For : sequence:seq&lt;&#39;T&gt; * body:(&#39;T -&gt; Async&lt;unit&gt;) -&gt; Async&lt;unit&gt;<br />&#160;&#160;member Return : value:&#39;T -&gt; Async&lt;&#39;T&gt;<br />&#160;&#160;member ReturnFrom : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;<br />&#160;&#160;member TryFinally : computation:Async&lt;&#39;T&gt; * compensation:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />&#160;&#160;member TryWith : computation:Async&lt;&#39;T&gt; * catchHandler:(exn -&gt; Async&lt;&#39;T&gt;) -&gt; Async&lt;&#39;T&gt;<br />&#160;&#160;member Using : resource:&#39;T * binder:(&#39;T -&gt; Async&lt;&#39;U&gt;) -&gt; Async&lt;&#39;U&gt; (requires &#39;T :&gt; IDisposable)<br />&#160;&#160;...</div>
<div class="tip" id="fs2">val async : AsyncBuilder</div>
<div class="tip" id="fs3">val left : Async&lt;&#39;T&gt;</div>
<div class="tip" id="fs4">Multiple items<br />type Async =<br />&#160;&#160;static member AsBeginEnd : computation:(&#39;Arg -&gt; Async&lt;&#39;T&gt;) -&gt; (&#39;Arg * AsyncCallback * obj -&gt; IAsyncResult) * (IAsyncResult -&gt; &#39;T) * (IAsyncResult -&gt; unit)<br />&#160;&#160;static member AwaitEvent : event:IEvent&lt;&#39;Del,&#39;T&gt; * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt; (requires delegate and &#39;Del :&gt; Delegate)<br />&#160;&#160;static member AwaitIAsyncResult : iar:IAsyncResult * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />&#160;&#160;static member AwaitTask : task:Task -&gt; Async&lt;unit&gt;<br />&#160;&#160;static member AwaitTask : task:Task&lt;&#39;T&gt; -&gt; Async&lt;&#39;T&gt;<br />&#160;&#160;static member AwaitWaitHandle : waitHandle:WaitHandle * ?millisecondsTimeout:int -&gt; Async&lt;bool&gt;<br />&#160;&#160;static member CancelDefaultToken : unit -&gt; unit<br />&#160;&#160;static member Catch : computation:Async&lt;&#39;T&gt; -&gt; Async&lt;Choice&lt;&#39;T,exn&gt;&gt;<br />&#160;&#160;static member Choice : computations:seq&lt;Async&lt;&#39;T option&gt;&gt; -&gt; Async&lt;&#39;T option&gt;<br />&#160;&#160;static member FromBeginEnd : beginAction:(AsyncCallback * obj -&gt; IAsyncResult) * endAction:(IAsyncResult -&gt; &#39;T) * ?cancelAction:(unit -&gt; unit) -&gt; Async&lt;&#39;T&gt;<br />&#160;&#160;...<br /><br />--------------------<br />type Async&lt;&#39;T&gt; =</div>
<div class="tip" id="fs5">val right : Async&lt;&#39;S&gt;</div>
<div class="tip" id="fs6">val leftTask : Async&lt;&#39;T&gt;</div>
<div class="tip" id="fs7">static member Async.StartChild : computation:Async&lt;&#39;T&gt; * ?millisecondsTimeout:int -&gt; Async&lt;Async&lt;&#39;T&gt;&gt;</div>
<div class="tip" id="fs8">val rightResult : &#39;S</div>
<div class="tip" id="fs9">val leftResult : &#39;T</div>
<div class="tip" id="fs10">val test : Async&lt;bool * int * string&gt;</div>
<div class="tip" id="fs11">val f : (&#39;a -&gt; Async&lt;&#39;a&gt;)</div>
<div class="tip" id="fs12">val x : &#39;a</div>
<div class="tip" id="fs13">static member Async.Sleep : millisecondsDueTime:int -&gt; Async&lt;unit&gt;</div>
<div class="tip" id="fs14">val x : bool</div>
<div class="tip" id="fs15">val y : int</div>
<div class="tip" id="fs16">val z : string</div>
<div class="tip" id="fs17">val nameof : &#39;T -&gt; string</div>
<div class="tip" id="fs18">static member Async.RunSynchronously : computation:Async&lt;&#39;T&gt; * ?timeout:int * ?cancellationToken:System.Threading.CancellationToken -&gt; &#39;T</div>

