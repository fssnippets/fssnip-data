/// Calculates progressive tax on annual income
let calcProgressiveTax taxBrackets income =
  taxBrackets @ [(System.Double.MaxValue, 0.0);]
  |> Seq.windowed 2
  |> Seq.fold (fun (incomeLeft, tax) bracket ->
         let bracketLo, rate = bracket.[0]
         let bracketHi = fst bracket.[1]
         let bracketWd = bracketHi - bracketLo
         max 0.0 (incomeLeft-bracketWd), tax + rate * min incomeLeft bracketWd)
       (income, 0.0)
  |> snd

// Usage
let incomeTaxBelgium2016 =  //   Taxable Income    Tax Rate on
  [                         //   Bracket, EUR      Income in Bracket
  (    0.00, 0.25);         //      0 .. 10,860      25%
  (10860.00, 0.30);         // 10,860 .. 12,470      30%
  (12470.00, 0.40);         // 12,470 .. 20,780      40%
  (20780.00, 0.45);         // 20,780 .. 38,080      45%
  (38080.00, 0.50);         // 38,080 ..  over       50%
  ]

calcProgressiveTax incomeTaxBelgium2016 70000.00
// Returns: 30,267.00
